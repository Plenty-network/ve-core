parameter (or (or (or (unit %accept_add_admin) (unit %accept_remove_admin)) (or (pair %add_amm (address %amm) (pair (address %lp_token_address) (set %tokens (or (address %fa12) (or (pair %fa2 address nat) (unit %tez)))))) (unit %default))) (or (or (address %propose_add_admin) (address %propose_remove_admin)) (or (address %remove_amm) (address %set_fee_distributor))));
storage   (pair (pair (pair (address %add_admin) (big_map %amm_registered address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter)))));
code
  {
    UNPAIR;     # @parameter : @storage
    IF_LEFT
      {
        IF_LEFT
          {
            IF_LEFT
              {
                DROP;       # @storage
                # == accept_add_admin ==
                # sp.verify(sp.amount == sp.tez(0), 'ENTRYPOINT_DOES_NOT_ACCEPT_TEZ') # @storage
                PUSH mutez 0; # mutez : @storage
                AMOUNT;     # @amount : mutez : @storage
                COMPARE;    # int : @storage
                EQ;         # bool : @storage
                IF
                  {}
                  {
                    PUSH string "ENTRYPOINT_DOES_NOT_ACCEPT_TEZ"; # string : @storage
                    FAILWITH;   # FAILED
                  }; # @storage
                # sp.verify(self.data.proposed_add_admin.is_some(), 'NO_ADMIN_PROPOSED') # @storage
                DUP;        # @storage : @storage
                GET 3;      # pair (option %proposed_add_admin address) (option %proposed_remove_admin address) : @storage
                CAR;        # option address : @storage
                IF_NONE
                  {
                    PUSH string "NO_ADMIN_PROPOSED"; # string : @storage
                    FAILWITH;   # FAILED
                  }
                  {
                    DROP;       # @storage
                  }; # @storage
                # sp.verify(sp.sender == self.data.proposed_add_admin.open_some(), 'NOT_AUTHORISED') # @storage
                DUP;        # @storage : @storage
                GET 3;      # pair (option %proposed_add_admin address) (option %proposed_remove_admin address) : @storage
                CAR;        # option address : @storage
                IF_NONE
                  {
                    PUSH int 230; # int : @storage
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : @storage
                SENDER;     # @sender : @some : @storage
                COMPARE;    # int : @storage
                EQ;         # bool : @storage
                IF
                  {}
                  {
                    PUSH string "NOT_AUTHORISED"; # string : @storage
                    FAILWITH;   # FAILED
                  }; # @storage
                # self.data.add_admin = sp.sender # @storage
                UNPAIR;     # pair (pair (address %add_admin) (big_map %amm_registered address unit)) (pair (address %fee_distributor) (address %ply_address)) : pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter)))
                UNPAIR;     # pair (address %add_admin) (big_map %amm_registered address unit) : pair (address %fee_distributor) (address %ply_address) : pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter)))
                CDR;        # big_map address unit : pair (address %fee_distributor) (address %ply_address) : pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter)))
                SENDER;     # @sender : big_map address unit : pair (address %fee_distributor) (address %ply_address) : pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter)))
                PAIR;       # pair @sender (big_map address unit) : pair (address %fee_distributor) (address %ply_address) : pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter)))
                PAIR;       # pair (pair @sender (big_map address unit)) (pair (address %fee_distributor) (address %ply_address)) : pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter)))
                SWAP;       # pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))) : pair (pair @sender (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))
                # self.data.proposed_add_admin = sp.none # pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))) : pair (pair @sender (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))
                UNPAIR;     # pair (option %proposed_add_admin address) (option %proposed_remove_admin address) : pair (address %remove_admin) (pair (address %ve_address) (address %voter)) : pair (pair @sender (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))
                CDR;        # option address : pair (address %remove_admin) (pair (address %ve_address) (address %voter)) : pair (pair @sender (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))
                NONE address; # option address : option address : pair (address %remove_admin) (pair (address %ve_address) (address %voter)) : pair (pair @sender (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))
                PAIR;       # pair (option address) (option address) : pair (address %remove_admin) (pair (address %ve_address) (address %voter)) : pair (pair @sender (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))
                PAIR;       # pair (pair (option address) (option address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))) : pair (pair @sender (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))
                SWAP;       # pair (pair @sender (big_map address unit)) (pair (address %fee_distributor) (address %ply_address)) : pair (pair (option address) (option address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter)))
                PAIR;       # pair (pair (pair @sender (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option address) (option address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
              }
              {
                DROP;       # @storage
                # == accept_remove_admin ==
                # sp.verify(sp.amount == sp.tez(0), 'ENTRYPOINT_DOES_NOT_ACCEPT_TEZ') # @storage
                PUSH mutez 0; # mutez : @storage
                AMOUNT;     # @amount : mutez : @storage
                COMPARE;    # int : @storage
                EQ;         # bool : @storage
                IF
                  {}
                  {
                    PUSH string "ENTRYPOINT_DOES_NOT_ACCEPT_TEZ"; # string : @storage
                    FAILWITH;   # FAILED
                  }; # @storage
                # sp.verify(self.data.proposed_remove_admin.is_some(), 'NO_ADMIN_PROPOSED') # @storage
                DUP;        # @storage : @storage
                GET 3;      # pair (option %proposed_add_admin address) (option %proposed_remove_admin address) : @storage
                CDR;        # option address : @storage
                IF_NONE
                  {
                    PUSH string "NO_ADMIN_PROPOSED"; # string : @storage
                    FAILWITH;   # FAILED
                  }
                  {
                    DROP;       # @storage
                  }; # @storage
                # sp.verify(sp.sender == self.data.proposed_remove_admin.open_some(), 'NOT_AUTHORISED') # @storage
                DUP;        # @storage : @storage
                GET 3;      # pair (option %proposed_add_admin address) (option %proposed_remove_admin address) : @storage
                CDR;        # option address : @storage
                IF_NONE
                  {
                    PUSH int 243; # int : @storage
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : @storage
                SENDER;     # @sender : @some : @storage
                COMPARE;    # int : @storage
                EQ;         # bool : @storage
                IF
                  {}
                  {
                    PUSH string "NOT_AUTHORISED"; # string : @storage
                    FAILWITH;   # FAILED
                  }; # @storage
                # self.data.remove_admin = sp.sender # @storage
                SENDER;     # @sender : @storage
                UPDATE 5;   # @storage
                # self.data.proposed_remove_admin = sp.none # @storage
                UNPAIR;     # pair (pair (address %add_admin) (big_map %amm_registered address unit)) (pair (address %fee_distributor) (address %ply_address)) : pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter)))
                SWAP;       # pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))) : pair (pair (address %add_admin) (big_map %amm_registered address unit)) (pair (address %fee_distributor) (address %ply_address))
                UNPAIR;     # pair (option %proposed_add_admin address) (option %proposed_remove_admin address) : pair (address %remove_admin) (pair (address %ve_address) (address %voter)) : pair (pair (address %add_admin) (big_map %amm_registered address unit)) (pair (address %fee_distributor) (address %ply_address))
                CAR;        # option address : pair (address %remove_admin) (pair (address %ve_address) (address %voter)) : pair (pair (address %add_admin) (big_map %amm_registered address unit)) (pair (address %fee_distributor) (address %ply_address))
                NONE address; # option address : option address : pair (address %remove_admin) (pair (address %ve_address) (address %voter)) : pair (pair (address %add_admin) (big_map %amm_registered address unit)) (pair (address %fee_distributor) (address %ply_address))
                SWAP;       # option address : option address : pair (address %remove_admin) (pair (address %ve_address) (address %voter)) : pair (pair (address %add_admin) (big_map %amm_registered address unit)) (pair (address %fee_distributor) (address %ply_address))
                PAIR;       # pair (option address) (option address) : pair (address %remove_admin) (pair (address %ve_address) (address %voter)) : pair (pair (address %add_admin) (big_map %amm_registered address unit)) (pair (address %fee_distributor) (address %ply_address))
                PAIR;       # pair (pair (option address) (option address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))) : pair (pair (address %add_admin) (big_map %amm_registered address unit)) (pair (address %fee_distributor) (address %ply_address))
                SWAP;       # pair (pair (address %add_admin) (big_map %amm_registered address unit)) (pair (address %fee_distributor) (address %ply_address)) : pair (pair (option address) (option address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter)))
                PAIR;       # pair (pair (pair (address %add_admin) (big_map %amm_registered address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option address) (option address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
              }; # pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option address) (option address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
            NIL operation; # list operation : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option address) (option address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
          }
          {
            IF_LEFT
              {
                # == add_amm ==
                # sp.verify(sp.amount == sp.tez(0), 'ENTRYPOINT_DOES_NOT_ACCEPT_TEZ') # @parameter%add_amm : @storage
                PUSH mutez 0; # mutez : @parameter%add_amm : @storage
                AMOUNT;     # @amount : mutez : @parameter%add_amm : @storage
                COMPARE;    # int : @parameter%add_amm : @storage
                EQ;         # bool : @parameter%add_amm : @storage
                IF
                  {}
                  {
                    PUSH string "ENTRYPOINT_DOES_NOT_ACCEPT_TEZ"; # string : @parameter%add_amm : @storage
                    FAILWITH;   # FAILED
                  }; # @parameter%add_amm : @storage
                SWAP;       # @storage : @parameter%add_amm
                # sp.verify(sp.sender == self.data.add_admin, 'NOT_AUTHORISED') # @storage : @parameter%add_amm
                DUP;        # @storage : @storage : @parameter%add_amm
                DUG 2;      # @storage : @parameter%add_amm : @storage
                CAR;        # pair (pair (address %add_admin) (big_map %amm_registered address unit)) (pair (address %fee_distributor) (address %ply_address)) : @parameter%add_amm : @storage
                CAR;        # pair (address %add_admin) (big_map %amm_registered address unit) : @parameter%add_amm : @storage
                CAR;        # address : @parameter%add_amm : @storage
                SENDER;     # @sender : address : @parameter%add_amm : @storage
                COMPARE;    # int : @parameter%add_amm : @storage
                EQ;         # bool : @parameter%add_amm : @storage
                IF
                  {}
                  {
                    PUSH string "NOT_AUTHORISED"; # string : @parameter%add_amm : @storage
                    FAILWITH;   # FAILED
                  }; # @parameter%add_amm : @storage
                SWAP;       # @storage : @parameter%add_amm
                # sp.verify(~ (self.data.amm_registered.contains(params.amm)), 'AMM_ALREADY_ADDED') # @storage : @parameter%add_amm
                DUP;        # @storage : @storage : @parameter%add_amm
                DUG 2;      # @storage : @parameter%add_amm : @storage
                CAR;        # pair (pair (address %add_admin) (big_map %amm_registered address unit)) (pair (address %fee_distributor) (address %ply_address)) : @parameter%add_amm : @storage
                CAR;        # pair (address %add_admin) (big_map %amm_registered address unit) : @parameter%add_amm : @storage
                CDR;        # big_map address unit : @parameter%add_amm : @storage
                SWAP;       # @parameter%add_amm : big_map address unit : @storage
                DUP;        # @parameter%add_amm : @parameter%add_amm : big_map address unit : @storage
                DUG 2;      # @parameter%add_amm : big_map address unit : @parameter%add_amm : @storage
                CAR;        # address : big_map address unit : @parameter%add_amm : @storage
                MEM;        # bool : @parameter%add_amm : @storage
                IF
                  {
                    PUSH string "AMM_ALREADY_ADDED"; # string : @parameter%add_amm : @storage
                    FAILWITH;   # FAILED
                  }
                  {}; # @parameter%add_amm : @storage
                SWAP;       # @storage : @parameter%add_amm
                # self.data.amm_registered[params.amm] = sp.unit # @storage : @parameter%add_amm
                UNPAIR;     # pair (pair (address %add_admin) (big_map %amm_registered address unit)) (pair (address %fee_distributor) (address %ply_address)) : pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))) : @parameter%add_amm
                UNPAIR;     # pair (address %add_admin) (big_map %amm_registered address unit) : pair (address %fee_distributor) (address %ply_address) : pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))) : @parameter%add_amm
                UNPAIR;     # address : big_map address unit : pair (address %fee_distributor) (address %ply_address) : pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))) : @parameter%add_amm
                SWAP;       # big_map address unit : address : pair (address %fee_distributor) (address %ply_address) : pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))) : @parameter%add_amm
                PUSH (option unit) (Some Unit); # option unit : big_map address unit : address : pair (address %fee_distributor) (address %ply_address) : pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))) : @parameter%add_amm
                DUP 6;      # @parameter%add_amm : option unit : big_map address unit : address : pair (address %fee_distributor) (address %ply_address) : pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))) : @parameter%add_amm
                CAR;        # address : option unit : big_map address unit : address : pair (address %fee_distributor) (address %ply_address) : pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))) : @parameter%add_amm
                UPDATE;     # big_map address unit : address : pair (address %fee_distributor) (address %ply_address) : pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))) : @parameter%add_amm
                SWAP;       # address : big_map address unit : pair (address %fee_distributor) (address %ply_address) : pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))) : @parameter%add_amm
                PAIR;       # pair address (big_map address unit) : pair (address %fee_distributor) (address %ply_address) : pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))) : @parameter%add_amm
                PAIR;       # pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address)) : pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))) : @parameter%add_amm
                PAIR;       # pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter)))) : @parameter%add_amm
                SWAP;       # @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                # sp.result(sp.record(attached_tokens = {}, balances = {}, derived_balances = {}, derived_supply = 0, last_update_time = 0, lp_token_address = params.lp_token_address, period_finish = 0, ply_address = self.data.ply_address, recharge_ledger = {}, reward_per_token = 0, reward_rate = 0, rewards = {}, total_supply = 0, user_reward_per_token_debt = {}, ve_address = self.data.ve_address, voter = self.data.voter))
                # def f_x0(_x0):
                #   sp.set_type(_x0, sp.TRecord(address = sp.TAddress, token_id = sp.TNat).layout(("address", "token_id")))
                #   compute_gauge_164 = sp.local("compute_gauge_164", self.data.balances[_x0.address])
                #   compute_gauge_166 = sp.local("compute_gauge_166", self.data.derived_balances.get(_x0.address, default_value = 0))
                #   sp.if compute_gauge_166.value != 0:
                #     self.data.derived_supply = sp.as_nat(self.data.derived_supply - compute_gauge_166.value)
                #   compute_gauge_172 = sp.local("compute_gauge_172", sp.as_nat(sp.now - sp.timestamp(0)))
                #   mark_up = sp.local("mark_up", 0)
                #   sp.if _x0.token_id != 0:
                #     mark_up.value = (((self.data.total_supply * sp.view("get_token_voting_power", self.data.ve_address, sp.record(time = 0, token_id = _x0.token_id, ts = compute_gauge_172.value), sp.TNat).open_some(message = 'INVALID_VIEW')) // sp.view("get_total_voting_power", self.data.ve_address, sp.record(time = 0, ts = compute_gauge_172.value), sp.TNat).open_some(message = 'INVALID_VIEW')) * 60) // 100
                #   self.data.derived_balances[_x0.address] = sp.min(((compute_gauge_164.value * 40) // 100) + mark_up.value, compute_gauge_164.value)
                #   self.data.derived_supply += self.data.derived_balances[_x0.address]
                # def f_x1(_x1):
                #   sp.set_type(_x1, sp.TAddress)
                #   compute_gauge_126 = sp.local("compute_gauge_126", sp.as_nat(sp.now - sp.timestamp(0)))
                #   compute_gauge_129 = sp.local("compute_gauge_129", self.data.period_finish)
                #   reward_per_token_ = sp.local("reward_per_token_", self.data.reward_per_token)
                #   sp.if self.data.total_supply != 0:
                #     reward_per_token_.value += ((sp.as_nat(sp.min(compute_gauge_126.value, compute_gauge_129.value) - self.data.last_update_time) * self.data.reward_rate) * 1000000000000000000) // self.data.derived_supply
                #   self.data.reward_per_token = reward_per_token_.value
                #   compute_gauge_140 = sp.local("compute_gauge_140", self.data.reward_per_token)
                #   self.data.last_update_time = sp.min(compute_gauge_126.value, compute_gauge_129.value)
                #   sp.if _x1 != sp.address('KT1TezoooozzSmartPyzzDYNAMiCzzpLu4LU'):
                #     self.data.rewards[_x1] = self.data.rewards.get(_x1, default_value = 0) + ((self.data.derived_balances.get(_x1, default_value = 0) * sp.as_nat(compute_gauge_140.value - self.data.user_reward_per_token_debt.get(_x1, default_value = 0))) // 1000000000000000000)
                #     self.data.user_reward_per_token_debt[_x1] = compute_gauge_140.value
                # create_contract_core_factory_103 = sp.local("create_contract_core_factory_103", create contract ...) # @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                NIL operation; # list operation : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                PUSH (pair address address) (Pair "tz1RBkXZSiQb3fS7Sg3zbFdPMBFPJUNHdcFo" "tz1RBkXZSiQb3fS7Sg3zbFdPMBFPJUNHdcFo"); # pair address address : list operation : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                EMPTY_BIG_MAP address nat; # big_map address nat : pair address address : list operation : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                PUSH nat 0; # nat : big_map address nat : pair address address : list operation : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                PAIR;       # pair nat (big_map address nat) : pair address address : list operation : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                PAIR;       # pair (pair nat (big_map address nat)) (pair address address) : list operation : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                EMPTY_BIG_MAP address nat; # big_map address nat : pair (pair nat (big_map address nat)) (pair address address) : list operation : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                PUSH nat 0; # nat : big_map address nat : pair (pair nat (big_map address nat)) (pair address address) : list operation : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                PAIR;       # pair nat (big_map address nat) : pair (pair nat (big_map address nat)) (pair address address) : list operation : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                PUSH nat 0; # nat : pair nat (big_map address nat) : pair (pair nat (big_map address nat)) (pair address address) : list operation : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                EMPTY_BIG_MAP nat unit; # big_map nat unit : nat : pair nat (big_map address nat) : pair (pair nat (big_map address nat)) (pair address address) : list operation : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                PAIR;       # pair (big_map nat unit) nat : pair nat (big_map address nat) : pair (pair nat (big_map address nat)) (pair address address) : list operation : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                PAIR;       # pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair nat (big_map address nat)) (pair address address) : list operation : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                PAIR;       # pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : list operation : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                PUSH (pair (pair nat address) (pair nat address)) (Pair (Pair 0 "tz1az7uQWFeuFd1XB9thkXrtEMfQ8TvP1GsF") (Pair 0 "tz1az7uQWFeuFd1XB9thkXrtEMfQ8TvP1GsF")); # pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : list operation : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                PUSH nat 0; # nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : list operation : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                EMPTY_BIG_MAP address nat; # big_map address nat : nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : list operation : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                PAIR;       # pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : list operation : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                EMPTY_BIG_MAP address nat; # big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : list operation : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                EMPTY_BIG_MAP address nat; # big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : list operation : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                PAIR;       # pair (big_map address nat) (big_map address nat) : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : list operation : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                PAIR;       # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : list operation : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                PAIR;       # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : list operation : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                PAIR;       # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : list operation : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                PUSH mutez 0; # mutez : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : list operation : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                NONE key_hash; # option key_hash : mutez : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : list operation : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                CREATE_CONTRACT
                 { parameter (or (or (unit %default) (unit %get_reward)) (or (pair %recharge (nat %amount) (nat %epoch)) (or (pair %stake (nat %amount) (nat %token_id)) (nat %withdraw))));
                   storage   (pair (pair (pair (pair (big_map %attached_tokens address nat) (big_map %balances address nat)) (pair (big_map %derived_balances address nat) (nat %derived_supply))) (pair (pair (nat %last_update_time) (address %lp_token_address)) (pair (nat %period_finish) (address %ply_address)))) (pair (pair (pair (big_map %recharge_ledger nat unit) (nat %reward_per_token)) (pair (nat %reward_rate) (big_map %rewards address nat))) (pair (pair (nat %total_supply) (big_map %user_reward_per_token_debt address nat)) (pair (address %ve_address) (address %voter)))));
                   code
                     {
                       # Private variable: update_derived # pair @parameter @storage
                       LAMBDA
                         (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                         (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                         {
                           UNPAIR;     # pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           SWAP;       # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : pair address nat
                           # compute_gauge_164 = sp.local("compute_gauge_164", self.data.balances[_x0.address]) # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : pair address nat
                           DUP;        # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : pair address nat
                           DUG 2;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           CAR;        # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           CAR;        # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           CAR;        # pair (big_map address nat) (big_map address nat) : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           CDR;        # big_map address nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           SWAP;       # pair address nat : big_map address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           DUP;        # pair address nat : pair address nat : big_map address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           DUG 2;      # pair address nat : big_map address nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           CAR;        # address : big_map address nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           GET;        # option nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           IF_NONE
                             {
                               PUSH int 164; # int : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               FAILWITH;   # FAILED
                             }
                             {}; # @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           # compute_gauge_166 = sp.local("compute_gauge_166", self.data.derived_balances.get(_x0.address, default_value = 0)) # @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           DUP 3;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           CAR;        # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           CAR;        # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           GET 3;      # big_map address nat : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           DUP 3;      # pair address nat : big_map address nat : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           CAR;        # address : big_map address nat : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           GET;        # option nat : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           IF_NONE
                             {
                               PUSH nat 0; # nat : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                             }
                             {}; # nat : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           # if compute_gauge_166.value != 0: # nat : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           DUP;        # nat : nat : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           PUSH nat 0; # nat : nat : nat : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           COMPARE;    # int : nat : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           NEQ;        # bool : nat : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           IF
                             {
                               # self.data.derived_supply = sp.as_nat(self.data.derived_supply - compute_gauge_166.value) # nat : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               DUP 4;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : nat : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               UNPAIR;     # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               UNPAIR;     # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               UNPAIR;     # pair (big_map address nat) (big_map address nat) : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               SWAP;       # pair (big_map address nat) nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               CAR;        # big_map address nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               DUP 5;      # nat : big_map address nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               DIG 8;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : nat : big_map address nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : @some : pair address nat
                               CAR;        # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : big_map address nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : @some : pair address nat
                               CAR;        # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : nat : big_map address nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : @some : pair address nat
                               GET 4;      # nat : nat : big_map address nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : @some : pair address nat
                               SUB;        # int : big_map address nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : @some : pair address nat
                               ISNAT;      # option nat : big_map address nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : @some : pair address nat
                               IF_NONE
                                 {
                                   PUSH int 169; # int : big_map address nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : @some : pair address nat
                                   FAILWITH;   # FAILED
                                 }
                                 {}; # @some : big_map address nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : @some : pair address nat
                               SWAP;       # big_map address nat : @some : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : @some : pair address nat
                               PAIR;       # pair (big_map address nat) @some : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : @some : pair address nat
                               SWAP;       # pair (big_map address nat) (big_map address nat) : pair (big_map address nat) @some : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : @some : pair address nat
                               PAIR;       # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) @some) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : @some : pair address nat
                               PAIR;       # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) @some)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : @some : pair address nat
                               PAIR;       # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) @some)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : nat : @some : pair address nat
                               DUG 3;      # nat : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) @some)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                             }
                             {}; # nat : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           # compute_gauge_172 = sp.local("compute_gauge_172", sp.as_nat(sp.now - sp.timestamp(0))) # nat : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           PUSH timestamp "1970-01-01T00:00:00Z"; # timestamp : nat : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           NOW;        # @now : timestamp : nat : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           SUB;        # int : nat : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           ISNAT;      # option nat : nat : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           IF_NONE
                             {
                               PUSH int 172; # int : nat : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               FAILWITH;   # FAILED
                             }
                             {}; # @some : nat : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           # mark_up = sp.local("mark_up", 0) # @some : nat : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           PUSH nat 0; # nat : @some : nat : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           # if _x0.token_id != 0: # nat : @some : nat : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           PUSH nat 0; # nat : nat : @some : nat : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           DUP 6;      # pair address nat : nat : nat : @some : nat : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           CDR;        # nat : nat : nat : @some : nat : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           COMPARE;    # int : nat : @some : nat : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           NEQ;        # bool : nat : @some : nat : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           IF
                             {
                               DROP;       # @some : nat : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               SWAP;       # nat : @some : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               DROP;       # @some : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               # mark_up.value = (((self.data.total_supply * sp.view("get_token_voting_power", self.data.ve_address, sp.record(time = 0, token_id = _x0.token_id, ts = compute_gauge_172.value), sp.TNat).open_some(message = 'INVALID_VIEW')) // sp.view("get_total_voting_power", self.data.ve_address, sp.record(time = 0, ts = compute_gauge_172.value), sp.TNat).open_some(message = 'INVALID_VIEW')) * 60) // 100 # @some : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               PUSH nat 100; # nat : @some : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               PUSH nat 60; # nat : nat : @some : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               DUP 6;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : nat : nat : @some : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               GET 7;      # address : nat : nat : @some : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               DUP 4;      # @some : address : nat : nat : @some : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               PUSH nat 0; # nat : @some : address : nat : nat : @some : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               PAIR;       # pair nat @some : address : nat : nat : @some : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               VIEW "get_total_voting_power" nat; # option nat : nat : nat : @some : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               IF_NONE
                                 {
                                   PUSH string "INVALID_VIEW"; # string : nat : nat : @some : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   FAILWITH;   # FAILED
                                 }
                                 {}; # @some : nat : nat : @some : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               DUP 7;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @some : nat : nat : @some : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               GET 7;      # address : @some : nat : nat : @some : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               DIG 4;      # @some : address : @some : nat : nat : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               DUP 7;      # pair address nat : @some : address : @some : nat : nat : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               CDR;        # nat : @some : address : @some : nat : nat : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               PUSH nat 0; # nat : nat : @some : address : @some : nat : nat : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               PAIR 3;     # pair nat (pair nat @some) : address : @some : nat : nat : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               VIEW "get_token_voting_power" nat; # option nat : @some : nat : nat : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               IF_NONE
                                 {
                                   PUSH string "INVALID_VIEW"; # string : @some : nat : nat : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   FAILWITH;   # FAILED
                                 }
                                 {}; # @some : @some : nat : nat : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               DUP 7;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @some : @some : nat : nat : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               GET 5;      # pair nat (big_map address nat) : @some : @some : nat : nat : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               CAR;        # nat : @some : @some : nat : nat : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               MUL;        # nat : @some : nat : nat : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               EDIV;       # option (pair nat nat) : nat : nat : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               IF_NONE
                                 {
                                   PUSH int 194; # int : nat : nat : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   FAILWITH;   # FAILED
                                 }
                                 {
                                   CAR;        # nat : nat : nat : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                 }; # nat : nat : nat : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               MUL;        # nat : nat : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               EDIV;       # option (pair nat nat) : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               IF_NONE
                                 {
                                   PUSH int 194; # int : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   FAILWITH;   # FAILED
                                 }
                                 {
                                   CAR;        # nat : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                 }; # nat : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                             }
                             {
                               SWAP;       # @some : nat : nat : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               DROP;       # nat : nat : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               SWAP;       # nat : nat : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               DROP;       # nat : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                             }; # nat : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           # self.data.derived_balances[_x0.address] = sp.min(((compute_gauge_164.value * 40) // 100) + mark_up.value, compute_gauge_164.value) # nat : @some : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           DIG 3;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : nat : @some : pair address nat
                           UNPAIR;     # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : @some : pair address nat
                           UNPAIR;     # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : @some : pair address nat
                           UNPAIR;     # pair (big_map address nat) (big_map address nat) : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : @some : pair address nat
                           SWAP;       # pair (big_map address nat) nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : @some : pair address nat
                           UNPAIR;     # big_map address nat : nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : @some : pair address nat
                           DUP 7;      # @some : big_map address nat : nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : @some : pair address nat
                           DIG 6;      # nat : @some : big_map address nat : nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @some : pair address nat
                           PUSH nat 100; # nat : nat : @some : big_map address nat : nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @some : pair address nat
                           PUSH nat 40; # nat : nat : nat : @some : big_map address nat : nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @some : pair address nat
                           DIG 9;      # @some : nat : nat : nat : @some : big_map address nat : nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                           MUL;        # nat : nat : nat : @some : big_map address nat : nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                           EDIV;       # option (pair nat nat) : nat : @some : big_map address nat : nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                           IF_NONE
                             {
                               PUSH int 196; # int : nat : @some : big_map address nat : nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                               FAILWITH;   # FAILED
                             }
                             {
                               CAR;        # nat : nat : @some : big_map address nat : nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                             }; # nat : nat : @some : big_map address nat : nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                           ADD;        # nat : @some : big_map address nat : nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                           DUP;        # nat : nat : @some : big_map address nat : nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                           DUP 3;      # @some : nat : nat : @some : big_map address nat : nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                           COMPARE;    # int : nat : @some : big_map address nat : nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                           LE;         # bool : nat : @some : big_map address nat : nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                           IF
                             {
                               DROP;       # @some : big_map address nat : nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                             }
                             {
                               SWAP;       # @some : nat : big_map address nat : nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                               DROP;       # nat : big_map address nat : nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                             }; # nat : big_map address nat : nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                           SOME;       # option nat : big_map address nat : nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                           DUP 7;      # pair address nat : option nat : big_map address nat : nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                           CAR;        # address : option nat : big_map address nat : nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                           UPDATE;     # big_map address nat : nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                           PAIR;       # pair (big_map address nat) nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                           SWAP;       # pair (big_map address nat) (big_map address nat) : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                           PAIR;       # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                           PAIR;       # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                           PAIR;       # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : pair address nat
                           # self.data.derived_supply += self.data.derived_balances[_x0.address] # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : pair address nat
                           DUP;        # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : pair address nat
                           DUG 2;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           UNPAIR;     # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           UNPAIR;     # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           UNPAIR;     # pair (big_map address nat) (big_map address nat) : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           SWAP;       # pair (big_map address nat) nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           UNPAIR;     # big_map address nat : nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           SWAP;       # nat : big_map address nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           DIG 6;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : nat : big_map address nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                           CAR;        # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : big_map address nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                           CAR;        # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : nat : big_map address nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                           GET 3;      # big_map address nat : nat : big_map address nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                           DIG 6;      # pair address nat : big_map address nat : nat : big_map address nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))
                           CAR;        # address : big_map address nat : nat : big_map address nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))
                           GET;        # option nat : nat : big_map address nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))
                           IF_NONE
                             {
                               PUSH int 198; # int : nat : big_map address nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))
                               FAILWITH;   # FAILED
                             }
                             {}; # @some : nat : big_map address nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))
                           ADD;        # nat : big_map address nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))
                           SWAP;       # big_map address nat : nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))
                           PAIR;       # pair (big_map address nat) nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))
                           SWAP;       # pair (big_map address nat) (big_map address nat) : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))
                           PAIR;       # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))
                           PAIR;       # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))
                           PAIR;       # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           UNIT;       # unit : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           PAIR;       # pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))
                         }; # lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : pair @parameter @storage
                       SWAP;       # pair @parameter @storage : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                       # Private variable: update_reward # pair @parameter @storage : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                       LAMBDA
                         (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                         (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                         {
                           UNPAIR;     # address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           # compute_gauge_126 = sp.local("compute_gauge_126", sp.as_nat(sp.now - sp.timestamp(0))) # address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           PUSH timestamp "1970-01-01T00:00:00Z"; # timestamp : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           NOW;        # @now : timestamp : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           SUB;        # int : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           ISNAT;      # option nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           IF_NONE
                             {
                               PUSH int 126; # int : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               FAILWITH;   # FAILED
                             }
                             {}; # @some : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           # compute_gauge_129 = sp.local("compute_gauge_129", self.data.period_finish) # @some : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           DUP 3;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @some : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           CAR;        # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @some : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           GET 5;      # nat : @some : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           # reward_per_token_ = sp.local("reward_per_token_", self.data.reward_per_token) # nat : @some : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           DUP 4;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : nat : @some : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           GET 3;      # pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : nat : @some : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           CAR;        # pair (big_map nat unit) nat : nat : @some : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           CDR;        # nat : nat : @some : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           # if self.data.total_supply != 0: # nat : nat : @some : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           PUSH nat 0; # nat : nat : nat : @some : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           DUP 6;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : nat : nat : nat : @some : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           GET 5;      # pair nat (big_map address nat) : nat : nat : nat : @some : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           CAR;        # nat : nat : nat : nat : @some : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           COMPARE;    # int : nat : nat : @some : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           NEQ;        # bool : nat : nat : @some : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           IF
                             {
                               # reward_per_token_.value += ((sp.as_nat(sp.min(compute_gauge_126.value, compute_gauge_129.value) - self.data.last_update_time) * self.data.reward_rate) * 1000000000000000000) // self.data.derived_supply # nat : nat : @some : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               DUP 5;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : nat : nat : @some : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               CAR;        # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : nat : @some : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               CAR;        # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : nat : nat : @some : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               GET 4;      # nat : nat : nat : @some : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               PUSH nat 1000000000000000000; # nat : nat : nat : nat : @some : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               DIG 6;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : nat : nat : nat : nat : @some : address
                               DUP;        # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : nat : nat : nat : nat : @some : address
                               GET 3;      # pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : nat : nat : nat : nat : @some : address
                               GET 3;      # nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : nat : nat : nat : nat : @some : address
                               SWAP;       # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : nat : nat : nat : nat : nat : @some : address
                               DUP;        # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : nat : nat : nat : nat : nat : @some : address
                               DUG 8;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : nat : nat : nat : nat : nat : @some : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               CAR;        # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : nat : nat : nat : nat : @some : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               GET 3;      # pair nat address : nat : nat : nat : nat : nat : @some : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               CAR;        # nat : nat : nat : nat : nat : nat : @some : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               DUP 6;      # nat : nat : nat : nat : nat : nat : nat : @some : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               DUP 8;      # @some : nat : nat : nat : nat : nat : nat : nat : @some : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               DUP;        # @some : @some : nat : nat : nat : nat : nat : nat : nat : @some : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               DUP 3;      # nat : @some : @some : nat : nat : nat : nat : nat : nat : nat : @some : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               COMPARE;    # int : @some : nat : nat : nat : nat : nat : nat : nat : @some : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               LE;         # bool : @some : nat : nat : nat : nat : nat : nat : nat : @some : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               IF
                                 {
                                   DROP;       # nat : nat : nat : nat : nat : nat : nat : @some : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                 }
                                 {
                                   SWAP;       # nat : @some : nat : nat : nat : nat : nat : nat : @some : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   DROP;       # @some : nat : nat : nat : nat : nat : nat : @some : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                 }; # nat : nat : nat : nat : nat : nat : nat : @some : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               SUB;        # int : nat : nat : nat : nat : nat : @some : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               ISNAT;      # option nat : nat : nat : nat : nat : nat : @some : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               IF_NONE
                                 {
                                   PUSH int 134; # int : nat : nat : nat : nat : nat : @some : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   FAILWITH;   # FAILED
                                 }
                                 {}; # @some : nat : nat : nat : nat : nat : @some : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               MUL;        # nat : nat : nat : nat : nat : @some : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               MUL;        # nat : nat : nat : nat : @some : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               EDIV;       # option (pair nat nat) : nat : nat : @some : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               IF_NONE
                                 {
                                   PUSH int 135; # int : nat : nat : @some : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   FAILWITH;   # FAILED
                                 }
                                 {
                                   CAR;        # nat : nat : nat : @some : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                 }; # nat : nat : nat : @some : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               ADD;        # nat : nat : @some : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                             }
                             {}; # nat : nat : @some : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           # self.data.reward_per_token = reward_per_token_.value # nat : nat : @some : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           DIG 4;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : nat : nat : @some : address
                           UNPAIR;     # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : nat : @some : address
                           SWAP;       # pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : nat : @some : address
                           UNPAIR;     # pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : nat : @some : address
                           UNPAIR;     # pair (big_map nat unit) nat : pair nat (big_map address nat) : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : nat : @some : address
                           CAR;        # big_map nat unit : pair nat (big_map address nat) : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : nat : @some : address
                           DUP 5;      # nat : big_map nat unit : pair nat (big_map address nat) : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : nat : @some : address
                           SWAP;       # big_map nat unit : nat : pair nat (big_map address nat) : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : nat : @some : address
                           PAIR;       # pair (big_map nat unit) nat : pair nat (big_map address nat) : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : nat : @some : address
                           PAIR;       # pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : nat : @some : address
                           PAIR;       # pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : nat : @some : address
                           SWAP;       # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : nat : @some : address
                           PAIR;       # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : nat : nat : @some : address
                           # compute_gauge_140 = sp.local("compute_gauge_140", self.data.reward_per_token) # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : nat : nat : @some : address
                           DUP;        # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : nat : nat : @some : address
                           DUG 5;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : nat : nat : @some : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           GET 3;      # pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : nat : nat : @some : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           CAR;        # pair (big_map nat unit) nat : nat : nat : @some : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           CDR;        # nat : nat : nat : @some : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           # self.data.last_update_time = sp.min(compute_gauge_126.value, compute_gauge_129.value) # nat : nat : nat : @some : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           DIG 5;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : nat : nat : nat : @some : address
                           UNPAIR;     # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : nat : nat : @some : address
                           UNPAIR;     # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : nat : nat : @some : address
                           SWAP;       # pair (pair nat address) (pair nat address) : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : nat : nat : @some : address
                           UNPAIR;     # pair nat address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : nat : nat : @some : address
                           CDR;        # address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : nat : nat : @some : address
                           DUP 7;      # nat : address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : nat : nat : @some : address
                           DUP 9;      # @some : nat : address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : nat : nat : @some : address
                           DUP;        # @some : @some : nat : address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : nat : nat : @some : address
                           DUP 3;      # nat : @some : @some : nat : address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : nat : nat : @some : address
                           COMPARE;    # int : @some : nat : address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : nat : nat : @some : address
                           LE;         # bool : @some : nat : address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : nat : nat : @some : address
                           IF
                             {
                               DROP;       # nat : address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : nat : nat : @some : address
                             }
                             {
                               SWAP;       # nat : @some : address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : nat : nat : @some : address
                               DROP;       # @some : address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : nat : nat : @some : address
                             }; # nat : address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : nat : nat : @some : address
                           PAIR;       # pair nat address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : nat : nat : @some : address
                           PAIR;       # pair (pair nat address) (pair nat address) : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : nat : nat : @some : address
                           SWAP;       # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : nat : nat : @some : address
                           PAIR;       # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : nat : nat : @some : address
                           PAIR;       # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : nat : nat : nat : @some : address
                           DUG 5;      # nat : nat : nat : @some : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           # if _x1 != sp.address('KT1TezoooozzSmartPyzzDYNAMiCzzpLu4LU'): # nat : nat : nat : @some : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           PUSH address "KT1TezoooozzSmartPyzzDYNAMiCzzpLu4LU"; # address : nat : nat : nat : @some : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           DUP 6;      # address : address : nat : nat : nat : @some : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           COMPARE;    # int : nat : nat : nat : @some : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           NEQ;        # bool : nat : nat : nat : @some : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           IF
                             {
                               SWAP;       # nat : nat : nat : @some : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               DROP;       # nat : nat : @some : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               SWAP;       # nat : nat : @some : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               DROP;       # nat : @some : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               SWAP;       # @some : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               DROP;       # nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               # self.data.rewards[_x1] = self.data.rewards.get(_x1, default_value = 0) + ((self.data.derived_balances.get(_x1, default_value = 0) * sp.as_nat(compute_gauge_140.value - self.data.user_reward_per_token_debt.get(_x1, default_value = 0))) // 1000000000000000000) # nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               DUP 3;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               UNPAIR;     # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               SWAP;       # pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               UNPAIR;     # pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               UNPAIR;     # pair (big_map nat unit) nat : pair nat (big_map address nat) : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               SWAP;       # pair nat (big_map address nat) : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               UNPAIR;     # nat : big_map address nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               SWAP;       # big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               PUSH nat 1000000000000000000; # nat : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               DUP 9;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : nat : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               GET 5;      # pair nat (big_map address nat) : nat : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               CDR;        # big_map address nat : nat : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               DUP 9;      # address : big_map address nat : nat : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               GET;        # option nat : nat : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               IF_NONE
                                 {
                                   PUSH nat 0; # nat : nat : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                 }
                                 {}; # nat : nat : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               DUP 8;      # nat : nat : nat : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               SUB;        # int : nat : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               ISNAT;      # option nat : nat : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               IF_NONE
                                 {
                                   PUSH int 153; # int : nat : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   FAILWITH;   # FAILED
                                 }
                                 {}; # @some : nat : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               DUP 10;     # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @some : nat : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               CAR;        # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @some : nat : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               CAR;        # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : @some : nat : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               GET 3;      # big_map address nat : @some : nat : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               DUP 10;     # address : big_map address nat : @some : nat : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               GET;        # option nat : @some : nat : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               IF_NONE
                                 {
                                   PUSH nat 0; # nat : @some : nat : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                 }
                                 {}; # nat : @some : nat : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               MUL;        # nat : nat : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               EDIV;       # option (pair nat nat) : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               IF_NONE
                                 {
                                   PUSH int 151; # int : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   FAILWITH;   # FAILED
                                 }
                                 {
                                   CAR;        # nat : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                 }; # nat : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               DIG 8;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : nat : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : address
                               GET 3;      # pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : nat : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : address
                               GET 4;      # big_map address nat : nat : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : address
                               DUP 9;      # address : big_map address nat : nat : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : address
                               GET;        # option nat : nat : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : address
                               IF_NONE
                                 {
                                   PUSH nat 0; # nat : nat : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : address
                                 }
                                 {}; # nat : nat : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : address
                               ADD;        # nat : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : address
                               SOME;       # option nat : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : address
                               DUP 8;      # address : option nat : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : address
                               UPDATE;     # big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : address
                               SWAP;       # nat : big_map address nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : address
                               PAIR;       # pair nat (big_map address nat) : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : address
                               SWAP;       # pair (big_map nat unit) nat : pair nat (big_map address nat) : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : address
                               PAIR;       # pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : address
                               SWAP;       # pair (pair nat (big_map address nat)) (pair address address) : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : address
                               # self.data.user_reward_per_token_debt[_x1] = compute_gauge_140.value # pair (pair nat (big_map address nat)) (pair address address) : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : address
                               UNPAIR;     # pair nat (big_map address nat) : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : address
                               UNPAIR;     # nat : big_map address nat : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : address
                               SWAP;       # big_map address nat : nat : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : address
                               DIG 5;      # nat : big_map address nat : nat : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address
                               SOME;       # option nat : big_map address nat : nat : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address
                               DIG 6;      # address : option nat : big_map address nat : nat : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))
                               UPDATE;     # big_map address nat : nat : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))
                               SWAP;       # nat : big_map address nat : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))
                               PAIR;       # pair nat (big_map address nat) : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))
                               PAIR;       # pair (pair nat (big_map address nat)) (pair address address) : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))
                               SWAP;       # pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))
                               PAIR;       # pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))
                               SWAP;       # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))
                               PAIR;       # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                             }
                             {
                               DROP 5;     # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                             }; # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           UNIT;       # unit : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           PAIR;       # pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))
                         }; # lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : pair @parameter @storage : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                       SWAP;       # pair @parameter @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                       UNPAIR;     # @parameter : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                       IF_LEFT
                         {
                           DIG 3;      # lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : @parameter.left : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           DROP;       # @parameter.left : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           IF_LEFT
                             {
                               PUSH string "CONTRACT_DOES_NOT_ACCEPT_TEZ"; # string : @parameter%default : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               FAILWITH;   # FAILED
                             }
                             {
                               DROP;       # @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               SWAP;       # lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : @storage
                               # == get_reward ==
                               # compute_gauge_330 = sp.local("compute_gauge_330", self.update_reward(sp.sender)) # lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : @storage
                               SENDER;     # @sender : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : @storage
                               SWAP;       # lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : @sender : @storage
                               DUG 2;      # @sender : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               PAIR;       # pair @sender @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               EXEC;       # pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))
                               CDR;        # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               # sp.verify(sp.amount == sp.tez(0), 'ENTRYPOINT_DOES_NOT_ACCEPT_TEZ') # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               PUSH mutez 0; # mutez : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               AMOUNT;     # @amount : mutez : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               COMPARE;    # int : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               EQ;         # bool : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               IF
                                 {}
                                 {
                                   PUSH string "ENTRYPOINT_DOES_NOT_ACCEPT_TEZ"; # string : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   FAILWITH;   # FAILED
                                 }; # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               # if self.data.rewards[sp.sender] != 0: # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               DUP;        # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               GET 3;      # pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               GET 4;      # big_map address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               PUSH nat 0; # nat : big_map address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               SWAP;       # big_map address nat : nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               SENDER;     # @sender : big_map address nat : nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               GET;        # option nat : nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               IF_NONE
                                 {
                                   PUSH int 336; # int : nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   FAILWITH;   # FAILED
                                 }
                                 {}; # @some : nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               COMPARE;    # int : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               NEQ;        # bool : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               IF
                                 {
                                   # if self.data.rewards[sp.sender] > 0: # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   DUP;        # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   GET 3;      # pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   GET 4;      # big_map address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   PUSH nat 0; # nat : big_map address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   SWAP;       # big_map address nat : nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   SENDER;     # @sender : big_map address nat : nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   GET;        # option nat : nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   IF_NONE
                                     {
                                       PUSH int 342; # int : nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                       FAILWITH;   # FAILED
                                     }
                                     {}; # @some : nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   COMPARE;    # int : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   GT;         # bool : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   IF
                                     {
                                       # sp.transfer(sp.record(from_ = sp.self_address, to_ = sp.sender, value = self.data.rewards[sp.sender]), sp.tez(0), sp.contract(sp.TRecord(from_ = sp.TAddress, to_ = sp.TAddress, value = sp.TNat).layout(("from_ as from", ("to_ as to", "value"))), self.data.ply_address, entry_point='transfer').open_some()) # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                       DUP;        # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                       CAR;        # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                       GET 6;      # address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                       CONTRACT %transfer (pair (address %from) (pair (address %to) (nat %value))); # option (contract (pair (address %from) (pair (address %to) (nat %value)))) : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                       IF_NONE
                                         {
                                           PUSH int 16; # int : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                           FAILWITH;   # FAILED
                                         }
                                         {}; # @some : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                       NIL operation; # list operation : @some : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                       SWAP;       # @some : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                       PUSH mutez 0; # mutez : @some : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                       DUP 4;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : mutez : @some : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                       GET 3;      # pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : mutez : @some : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                       GET 4;      # big_map address nat : mutez : @some : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                       SENDER;     # @sender : big_map address nat : mutez : @some : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                       GET;        # option nat : mutez : @some : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                       IF_NONE
                                         {
                                           PUSH int 342; # int : mutez : @some : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                           FAILWITH;   # FAILED
                                         }
                                         {}; # @some : mutez : @some : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                       SENDER;     # @sender : @some : mutez : @some : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                       SELF_ADDRESS; # @self : @sender : @some : mutez : @some : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                       PAIR 3;     # pair @self (pair @sender @some) : mutez : @some : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                       TRANSFER_TOKENS; # operation : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                       CONS;       # list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                     }
                                     {
                                       NIL operation; # list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                     }; # list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   SWAP;       # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : list operation
                                   # self.data.rewards[sp.sender] = 0 # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : list operation
                                   UNPAIR;     # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : list operation
                                   SWAP;       # pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation
                                   UNPAIR;     # pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation
                                   UNPAIR;     # pair (big_map nat unit) nat : pair nat (big_map address nat) : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation
                                   SWAP;       # pair nat (big_map address nat) : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation
                                   UNPAIR;     # nat : big_map address nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation
                                   SWAP;       # big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation
                                   PUSH (option nat) (Some 0); # option nat : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation
                                   SENDER;     # @sender : option nat : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation
                                   UPDATE;     # big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation
                                   SWAP;       # nat : big_map address nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation
                                   PAIR;       # pair nat (big_map address nat) : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation
                                   SWAP;       # pair (big_map nat unit) nat : pair nat (big_map address nat) : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation
                                   PAIR;       # pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation
                                   PAIR;       # pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation
                                   SWAP;       # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : list operation
                                   PAIR;       # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : list operation
                                   SWAP;       # list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                 }
                                 {
                                   NIL operation; # list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                 }; # list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                             }; # list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                         }
                         {
                           IF_LEFT
                             {
                               SWAP;       # @storage : @parameter%recharge : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               # == recharge ==
                               # sp.verify(sp.sender == self.data.voter, 'NOT_AUTHORISED') # @storage : @parameter%recharge : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               DUP;        # @storage : @storage : @parameter%recharge : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               DUG 2;      # @storage : @parameter%recharge : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               GET 8;      # address : @parameter%recharge : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               SENDER;     # @sender : address : @parameter%recharge : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               COMPARE;    # int : @parameter%recharge : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               EQ;         # bool : @parameter%recharge : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               IF
                                 {}
                                 {
                                   PUSH string "NOT_AUTHORISED"; # string : @parameter%recharge : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   FAILWITH;   # FAILED
                                 }; # @parameter%recharge : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               SWAP;       # @storage : @parameter%recharge : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               # sp.verify(~ (self.data.recharge_ledger.contains(params.epoch)), 'ALREADY_RECHARGED_FOR_EPOCH') # @storage : @parameter%recharge : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               DUP;        # @storage : @storage : @parameter%recharge : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               DUG 2;      # @storage : @parameter%recharge : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               GET 3;      # pair (pair (big_map %recharge_ledger nat unit) (nat %reward_per_token)) (pair (nat %reward_rate) (big_map %rewards address nat)) : @parameter%recharge : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               CAR;        # pair (big_map %recharge_ledger nat unit) (nat %reward_per_token) : @parameter%recharge : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               CAR;        # big_map nat unit : @parameter%recharge : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               SWAP;       # @parameter%recharge : big_map nat unit : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               DUP;        # @parameter%recharge : @parameter%recharge : big_map nat unit : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               DUG 2;      # @parameter%recharge : big_map nat unit : @parameter%recharge : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               CDR;        # nat : big_map nat unit : @parameter%recharge : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               MEM;        # bool : @parameter%recharge : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               IF
                                 {
                                   PUSH string "ALREADY_RECHARGED_FOR_EPOCH"; # string : @parameter%recharge : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   FAILWITH;   # FAILED
                                 }
                                 {}; # @parameter%recharge : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               # compute_gauge_361 = sp.local("compute_gauge_361", self.update_reward(sp.address('KT1TezoooozzSmartPyzzDYNAMiCzzpLu4LU'))) # @parameter%recharge : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               DUP 3;      # lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : @parameter%recharge : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               PUSH address "KT1TezoooozzSmartPyzzDYNAMiCzzpLu4LU"; # address : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : @parameter%recharge : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               SWAP;       # lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : address : @parameter%recharge : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               DIG 3;      # @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : address : @parameter%recharge : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               DIG 2;      # address : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : @parameter%recharge : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               PAIR;       # pair address @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : @parameter%recharge : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               EXEC;       # pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))) : @parameter%recharge : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               UNPAIR;     # unit : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @parameter%recharge : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               DIG 4;      # lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : unit : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @parameter%recharge : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               DIG 4;      # lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : unit : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @parameter%recharge
                               DIG 3;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : unit : @parameter%recharge
                               DIG 4;      # @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : unit
                               DIG 4;      # unit : @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               # compute_gauge_364 = sp.local("compute_gauge_364", sp.as_nat(sp.now - sp.timestamp(0))) # unit : @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               PUSH timestamp "1970-01-01T00:00:00Z"; # timestamp : unit : @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               NOW;        # @now : timestamp : unit : @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               SUB;        # int : unit : @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               ISNAT;      # option nat : unit : @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               IF_NONE
                                 {
                                   PUSH int 364; # int : unit : @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   FAILWITH;   # FAILED
                                 }
                                 {}; # @some : unit : @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               # final_amount = sp.local("final_amount", params.amount) # @some : unit : @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               DUP 3;      # @parameter%recharge : @some : unit : @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               CAR;        # nat : @some : unit : @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               # if compute_gauge_364.value < self.data.period_finish: # nat : @some : unit : @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               DUP 5;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : nat : @some : unit : @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               CAR;        # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : @some : unit : @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               GET 5;      # nat : nat : @some : unit : @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               DUP 3;      # @some : nat : nat : @some : unit : @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               COMPARE;    # int : nat : @some : unit : @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               LT;         # bool : nat : @some : unit : @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               IF
                                 {
                                   DROP;       # @some : unit : @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   SWAP;       # unit : @some : @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   DROP;       # @some : @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   DIG 3;      # lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : @some : @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   DROP;       # @some : @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   DIG 3;      # lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : @some : @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   DROP;       # @some : @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   SWAP;       # @parameter%recharge : @some : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   # final_amount.value = (self.data.reward_rate * sp.as_nat(self.data.period_finish - compute_gauge_364.value)) + params.amount # @parameter%recharge : @some : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   DUP;        # @parameter%recharge : @parameter%recharge : @some : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   DUG 2;      # @parameter%recharge : @some : @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   CAR;        # nat : @some : @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   SWAP;       # @some : nat : @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   DUP;        # @some : @some : nat : @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   DUG 2;      # @some : nat : @some : @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   DUP 5;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @some : nat : @some : @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   CAR;        # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @some : nat : @some : @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   GET 5;      # nat : @some : nat : @some : @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   SUB;        # int : nat : @some : @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   ISNAT;      # option nat : nat : @some : @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   IF_NONE
                                     {
                                       PUSH int 370; # int : nat : @some : @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                       FAILWITH;   # FAILED
                                     }
                                     {}; # @some : nat : @some : @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   DUP 5;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @some : nat : @some : @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   GET 3;      # pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : @some : nat : @some : @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   GET 3;      # nat : @some : nat : @some : @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   MUL;        # nat : nat : @some : @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   ADD;        # nat : @some : @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                 }
                                 {
                                   DIG 2;      # unit : nat : @some : @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   DROP;       # nat : @some : @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   DIG 4;      # lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : nat : @some : @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   DROP;       # nat : @some : @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   DIG 4;      # lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : nat : @some : @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   DROP;       # nat : @some : @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                 }; # nat : @some : @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               # self.data.period_finish = ((compute_gauge_364.value + 604800) // 604800) * 604800 # nat : @some : @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               DIG 3;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : nat : @some : @parameter%recharge
                               UNPAIR;     # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : @some : @parameter%recharge
                               UNPAIR;     # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : @some : @parameter%recharge
                               SWAP;       # pair (pair nat address) (pair nat address) : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : @some : @parameter%recharge
                               UNPAIR;     # pair nat address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : @some : @parameter%recharge
                               SWAP;       # pair nat address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : @some : @parameter%recharge
                               CDR;        # address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : @some : @parameter%recharge
                               PUSH nat 604800; # nat : address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : @some : @parameter%recharge
                               DUP;        # nat : nat : address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : @some : @parameter%recharge
                               DUP;        # nat : nat : nat : address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : @some : @parameter%recharge
                               DUP 9;      # @some : nat : nat : nat : address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : @some : @parameter%recharge
                               ADD;        # nat : nat : nat : address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : @some : @parameter%recharge
                               EDIV;       # option (pair nat nat) : nat : address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : @some : @parameter%recharge
                               IF_NONE
                                 {
                                   PUSH int 376; # int : nat : address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : @some : @parameter%recharge
                                   FAILWITH;   # FAILED
                                 }
                                 {
                                   CAR;        # nat : nat : address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : @some : @parameter%recharge
                                 }; # nat : nat : address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : @some : @parameter%recharge
                               MUL;        # nat : address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : @some : @parameter%recharge
                               PAIR;       # pair nat address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : @some : @parameter%recharge
                               SWAP;       # pair nat address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : @some : @parameter%recharge
                               PAIR;       # pair (pair nat address) (pair nat address) : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : @some : @parameter%recharge
                               SWAP;       # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : @some : @parameter%recharge
                               PAIR;       # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : @some : @parameter%recharge
                               PAIR;       # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : nat : @some : @parameter%recharge
                               # self.data.reward_rate = final_amount.value // sp.as_nat(self.data.period_finish - compute_gauge_364.value) # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : nat : @some : @parameter%recharge
                               DUP;        # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : nat : @some : @parameter%recharge
                               DUG 4;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : nat : @some : @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               UNPAIR;     # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : @some : @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               SWAP;       # pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : @some : @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               UNPAIR;     # pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : @some : @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               UNPAIR;     # pair (big_map nat unit) nat : pair nat (big_map address nat) : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : @some : @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               SWAP;       # pair nat (big_map address nat) : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : @some : @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               CDR;        # big_map address nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : @some : @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               DUP 6;      # @some : big_map address nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : @some : @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               DIG 8;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @some : big_map address nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : @some : @parameter%recharge
                               CAR;        # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @some : big_map address nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : @some : @parameter%recharge
                               GET 5;      # nat : @some : big_map address nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : @some : @parameter%recharge
                               SUB;        # int : big_map address nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : @some : @parameter%recharge
                               ISNAT;      # option nat : big_map address nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : @some : @parameter%recharge
                               IF_NONE
                                 {
                                   PUSH int 379; # int : big_map address nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : @some : @parameter%recharge
                                   FAILWITH;   # FAILED
                                 }
                                 {}; # @some : big_map address nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : @some : @parameter%recharge
                               DIG 5;      # nat : @some : big_map address nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @some : @parameter%recharge
                               EDIV;       # option (pair nat nat) : big_map address nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @some : @parameter%recharge
                               IF_NONE
                                 {
                                   PUSH int 382; # int : big_map address nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @some : @parameter%recharge
                                   FAILWITH;   # FAILED
                                 }
                                 {
                                   CAR;        # nat : big_map address nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @some : @parameter%recharge
                                 }; # nat : big_map address nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @some : @parameter%recharge
                               PAIR;       # pair nat (big_map address nat) : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @some : @parameter%recharge
                               SWAP;       # pair (big_map nat unit) nat : pair nat (big_map address nat) : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @some : @parameter%recharge
                               PAIR;       # pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @some : @parameter%recharge
                               PAIR;       # pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @some : @parameter%recharge
                               SWAP;       # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @some : @parameter%recharge
                               # self.data.last_update_time = compute_gauge_364.value # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @some : @parameter%recharge
                               UNPAIR;     # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @some : @parameter%recharge
                               SWAP;       # pair (pair nat address) (pair nat address) : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @some : @parameter%recharge
                               UNPAIR;     # pair nat address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @some : @parameter%recharge
                               CDR;        # address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @some : @parameter%recharge
                               DIG 4;      # @some : address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%recharge
                               PAIR;       # pair @some address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%recharge
                               PAIR;       # pair (pair @some address) (pair nat address) : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%recharge
                               SWAP;       # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair @some address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%recharge
                               PAIR;       # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair @some address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%recharge
                               SWAP;       # pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair @some address) (pair nat address)) : @parameter%recharge
                               # self.data.recharge_ledger[params.epoch] = sp.unit # pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair @some address) (pair nat address)) : @parameter%recharge
                               UNPAIR;     # pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair @some address) (pair nat address)) : @parameter%recharge
                               UNPAIR;     # pair (big_map nat unit) nat : pair nat (big_map address nat) : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair @some address) (pair nat address)) : @parameter%recharge
                               UNPAIR;     # big_map nat unit : nat : pair nat (big_map address nat) : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair @some address) (pair nat address)) : @parameter%recharge
                               PUSH (option unit) (Some Unit); # option unit : big_map nat unit : nat : pair nat (big_map address nat) : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair @some address) (pair nat address)) : @parameter%recharge
                               DIG 6;      # @parameter%recharge : option unit : big_map nat unit : nat : pair nat (big_map address nat) : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair @some address) (pair nat address))
                               CDR;        # nat : option unit : big_map nat unit : nat : pair nat (big_map address nat) : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair @some address) (pair nat address))
                               UPDATE;     # big_map nat unit : nat : pair nat (big_map address nat) : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair @some address) (pair nat address))
                               PAIR;       # pair (big_map nat unit) nat : pair nat (big_map address nat) : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair @some address) (pair nat address))
                               PAIR;       # pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair @some address) (pair nat address))
                               PAIR;       # pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair @some address) (pair nat address))
                               SWAP;       # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair @some address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))
                               PAIR;       # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair @some address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               NIL operation; # list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair @some address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                             }
                             {
                               IF_LEFT
                                 {
                                   # == stake ==
                                   # sp.verify(sp.amount == sp.tez(0), 'ENTRYPOINT_DOES_NOT_ACCEPT_TEZ') # @parameter%stake : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   PUSH mutez 0; # mutez : @parameter%stake : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   AMOUNT;     # @amount : mutez : @parameter%stake : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   COMPARE;    # int : @parameter%stake : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   EQ;         # bool : @parameter%stake : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   IF
                                     {}
                                     {
                                       PUSH string "ENTRYPOINT_DOES_NOT_ACCEPT_TEZ"; # string : @parameter%stake : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       FAILWITH;   # FAILED
                                     }; # @parameter%stake : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   # compute_gauge_211 = sp.local("compute_gauge_211", self.update_reward(sp.sender)) # @parameter%stake : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   DUP 3;      # lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : @parameter%stake : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   SENDER;     # @sender : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : @parameter%stake : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   SWAP;       # lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : @sender : @parameter%stake : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   DIG 3;      # @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : @sender : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   DIG 2;      # @sender : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   PAIR;       # pair @sender @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   EXEC;       # pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))) : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   CDR;        # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   DIG 3;      # lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   DIG 3;      # lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @parameter%stake
                                   DIG 2;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : @parameter%stake
                                   DIG 3;      # @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   SWAP;       # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   # self.data.balances[sp.sender] = self.data.balances.get(sp.sender, default_value = 0) + params.amount # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   DUP;        # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   DUG 2;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   UNPAIR;     # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   UNPAIR;     # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   UNPAIR;     # pair (big_map address nat) (big_map address nat) : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   UNPAIR;     # big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   SWAP;       # big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   DUP 6;      # @parameter%stake : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   CAR;        # nat : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   DIG 7;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : nat : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   CAR;        # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   CAR;        # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : nat : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   CAR;        # pair (big_map address nat) (big_map address nat) : nat : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   CDR;        # big_map address nat : nat : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   SENDER;     # @sender : big_map address nat : nat : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   GET;        # option nat : nat : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   IF_NONE
                                     {
                                       PUSH nat 0; # nat : nat : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                     }
                                     {}; # nat : nat : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   ADD;        # nat : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   SOME;       # option nat : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   SENDER;     # @sender : option nat : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   UPDATE;     # big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   SWAP;       # big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   PAIR;       # pair (big_map address nat) (big_map address nat) : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   PAIR;       # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   PAIR;       # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   SWAP;       # pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   # self.data.total_supply += params.amount # pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   UNPAIR;     # pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   SWAP;       # pair (pair nat (big_map address nat)) (pair address address) : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   UNPAIR;     # pair nat (big_map address nat) : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   UNPAIR;     # nat : big_map address nat : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   DUP 6;      # @parameter%stake : nat : big_map address nat : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   CAR;        # nat : nat : big_map address nat : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   ADD;        # nat : big_map address nat : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   PAIR;       # pair nat (big_map address nat) : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   PAIR;       # pair (pair nat (big_map address nat)) (pair address address) : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   SWAP;       # pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   PAIR;       # pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   SWAP;       # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   PAIR;       # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   SWAP;       # @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   # compute_gauge_219 = sp.local("compute_gauge_219", self.update_derived(sp.record(address = sp.sender, token_id = params.token_id))) # @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   DUP 4;      # lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   SWAP;       # @parameter%stake : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   DUP;        # @parameter%stake : @parameter%stake : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   DUG 2;      # @parameter%stake : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   CDR;        # nat : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   SENDER;     # @sender : nat : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   PAIR;       # pair @sender nat : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   SWAP;       # lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : pair @sender nat : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   DIG 3;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : pair @sender nat : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   DIG 2;      # pair @sender nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   PAIR;       # pair (pair @sender nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   EXEC;       # pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))) : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   CDR;        # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   DIG 3;      # lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   DIG 3;      # lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @parameter%stake
                                   DIG 2;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : @parameter%stake
                                   DIG 3;      # @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   # if params.token_id != 0: # @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   DUP;        # @parameter%stake : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   CDR;        # nat : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   PUSH nat 0; # nat : nat : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   COMPARE;    # int : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   NEQ;        # bool : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   IF
                                     {
                                       SWAP;       # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       # if ~ (self.data.attached_tokens.contains(sp.sender)): # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       DUP;        # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       DUG 2;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       CAR;        # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       CAR;        # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       CAR;        # pair (big_map address nat) (big_map address nat) : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       CAR;        # big_map address nat : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       SENDER;     # @sender : big_map address nat : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       MEM;        # bool : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       IF
                                         {
                                           NIL operation; # list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                         }
                                         {
                                           SWAP;       # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           # self.data.attached_tokens[sp.sender] = params.token_id # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           UNPAIR;     # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           UNPAIR;     # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           UNPAIR;     # pair (big_map address nat) (big_map address nat) : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           UNPAIR;     # big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           DUP 6;      # @parameter%stake : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           CDR;        # nat : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           SOME;       # option nat : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           SENDER;     # @sender : option nat : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           UPDATE;     # big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           PAIR;       # pair (big_map address nat) (big_map address nat) : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           PAIR;       # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           PAIR;       # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           PAIR;       # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           SWAP;       # @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           # sp.transfer(sp.record(attachments = sp.list([variant('add_attachment', params.token_id)]), owner = sp.sender), sp.tez(0), sp.contract(sp.TRecord(attachments = sp.TList(sp.TVariant(add_attachment = sp.TNat, remove_attachment = sp.TNat).layout(("add_attachment", "remove_attachment"))), owner = sp.TAddress).layout(("attachments", "owner")), self.data.ve_address, entry_point='update_attachments').open_some()) # @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           NIL operation; # list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           DUP 3;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           GET 7;      # address : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           CONTRACT %update_attachments (pair (list %attachments (or (nat %add_attachment) (nat %remove_attachment))) (address %owner)); # option (contract (pair (list %attachments (or (nat %add_attachment) (nat %remove_attachment))) (address %owner))) : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           IF_NONE
                                             {
                                               PUSH int 88; # int : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                               FAILWITH;   # FAILED
                                             }
                                             {}; # @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           PUSH mutez 0; # mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           SENDER;     # @sender : mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           NIL (or nat nat); # list (or nat nat) : @sender : mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           DUP 6;      # @parameter%stake : list (or nat nat) : @sender : mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           CDR;        # nat : list (or nat nat) : @sender : mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           LEFT nat;   # or nat nat : list (or nat nat) : @sender : mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           CONS;       # list (or nat nat) : @sender : mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           PAIR;       # pair (list (or nat nat)) @sender : mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           TRANSFER_TOKENS; # operation : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           CONS;       # list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                         }; # list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       SWAP;       # @parameter%stake : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       # if self.data.attached_tokens[sp.sender] != params.token_id: # @parameter%stake : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       DUP;        # @parameter%stake : @parameter%stake : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       DUG 2;      # @parameter%stake : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       CDR;        # nat : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       DUP 4;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : nat : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       CAR;        # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       CAR;        # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : nat : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       CAR;        # pair (big_map address nat) (big_map address nat) : nat : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       CAR;        # big_map address nat : nat : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       SENDER;     # @sender : big_map address nat : nat : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       GET;        # option nat : nat : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       IF_NONE
                                         {
                                           PUSH int 236; # int : nat : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           FAILWITH;   # FAILED
                                         }
                                         {}; # @some : nat : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       COMPARE;    # int : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       NEQ;        # bool : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       IF
                                         {
                                           # sp.transfer(sp.record(attachments = sp.list([variant('remove_attachment', self.data.attached_tokens[sp.sender]), variant('add_attachment', params.token_id)]), owner = sp.sender), sp.tez(0), sp.contract(sp.TRecord(attachments = sp.TList(sp.TVariant(add_attachment = sp.TNat, remove_attachment = sp.TNat).layout(("add_attachment", "remove_attachment"))), owner = sp.TAddress).layout(("attachments", "owner")), self.data.ve_address, entry_point='update_attachments').open_some()) # list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           DUP 3;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           GET 7;      # address : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           CONTRACT %update_attachments (pair (list %attachments (or (nat %add_attachment) (nat %remove_attachment))) (address %owner)); # option (contract (pair (list %attachments (or (nat %add_attachment) (nat %remove_attachment))) (address %owner))) : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           IF_NONE
                                             {
                                               PUSH int 88; # int : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                               FAILWITH;   # FAILED
                                             }
                                             {}; # @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           PUSH mutez 0; # mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           SENDER;     # @sender : mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           NIL (or nat nat); # list (or nat nat) : @sender : mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           DUP 6;      # @parameter%stake : list (or nat nat) : @sender : mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           CDR;        # nat : list (or nat nat) : @sender : mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           LEFT nat;   # or nat nat : list (or nat nat) : @sender : mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           CONS;       # list (or nat nat) : @sender : mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           DUP 7;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : list (or nat nat) : @sender : mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           CAR;        # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list (or nat nat) : @sender : mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           CAR;        # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : list (or nat nat) : @sender : mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           CAR;        # pair (big_map address nat) (big_map address nat) : list (or nat nat) : @sender : mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           CAR;        # big_map address nat : list (or nat nat) : @sender : mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           SENDER;     # @sender : big_map address nat : list (or nat nat) : @sender : mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           GET;        # option nat : list (or nat nat) : @sender : mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           IF_NONE
                                             {
                                               PUSH int 241; # int : list (or nat nat) : @sender : mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                               FAILWITH;   # FAILED
                                             }
                                             {}; # @some : list (or nat nat) : @sender : mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           RIGHT nat;  # or nat nat : list (or nat nat) : @sender : mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           CONS;       # list (or nat nat) : @sender : mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           PAIR;       # pair (list (or nat nat)) @sender : mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           TRANSFER_TOKENS; # operation : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           CONS;       # list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           # self.data.attached_tokens[sp.sender] = params.token_id # list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           DIG 2;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : list operation : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           UNPAIR;     # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : list operation : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           UNPAIR;     # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : list operation : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           UNPAIR;     # pair (big_map address nat) (big_map address nat) : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : list operation : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           UNPAIR;     # big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : list operation : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           DUP 7;      # @parameter%stake : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : list operation : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           CDR;        # nat : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : list operation : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           SOME;       # option nat : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : list operation : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           SENDER;     # @sender : option nat : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : list operation : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           UPDATE;     # big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : list operation : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           PAIR;       # pair (big_map address nat) (big_map address nat) : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : list operation : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           PAIR;       # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : list operation : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           PAIR;       # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : list operation : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           PAIR;       # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : list operation : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           DUG 2;      # list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                         }
                                         {}; # list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                     }
                                     {
                                       SWAP;       # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       # if self.data.attached_tokens.contains(sp.sender): # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       DUP;        # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       DUG 2;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       CAR;        # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       CAR;        # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       CAR;        # pair (big_map address nat) (big_map address nat) : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       CAR;        # big_map address nat : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       SENDER;     # @sender : big_map address nat : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       MEM;        # bool : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       IF
                                         {
                                           # sp.transfer(sp.record(attachments = sp.list([variant('remove_attachment', self.data.attached_tokens[sp.sender])]), owner = sp.sender), sp.tez(0), sp.contract(sp.TRecord(attachments = sp.TList(sp.TVariant(add_attachment = sp.TNat, remove_attachment = sp.TNat).layout(("add_attachment", "remove_attachment"))), owner = sp.TAddress).layout(("attachments", "owner")), self.data.ve_address, entry_point='update_attachments').open_some()) # @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           NIL operation; # list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           DUP 3;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           GET 7;      # address : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           CONTRACT %update_attachments (pair (list %attachments (or (nat %add_attachment) (nat %remove_attachment))) (address %owner)); # option (contract (pair (list %attachments (or (nat %add_attachment) (nat %remove_attachment))) (address %owner))) : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           IF_NONE
                                             {
                                               PUSH int 88; # int : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                               FAILWITH;   # FAILED
                                             }
                                             {}; # @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           PUSH mutez 0; # mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           SENDER;     # @sender : mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           NIL (or nat nat); # list (or nat nat) : @sender : mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           DUP 7;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : list (or nat nat) : @sender : mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           CAR;        # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list (or nat nat) : @sender : mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           CAR;        # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : list (or nat nat) : @sender : mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           CAR;        # pair (big_map address nat) (big_map address nat) : list (or nat nat) : @sender : mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           CAR;        # big_map address nat : list (or nat nat) : @sender : mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           SENDER;     # @sender : big_map address nat : list (or nat nat) : @sender : mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           GET;        # option nat : list (or nat nat) : @sender : mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           IF_NONE
                                             {
                                               PUSH int 256; # int : list (or nat nat) : @sender : mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                               FAILWITH;   # FAILED
                                             }
                                             {}; # @some : list (or nat nat) : @sender : mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           RIGHT nat;  # or nat nat : list (or nat nat) : @sender : mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           CONS;       # list (or nat nat) : @sender : mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           PAIR;       # pair (list (or nat nat)) @sender : mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           TRANSFER_TOKENS; # operation : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           CONS;       # list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           # del self.data.attached_tokens[sp.sender] # list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           DIG 2;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : list operation : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           UNPAIR;     # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : list operation : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           UNPAIR;     # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : list operation : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           UNPAIR;     # pair (big_map address nat) (big_map address nat) : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : list operation : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           UNPAIR;     # big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : list operation : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           NONE nat;   # option nat : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : list operation : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           SENDER;     # @sender : option nat : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : list operation : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           UPDATE;     # big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : list operation : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           PAIR;       # pair (big_map address nat) (big_map address nat) : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : list operation : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           PAIR;       # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : list operation : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           PAIR;       # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : list operation : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           PAIR;       # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : list operation : @parameter%stake : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           DUG 2;      # list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                         }
                                         {
                                           NIL operation; # list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                         }; # list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                     }; # list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   # if params.amount > 0: # list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   PUSH nat 0; # nat : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   DUP 3;      # @parameter%stake : nat : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   CAR;        # nat : nat : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   COMPARE;    # int : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   GT;         # bool : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   IF
                                     {
                                       DIG 3;      # lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       DROP;       # list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       DIG 3;      # lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                       DROP;       # list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                       # sp.transfer(sp.record(from_ = sp.sender, to_ = sp.self_address, value = params.amount), sp.tez(0), sp.contract(sp.TRecord(from_ = sp.TAddress, to_ = sp.TAddress, value = sp.TNat).layout(("from_ as from", ("to_ as to", "value"))), self.data.lp_token_address, entry_point='transfer').open_some()) # list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                       DUP 3;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                       CAR;        # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                       GET 3;      # pair nat address : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                       CDR;        # address : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                       CONTRACT %transfer (pair (address %from) (pair (address %to) (nat %value))); # option (contract (pair (address %from) (pair (address %to) (nat %value)))) : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                       IF_NONE
                                         {
                                           PUSH int 16; # int : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                           FAILWITH;   # FAILED
                                         }
                                         {}; # @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                       PUSH mutez 0; # mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                       DIG 3;      # @parameter%stake : mutez : @some : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                       CAR;        # nat : mutez : @some : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                       SELF_ADDRESS; # @self : nat : mutez : @some : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                       SENDER;     # @sender : @self : nat : mutez : @some : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                       PAIR 3;     # pair @sender (pair @self nat) : mutez : @some : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                       TRANSFER_TOKENS; # operation : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                       CONS;       # list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                     }
                                     {
                                       SWAP;       # @parameter%stake : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       DROP;       # list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       DIG 2;      # lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       DROP;       # list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       DIG 2;      # lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                       DROP;       # list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                     }; # list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                 }
                                 {
                                   # == withdraw ==
                                   # sp.verify(sp.amount == sp.tez(0), 'ENTRYPOINT_DOES_NOT_ACCEPT_TEZ') # @parameter%withdraw : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   PUSH mutez 0; # mutez : @parameter%withdraw : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   AMOUNT;     # @amount : mutez : @parameter%withdraw : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   COMPARE;    # int : @parameter%withdraw : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   EQ;         # bool : @parameter%withdraw : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   IF
                                     {}
                                     {
                                       PUSH string "ENTRYPOINT_DOES_NOT_ACCEPT_TEZ"; # string : @parameter%withdraw : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       FAILWITH;   # FAILED
                                     }; # @parameter%withdraw : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   # sp.verify(params > 0, 'ZERO_WITHDRAWAL_NOT_ALLOWED') # @parameter%withdraw : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   DUP;        # @parameter%withdraw : @parameter%withdraw : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   PUSH nat 0; # nat : @parameter%withdraw : @parameter%withdraw : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   COMPARE;    # int : @parameter%withdraw : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   LT;         # bool : @parameter%withdraw : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   IF
                                     {}
                                     {
                                       PUSH string "ZERO_WITHDRAWAL_NOT_ALLOWED"; # string : @parameter%withdraw : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       FAILWITH;   # FAILED
                                     }; # @parameter%withdraw : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   # sp.verify(self.data.balances.get(sp.sender, default_value = 0) != 0, 'NO_STAKE_TO_WITHDRAW') # @parameter%withdraw : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   PUSH nat 0; # nat : @parameter%withdraw : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   DUP 3;      # @storage : nat : @parameter%withdraw : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   CAR;        # pair (pair (pair (big_map %attached_tokens address nat) (big_map %balances address nat)) (pair (big_map %derived_balances address nat) (nat %derived_supply))) (pair (pair (nat %last_update_time) (address %lp_token_address)) (pair (nat %period_finish) (address %ply_address))) : nat : @parameter%withdraw : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   CAR;        # pair (pair (big_map %attached_tokens address nat) (big_map %balances address nat)) (pair (big_map %derived_balances address nat) (nat %derived_supply)) : nat : @parameter%withdraw : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   CAR;        # pair (big_map %attached_tokens address nat) (big_map %balances address nat) : nat : @parameter%withdraw : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   CDR;        # big_map address nat : nat : @parameter%withdraw : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   SENDER;     # @sender : big_map address nat : nat : @parameter%withdraw : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   GET;        # option nat : nat : @parameter%withdraw : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   IF_NONE
                                     {
                                       PUSH nat 0; # nat : nat : @parameter%withdraw : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                     }
                                     {}; # nat : nat : @parameter%withdraw : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   COMPARE;    # int : @parameter%withdraw : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   NEQ;        # bool : @parameter%withdraw : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   IF
                                     {}
                                     {
                                       PUSH string "NO_STAKE_TO_WITHDRAW"; # string : @parameter%withdraw : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       FAILWITH;   # FAILED
                                     }; # @parameter%withdraw : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   # compute_gauge_289 = sp.local("compute_gauge_289", self.update_reward(sp.sender)) # @parameter%withdraw : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   DIG 2;      # lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : @parameter%withdraw : @storage : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   SENDER;     # @sender : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : @parameter%withdraw : @storage : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   SWAP;       # lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : @sender : @parameter%withdraw : @storage : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   DIG 3;      # @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : @sender : @parameter%withdraw : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   DIG 2;      # @sender : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : @parameter%withdraw : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   PAIR;       # pair @sender @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : @parameter%withdraw : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   EXEC;       # pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))) : @parameter%withdraw : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   CDR;        # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @parameter%withdraw : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   DIG 2;      # lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @parameter%withdraw
                                   SWAP;       # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : @parameter%withdraw
                                   DIG 2;      # @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   SWAP;       # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @parameter%withdraw : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   # compute_gauge_292 = sp.local("compute_gauge_292", self.data.balances[sp.sender]) # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @parameter%withdraw : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   DUP;        # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @parameter%withdraw : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   DUG 2;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   CAR;        # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   CAR;        # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   CAR;        # pair (big_map address nat) (big_map address nat) : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   CDR;        # big_map address nat : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   SENDER;     # @sender : big_map address nat : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   GET;        # option nat : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   IF_NONE
                                     {
                                       PUSH int 292; # int : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       FAILWITH;   # FAILED
                                     }
                                     {}; # @some : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   # if sp.min(params, compute_gauge_292.value) > 0: # @some : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   DUP;        # @some : @some : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   PUSH nat 0; # nat : @some : @some : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   SWAP;       # @some : nat : @some : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   DUP 4;      # @parameter%withdraw : @some : nat : @some : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   DUP;        # @parameter%withdraw : @parameter%withdraw : @some : nat : @some : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   DUP 3;      # @some : @parameter%withdraw : @parameter%withdraw : @some : nat : @some : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   COMPARE;    # int : @parameter%withdraw : @some : nat : @some : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   LE;         # bool : @parameter%withdraw : @some : nat : @some : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   IF
                                     {
                                       DROP;       # @some : nat : @some : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                     }
                                     {
                                       SWAP;       # @some : @parameter%withdraw : nat : @some : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       DROP;       # @parameter%withdraw : nat : @some : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                     }; # nat : nat : @some : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   COMPARE;    # int : @some : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   GT;         # bool : @some : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   IF
                                     {
                                       # sp.transfer(sp.record(from_ = sp.self_address, to_ = sp.sender, value = sp.min(params, compute_gauge_292.value)), sp.tez(0), sp.contract(sp.TRecord(from_ = sp.TAddress, to_ = sp.TAddress, value = sp.TNat).layout(("from_ as from", ("to_ as to", "value"))), self.data.lp_token_address, entry_point='transfer').open_some()) # @some : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       NIL operation; # list operation : @some : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       DUP 4;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : list operation : @some : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       CAR;        # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation : @some : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       GET 3;      # pair nat address : list operation : @some : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       CDR;        # address : list operation : @some : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       CONTRACT %transfer (pair (address %from) (pair (address %to) (nat %value))); # option (contract (pair (address %from) (pair (address %to) (nat %value)))) : list operation : @some : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       IF_NONE
                                         {
                                           PUSH int 16; # int : list operation : @some : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           FAILWITH;   # FAILED
                                         }
                                         {}; # @some : list operation : @some : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       PUSH mutez 0; # mutez : @some : list operation : @some : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       DUP 4;      # @some : mutez : @some : list operation : @some : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       DUP 6;      # @parameter%withdraw : @some : mutez : @some : list operation : @some : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       DUP;        # @parameter%withdraw : @parameter%withdraw : @some : mutez : @some : list operation : @some : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       DUP 3;      # @some : @parameter%withdraw : @parameter%withdraw : @some : mutez : @some : list operation : @some : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       COMPARE;    # int : @parameter%withdraw : @some : mutez : @some : list operation : @some : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       LE;         # bool : @parameter%withdraw : @some : mutez : @some : list operation : @some : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       IF
                                         {
                                           DROP;       # @some : mutez : @some : list operation : @some : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                         }
                                         {
                                           SWAP;       # @some : @parameter%withdraw : mutez : @some : list operation : @some : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           DROP;       # @parameter%withdraw : mutez : @some : list operation : @some : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                         }; # nat : mutez : contract (pair (address %from) (pair (address %to) (nat %value))) : list operation : @some : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       SENDER;     # @sender : nat : mutez : contract (pair (address %from) (pair (address %to) (nat %value))) : list operation : @some : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       SELF_ADDRESS; # @self : @sender : nat : mutez : contract (pair (address %from) (pair (address %to) (nat %value))) : list operation : @some : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       PAIR 3;     # pair @self (pair @sender nat) : mutez : contract (pair (address %from) (pair (address %to) (nat %value))) : list operation : @some : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       TRANSFER_TOKENS; # operation : list operation : @some : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       CONS;       # list operation : @some : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                     }
                                     {
                                       NIL operation; # list operation : @some : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                     }; # list operation : @some : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   # self.data.total_supply = sp.as_nat(self.data.total_supply - sp.min(params, compute_gauge_292.value)) # list operation : @some : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   DUP 4;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : list operation : @some : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   UNPAIR;     # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : list operation : @some : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   SWAP;       # pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation : @some : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   UNPAIR;     # pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation : @some : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   SWAP;       # pair (pair nat (big_map address nat)) (pair address address) : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation : @some : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   UNPAIR;     # pair nat (big_map address nat) : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation : @some : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   CDR;        # big_map address nat : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation : @some : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   DUP 6;      # @some : big_map address nat : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation : @some : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   DUP 8;      # @parameter%withdraw : @some : big_map address nat : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation : @some : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   DUP;        # @parameter%withdraw : @parameter%withdraw : @some : big_map address nat : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation : @some : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   DUP 3;      # @some : @parameter%withdraw : @parameter%withdraw : @some : big_map address nat : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation : @some : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   COMPARE;    # int : @parameter%withdraw : @some : big_map address nat : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation : @some : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   LE;         # bool : @parameter%withdraw : @some : big_map address nat : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation : @some : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   IF
                                     {
                                       DROP;       # @some : big_map address nat : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation : @some : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                     }
                                     {
                                       SWAP;       # @some : @parameter%withdraw : big_map address nat : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation : @some : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       DROP;       # @parameter%withdraw : big_map address nat : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation : @some : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                     }; # nat : big_map address nat : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation : @some : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   DIG 8;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : nat : big_map address nat : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation : @some : @parameter%withdraw : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   GET 5;      # pair nat (big_map address nat) : nat : big_map address nat : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation : @some : @parameter%withdraw : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   CAR;        # nat : nat : big_map address nat : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation : @some : @parameter%withdraw : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   SUB;        # int : big_map address nat : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation : @some : @parameter%withdraw : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   ISNAT;      # option nat : big_map address nat : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation : @some : @parameter%withdraw : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   IF_NONE
                                     {
                                       PUSH int 305; # int : big_map address nat : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation : @some : @parameter%withdraw : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       FAILWITH;   # FAILED
                                     }
                                     {}; # @some : big_map address nat : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation : @some : @parameter%withdraw : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   PAIR;       # pair @some (big_map address nat) : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation : @some : @parameter%withdraw : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   PAIR;       # pair (pair @some (big_map address nat)) (pair address address) : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation : @some : @parameter%withdraw : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   SWAP;       # pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair @some (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation : @some : @parameter%withdraw : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   PAIR;       # pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation : @some : @parameter%withdraw : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   SWAP;       # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : @some : @parameter%withdraw : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   # self.data.balances[sp.sender] = sp.as_nat(compute_gauge_292.value - sp.min(params, compute_gauge_292.value)) # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : @some : @parameter%withdraw : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   UNPAIR;     # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : @some : @parameter%withdraw : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   UNPAIR;     # pair (big_map address nat) (big_map address nat) : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : @some : @parameter%withdraw : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   UNPAIR;     # big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : @some : @parameter%withdraw : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   SWAP;       # big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : @some : @parameter%withdraw : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   DUP 7;      # @some : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : @some : @parameter%withdraw : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   DIG 8;      # @parameter%withdraw : @some : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : @some : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   DUP;        # @parameter%withdraw : @parameter%withdraw : @some : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : @some : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   DUP 3;      # @some : @parameter%withdraw : @parameter%withdraw : @some : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : @some : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   COMPARE;    # int : @parameter%withdraw : @some : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : @some : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   LE;         # bool : @parameter%withdraw : @some : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : @some : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   IF
                                     {
                                       DROP;       # @some : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : @some : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                     }
                                     {
                                       SWAP;       # @some : @parameter%withdraw : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : @some : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       DROP;       # @parameter%withdraw : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : @some : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                     }; # nat : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : @some : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   DIG 7;      # @some : nat : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   SUB;        # int : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   ISNAT;      # option nat : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   IF_NONE
                                     {
                                       PUSH int 306; # int : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       FAILWITH;   # FAILED
                                     }
                                     {}; # @some : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   SOME;       # option nat : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   SENDER;     # @sender : option nat : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   UPDATE;     # big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   SWAP;       # big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   PAIR;       # pair (big_map address nat) (big_map address nat) : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   PAIR;       # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   PAIR;       # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   PAIR;       # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : list operation : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   SWAP;       # list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   # if self.data.balances[sp.sender] == 0: # list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   PUSH nat 0; # nat : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   DUP 3;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : nat : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   CAR;        # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   CAR;        # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : nat : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   CAR;        # pair (big_map address nat) (big_map address nat) : nat : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   CDR;        # big_map address nat : nat : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   SENDER;     # @sender : big_map address nat : nat : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   GET;        # option nat : nat : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   IF_NONE
                                     {
                                       PUSH int 309; # int : nat : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       FAILWITH;   # FAILED
                                     }
                                     {}; # @some : nat : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   COMPARE;    # int : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   EQ;         # bool : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   IF
                                     {
                                       SWAP;       # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : list operation : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       # if self.data.attached_tokens.contains(sp.sender): # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : list operation : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       DUP;        # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : list operation : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       DUG 2;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       CAR;        # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       CAR;        # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       CAR;        # pair (big_map address nat) (big_map address nat) : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       CAR;        # big_map address nat : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       SENDER;     # @sender : big_map address nat : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       MEM;        # bool : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                       IF
                                         {
                                           SWAP;       # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : list operation : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           # sp.transfer(sp.record(attachments = sp.list([variant('remove_attachment', self.data.attached_tokens[sp.sender])]), owner = sp.sender), sp.tez(0), sp.contract(sp.TRecord(attachments = sp.TList(sp.TVariant(add_attachment = sp.TNat, remove_attachment = sp.TNat).layout(("add_attachment", "remove_attachment"))), owner = sp.TAddress).layout(("attachments", "owner")), self.data.ve_address, entry_point='update_attachments').open_some()) # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : list operation : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           DUP;        # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : list operation : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           DUG 2;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           GET 7;      # address : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           CONTRACT %update_attachments (pair (list %attachments (or (nat %add_attachment) (nat %remove_attachment))) (address %owner)); # option (contract (pair (list %attachments (or (nat %add_attachment) (nat %remove_attachment))) (address %owner))) : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           IF_NONE
                                             {
                                               PUSH int 88; # int : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                               FAILWITH;   # FAILED
                                             }
                                             {}; # @some : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           PUSH mutez 0; # mutez : @some : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           SENDER;     # @sender : mutez : @some : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           NIL (or nat nat); # list (or nat nat) : @sender : mutez : @some : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           DUP 6;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : list (or nat nat) : @sender : mutez : @some : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           CAR;        # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list (or nat nat) : @sender : mutez : @some : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           CAR;        # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : list (or nat nat) : @sender : mutez : @some : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           CAR;        # pair (big_map address nat) (big_map address nat) : list (or nat nat) : @sender : mutez : @some : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           CAR;        # big_map address nat : list (or nat nat) : @sender : mutez : @some : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           SENDER;     # @sender : big_map address nat : list (or nat nat) : @sender : mutez : @some : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           GET;        # option nat : list (or nat nat) : @sender : mutez : @some : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           IF_NONE
                                             {
                                               PUSH int 315; # int : list (or nat nat) : @sender : mutez : @some : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                               FAILWITH;   # FAILED
                                             }
                                             {}; # @some : list (or nat nat) : @sender : mutez : @some : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           RIGHT nat;  # or nat nat : list (or nat nat) : @sender : mutez : @some : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           CONS;       # list (or nat nat) : @sender : mutez : @some : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           PAIR;       # pair (list (or nat nat)) @sender : mutez : @some : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           TRANSFER_TOKENS; # operation : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           CONS;       # list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           SWAP;       # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : list operation : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           # del self.data.attached_tokens[sp.sender] # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : list operation : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           UNPAIR;     # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           UNPAIR;     # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           UNPAIR;     # pair (big_map address nat) (big_map address nat) : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           UNPAIR;     # big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           NONE nat;   # option nat : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           SENDER;     # @sender : option nat : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           UPDATE;     # big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           PAIR;       # pair (big_map address nat) (big_map address nat) : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           PAIR;       # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           PAIR;       # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           PAIR;       # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : list operation : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                           SWAP;       # list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                         }
                                         {}; # list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                     }
                                     {}; # list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   # compute_gauge_325 = sp.local("compute_gauge_325", self.update_derived(sp.record(address = sp.sender, token_id = self.data.attached_tokens.get(sp.sender, default_value = 0)))) # list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                                   DUG 2;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : list operation
                                   DUP;        # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : list operation
                                   DUG 3;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)))
                                   CAR;        # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)))
                                   CAR;        # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)))
                                   CAR;        # pair (big_map address nat) (big_map address nat) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)))
                                   CAR;        # big_map address nat : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)))
                                   SENDER;     # @sender : big_map address nat : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)))
                                   GET;        # option nat : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)))
                                   IF_NONE
                                     {
                                       PUSH nat 0; # nat : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)))
                                     }
                                     {}; # nat : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)))
                                   SENDER;     # @sender : nat : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)))
                                   PAIR;       # pair @sender nat : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)))
                                   SWAP;       # lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : pair @sender nat : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)))
                                   DIG 3;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : pair @sender nat : list operation
                                   DIG 2;      # pair @sender nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : list operation
                                   PAIR;       # pair (pair @sender nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : list operation
                                   EXEC;       # pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))) : list operation
                                   CDR;        # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : list operation
                                   SWAP;       # list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                 }; # list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                             }; # list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                         }; # list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       NIL operation; # list operation : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       SWAP;       # list operation : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       ITER
                         {
                           CONS;       # list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                         }; # list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       PAIR;       # pair (list operation) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))
                     }}; # operation : address : list operation : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                PAIR;       # pair operation address : list operation : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                # sp.operations().push(create_contract_core_factory_103.value.operation) # pair operation address : list operation : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                DUP;        # pair operation address : pair operation address : list operation : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                DUG 2;      # pair operation address : list operation : pair operation address : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                CAR;        # operation : list operation : pair operation address : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                CONS;       # list operation : pair operation address : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                SWAP;       # pair operation address : list operation : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                # sp.result(sp.record(claim_ledger = {}, epoch_bribes = {}, uid = 0, voter = self.data.voter))
                # create_contract_core_factory_106 = sp.local("create_contract_core_factory_106", create contract ...) # pair operation address : list operation : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                PUSH (pair nat address) (Pair 0 "tz1RBkXZSiQb3fS7Sg3zbFdPMBFPJUNHdcFo"); # pair nat address : pair operation address : list operation : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                EMPTY_BIG_MAP (pair nat nat) (pair address (pair (or address (or (pair address nat) unit)) nat)); # big_map (pair nat nat) (pair address (pair (or address (or (pair address nat) unit)) nat)) : pair nat address : pair operation address : list operation : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                EMPTY_BIG_MAP (pair nat nat) unit; # big_map (pair nat nat) unit : big_map (pair nat nat) (pair address (pair (or address (or (pair address nat) unit)) nat)) : pair nat address : pair operation address : list operation : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                PAIR;       # pair (big_map (pair nat nat) unit) (big_map (pair nat nat) (pair address (pair (or address (or (pair address nat) unit)) nat))) : pair nat address : pair operation address : list operation : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                PAIR;       # pair (pair (big_map (pair nat nat) unit) (big_map (pair nat nat) (pair address (pair (or address (or (pair address nat) unit)) nat)))) (pair nat address) : pair operation address : list operation : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                PUSH mutez 0; # mutez : pair (pair (big_map (pair nat nat) unit) (big_map (pair nat nat) (pair address (pair (or address (or (pair address nat) unit)) nat)))) (pair nat address) : pair operation address : list operation : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                NONE key_hash; # option key_hash : mutez : pair (pair (big_map (pair nat nat) unit) (big_map (pair nat nat) (pair address (pair (or address (or (pair address nat) unit)) nat)))) (pair nat address) : pair operation address : list operation : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                CREATE_CONTRACT
                 { parameter (or (or (pair %add_bribe (nat %epoch) (pair (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) (pair %claim (nat %token_id) (pair (address %owner) (pair (nat %epoch) (pair (nat %bribe_id) (nat %vote_share)))))) (or (unit %default) (pair %return_bribe (nat %epoch) (nat %bribe_id))));
                   storage   (pair (pair (big_map %claim_ledger (pair (nat %token_id) (nat %bribe_id)) unit) (big_map %epoch_bribes (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))))) (pair (nat %uid) (address %voter)));
                   code
                     {
                       UNPAIR;     # @parameter : @storage
                       IF_LEFT
                         {
                           IF_LEFT
                             {
                               SWAP;       # @storage : @parameter%add_bribe
                               # == add_bribe ==
                               # compute_bribe_112 = sp.local("compute_bribe_112", sp.view("get_current_epoch", self.data.voter, sp.unit, sp.TPair(sp.TNat, sp.TTimestamp)).open_some(message = 'INVALID_VIEW')) # @storage : @parameter%add_bribe
                               DUP;        # @storage : @storage : @parameter%add_bribe
                               DUG 2;      # @storage : @parameter%add_bribe : @storage
                               GET 4;      # address : @parameter%add_bribe : @storage
                               UNIT;       # unit : address : @parameter%add_bribe : @storage
                               VIEW "get_current_epoch" (pair nat timestamp); # option (pair nat timestamp) : @parameter%add_bribe : @storage
                               IF_NONE
                                 {
                                   PUSH string "INVALID_VIEW"; # string : @parameter%add_bribe : @storage
                                   FAILWITH;   # FAILED
                                 }
                                 {}; # @some : @parameter%add_bribe : @storage
                               # sp.verify((params.epoch > sp.fst(compute_bribe_112.value)) | ((params.epoch == sp.fst(compute_bribe_112.value)) & (sp.now < sp.snd(compute_bribe_112.value))), 'EPOCH_IN_THE_PAST') # @some : @parameter%add_bribe : @storage
                               DUP;        # @some : @some : @parameter%add_bribe : @storage
                               CAR;        # nat : @some : @parameter%add_bribe : @storage
                               DUP 3;      # @parameter%add_bribe : nat : @some : @parameter%add_bribe : @storage
                               CAR;        # nat : nat : @some : @parameter%add_bribe : @storage
                               COMPARE;    # int : @some : @parameter%add_bribe : @storage
                               GT;         # bool : @some : @parameter%add_bribe : @storage
                               IF
                                 {
                                   PUSH bool True; # bool : @some : @parameter%add_bribe : @storage
                                 }
                                 {
                                   DUP;        # @some : @some : @parameter%add_bribe : @storage
                                   CAR;        # nat : @some : @parameter%add_bribe : @storage
                                   DUP 3;      # @parameter%add_bribe : nat : @some : @parameter%add_bribe : @storage
                                   CAR;        # nat : nat : @some : @parameter%add_bribe : @storage
                                   COMPARE;    # int : @some : @parameter%add_bribe : @storage
                                   EQ;         # bool : @some : @parameter%add_bribe : @storage
                                   IF
                                     {
                                       DUP;        # @some : @some : @parameter%add_bribe : @storage
                                       CDR;        # timestamp : @some : @parameter%add_bribe : @storage
                                       NOW;        # @now : timestamp : @some : @parameter%add_bribe : @storage
                                       COMPARE;    # int : @some : @parameter%add_bribe : @storage
                                       LT;         # bool : @some : @parameter%add_bribe : @storage
                                     }
                                     {
                                       PUSH bool False; # bool : @some : @parameter%add_bribe : @storage
                                     }; # bool : @some : @parameter%add_bribe : @storage
                                 }; # bool : @some : @parameter%add_bribe : @storage
                               IF
                                 {}
                                 {
                                   PUSH string "EPOCH_IN_THE_PAST"; # string : @some : @parameter%add_bribe : @storage
                                   FAILWITH;   # FAILED
                                 }; # @some : @parameter%add_bribe : @storage
                               # self.data.uid += 1 # @some : @parameter%add_bribe : @storage
                               DIG 2;      # @storage : @some : @parameter%add_bribe
                               DUP;        # @storage : @storage : @some : @parameter%add_bribe
                               GET 3;      # nat : @storage : @some : @parameter%add_bribe
                               PUSH nat 1; # nat : nat : @storage : @some : @parameter%add_bribe
                               ADD;        # nat : @storage : @some : @parameter%add_bribe
                               UPDATE 3;   # @storage : @some : @parameter%add_bribe
                               # self.data.epoch_bribes[sp.record(epoch = params.epoch, bribe_id = self.data.uid)] = sp.record(provider = sp.sender, bribe = sp.record(type = params.type, value = params.value)) # @storage : @some : @parameter%add_bribe
                               DUP;        # @storage : @storage : @some : @parameter%add_bribe
                               DUG 3;      # @storage : @some : @parameter%add_bribe : @storage
                               UNPAIR;     # pair (big_map %claim_ledger (pair (nat %token_id) (nat %bribe_id)) unit) (big_map %epoch_bribes (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value)))) : pair (nat %uid) (address %voter) : @some : @parameter%add_bribe : @storage
                               UNPAIR;     # big_map (pair (nat %token_id) (nat %bribe_id)) unit : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : pair (nat %uid) (address %voter) : @some : @parameter%add_bribe : @storage
                               SWAP;       # big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : big_map (pair (nat %token_id) (nat %bribe_id)) unit : pair (nat %uid) (address %voter) : @some : @parameter%add_bribe : @storage
                               DIG 4;      # @parameter%add_bribe : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : big_map (pair (nat %token_id) (nat %bribe_id)) unit : pair (nat %uid) (address %voter) : @some : @storage
                               DUP;        # @parameter%add_bribe : @parameter%add_bribe : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : big_map (pair (nat %token_id) (nat %bribe_id)) unit : pair (nat %uid) (address %voter) : @some : @storage
                               GET 4;      # nat : @parameter%add_bribe : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : big_map (pair (nat %token_id) (nat %bribe_id)) unit : pair (nat %uid) (address %voter) : @some : @storage
                               SWAP;       # @parameter%add_bribe : nat : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : big_map (pair (nat %token_id) (nat %bribe_id)) unit : pair (nat %uid) (address %voter) : @some : @storage
                               DUP;        # @parameter%add_bribe : @parameter%add_bribe : nat : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : big_map (pair (nat %token_id) (nat %bribe_id)) unit : pair (nat %uid) (address %voter) : @some : @storage
                               DUG 6;      # @parameter%add_bribe : nat : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : big_map (pair (nat %token_id) (nat %bribe_id)) unit : pair (nat %uid) (address %voter) : @some : @parameter%add_bribe : @storage
                               GET 3;      # or (address %fa12) (or (pair %fa2 address nat) (unit %tez)) : nat : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : big_map (pair (nat %token_id) (nat %bribe_id)) unit : pair (nat %uid) (address %voter) : @some : @parameter%add_bribe : @storage
                               PAIR;       # pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : big_map (pair (nat %token_id) (nat %bribe_id)) unit : pair (nat %uid) (address %voter) : @some : @parameter%add_bribe : @storage
                               SENDER;     # @sender : pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : big_map (pair (nat %token_id) (nat %bribe_id)) unit : pair (nat %uid) (address %voter) : @some : @parameter%add_bribe : @storage
                               PAIR;       # pair @sender (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat) : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : big_map (pair (nat %token_id) (nat %bribe_id)) unit : pair (nat %uid) (address %voter) : @some : @parameter%add_bribe : @storage
                               SOME;       # option (pair @sender (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)) : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : big_map (pair (nat %token_id) (nat %bribe_id)) unit : pair (nat %uid) (address %voter) : @some : @parameter%add_bribe : @storage
                               DIG 6;      # @storage : option (pair @sender (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)) : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : big_map (pair (nat %token_id) (nat %bribe_id)) unit : pair (nat %uid) (address %voter) : @some : @parameter%add_bribe
                               GET 3;      # nat : option (pair @sender (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)) : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : big_map (pair (nat %token_id) (nat %bribe_id)) unit : pair (nat %uid) (address %voter) : @some : @parameter%add_bribe
                               DUP 7;      # @parameter%add_bribe : nat : option (pair @sender (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)) : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : big_map (pair (nat %token_id) (nat %bribe_id)) unit : pair (nat %uid) (address %voter) : @some : @parameter%add_bribe
                               CAR;        # nat : nat : option (pair @sender (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)) : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : big_map (pair (nat %token_id) (nat %bribe_id)) unit : pair (nat %uid) (address %voter) : @some : @parameter%add_bribe
                               PAIR;       # pair nat nat : option (pair @sender (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)) : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : big_map (pair (nat %token_id) (nat %bribe_id)) unit : pair (nat %uid) (address %voter) : @some : @parameter%add_bribe
                               UPDATE;     # big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)) : big_map (pair (nat %token_id) (nat %bribe_id)) unit : pair (nat %uid) (address %voter) : @some : @parameter%add_bribe
                               SWAP;       # big_map (pair (nat %token_id) (nat %bribe_id)) unit : big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)) : pair (nat %uid) (address %voter) : @some : @parameter%add_bribe
                               PAIR;       # pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat))) : pair (nat %uid) (address %voter) : @some : @parameter%add_bribe
                               PAIR;       # pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter)) : @some : @parameter%add_bribe
                               DUG 2;      # @some : @parameter%add_bribe : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                               SWAP;       # @parameter%add_bribe : @some : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                               # with params.type.match_cases(...): # @parameter%add_bribe : @some : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                               DUP;        # @parameter%add_bribe : @parameter%add_bribe : @some : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                               DUG 2;      # @parameter%add_bribe : @some : @parameter%add_bribe : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                               GET 3;      # or (address %fa12) (or (pair %fa2 address nat) (unit %tez)) : @some : @parameter%add_bribe : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                               IF_LEFT
                                 {
                                   # if params.value > 0: # address : @some : @parameter%add_bribe : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                   PUSH nat 0; # nat : address : @some : @parameter%add_bribe : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                   DUP 4;      # @parameter%add_bribe : nat : address : @some : @parameter%add_bribe : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                   GET 4;      # nat : nat : address : @some : @parameter%add_bribe : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                   COMPARE;    # int : address : @some : @parameter%add_bribe : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                   GT;         # bool : address : @some : @parameter%add_bribe : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                   IF
                                     {
                                       SWAP;       # @some : address : @parameter%add_bribe : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                       DROP;       # address : @parameter%add_bribe : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                       # sp.transfer(sp.record(from_ = sp.sender, to_ = sp.self_address, value = params.value), sp.tez(0), sp.contract(sp.TRecord(from_ = sp.TAddress, to_ = sp.TAddress, value = sp.TNat).layout(("from_ as from", ("to_ as to", "value"))), fa12, entry_point='transfer').open_some()) # address : @parameter%add_bribe : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                       CONTRACT %transfer (pair (address %from) (pair (address %to) (nat %value))); # option (contract (pair (address %from) (pair (address %to) (nat %value)))) : @parameter%add_bribe : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                       IF_NONE
                                         {
                                           PUSH int 16; # int : @parameter%add_bribe : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                           FAILWITH;   # FAILED
                                         }
                                         {}; # @some : @parameter%add_bribe : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                       NIL operation; # list operation : @some : @parameter%add_bribe : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                       SWAP;       # @some : list operation : @parameter%add_bribe : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                       PUSH mutez 0; # mutez : @some : list operation : @parameter%add_bribe : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                       DIG 3;      # @parameter%add_bribe : mutez : @some : list operation : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                       GET 4;      # nat : mutez : @some : list operation : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                       SELF_ADDRESS; # @self : nat : mutez : @some : list operation : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                       SENDER;     # @sender : @self : nat : mutez : @some : list operation : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                       PAIR 3;     # pair @sender (pair @self nat) : mutez : @some : list operation : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                       TRANSFER_TOKENS; # operation : list operation : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                       CONS;       # list operation : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                     }
                                     {
                                       DROP 3;     # pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                       NIL operation; # list operation : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                     }; # list operation : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                 }
                                 {
                                   IF_LEFT
                                     {
                                       # if params.value > 0: # pair address nat : @some : @parameter%add_bribe : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                       PUSH nat 0; # nat : pair address nat : @some : @parameter%add_bribe : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                       DUP 4;      # @parameter%add_bribe : nat : pair address nat : @some : @parameter%add_bribe : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                       GET 4;      # nat : nat : pair address nat : @some : @parameter%add_bribe : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                       COMPARE;    # int : pair address nat : @some : @parameter%add_bribe : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                       GT;         # bool : pair address nat : @some : @parameter%add_bribe : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                       IF
                                         {
                                           SWAP;       # @some : pair address nat : @parameter%add_bribe : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                           DROP;       # pair address nat : @parameter%add_bribe : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                           # sp.transfer(sp.list([sp.record(from_ = sp.sender, txs = sp.list([sp.record(to_ = sp.self_address, token_id = sp.snd(fa2), amount = params.value)]))]), sp.tez(0), sp.contract(sp.TList(sp.TRecord(from_ = sp.TAddress, txs = sp.TList(sp.TRecord(amount = sp.TNat, to_ = sp.TAddress, token_id = sp.TNat).layout(("to_", ("token_id", "amount"))))).layout(("from_", "txs"))), sp.fst(fa2), entry_point='transfer').open_some()) # pair address nat : @parameter%add_bribe : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                           DUP;        # pair address nat : pair address nat : @parameter%add_bribe : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                           CAR;        # address : pair address nat : @parameter%add_bribe : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                           CONTRACT %transfer (list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))); # option (contract (list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))))) : pair address nat : @parameter%add_bribe : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                           IF_NONE
                                             {
                                               PUSH int 55; # int : pair address nat : @parameter%add_bribe : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                               FAILWITH;   # FAILED
                                             }
                                             {}; # @some : pair address nat : @parameter%add_bribe : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                           NIL operation; # list operation : @some : pair address nat : @parameter%add_bribe : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                           SWAP;       # @some : list operation : pair address nat : @parameter%add_bribe : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                           PUSH mutez 0; # mutez : @some : list operation : pair address nat : @parameter%add_bribe : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                           NIL (pair address (list (pair address (pair nat nat)))); # list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair address nat : @parameter%add_bribe : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                           NIL (pair address (pair nat nat)); # list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair address nat : @parameter%add_bribe : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                           DIG 6;      # @parameter%add_bribe : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair address nat : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                           GET 4;      # nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair address nat : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                           DIG 6;      # pair address nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                           CDR;        # nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                           SELF_ADDRESS; # @self : nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                           PAIR 3;     # pair @self (pair nat nat) : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                           CONS;       # list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                           SENDER;     # @sender : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                           PAIR;       # pair @sender (list (pair address (pair nat nat))) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                           CONS;       # list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                           TRANSFER_TOKENS; # operation : list operation : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                           CONS;       # list operation : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                         }
                                         {
                                           DROP 3;     # pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                           NIL operation; # list operation : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                         }; # list operation : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                     }
                                     {
                                       DROP 2;     # @parameter%add_bribe : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                       # sp.verify(sp.amount == sp.mul(params.value, sp.mutez(1)), 'INCORRECT_TEZ_VALUE_SENT') # @parameter%add_bribe : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                       GET 4;      # nat : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                       PUSH mutez 1; # mutez : nat : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                       SWAP;       # nat : mutez : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                       MUL;        # mutez : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                       AMOUNT;     # @amount : mutez : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                       COMPARE;    # int : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                       EQ;         # bool : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                       IF
                                         {}
                                         {
                                           PUSH string "INCORRECT_TEZ_VALUE_SENT"; # string : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                           FAILWITH;   # FAILED
                                         }; # pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                       NIL operation; # list operation : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                     }; # list operation : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                                 }; # list operation : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                             }
                             {
                               SWAP;       # @storage : @parameter%claim
                               # == claim ==
                               # sp.verify(sp.sender == self.data.voter, 'NOT_AUTHORISED') # @storage : @parameter%claim
                               DUP;        # @storage : @storage : @parameter%claim
                               DUG 2;      # @storage : @parameter%claim : @storage
                               GET 4;      # address : @parameter%claim : @storage
                               SENDER;     # @sender : address : @parameter%claim : @storage
                               COMPARE;    # int : @parameter%claim : @storage
                               EQ;         # bool : @parameter%claim : @storage
                               IF
                                 {}
                                 {
                                   PUSH string "NOT_AUTHORISED"; # string : @parameter%claim : @storage
                                   FAILWITH;   # FAILED
                                 }; # @parameter%claim : @storage
                               SWAP;       # @storage : @parameter%claim
                               # sp.verify(self.data.epoch_bribes.contains(sp.record(epoch = params.epoch, bribe_id = params.bribe_id)), 'INVALID_BRIBE_ID_OR_EPOCH') # @storage : @parameter%claim
                               DUP;        # @storage : @storage : @parameter%claim
                               DUG 2;      # @storage : @parameter%claim : @storage
                               CAR;        # pair (big_map %claim_ledger (pair (nat %token_id) (nat %bribe_id)) unit) (big_map %epoch_bribes (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value)))) : @parameter%claim : @storage
                               CDR;        # big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : @parameter%claim : @storage
                               SWAP;       # @parameter%claim : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : @storage
                               DUP;        # @parameter%claim : @parameter%claim : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : @storage
                               GET 7;      # nat : @parameter%claim : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : @storage
                               SWAP;       # @parameter%claim : nat : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : @storage
                               DUP;        # @parameter%claim : @parameter%claim : nat : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : @storage
                               DUG 3;      # @parameter%claim : nat : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : @parameter%claim : @storage
                               GET 5;      # nat : nat : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : @parameter%claim : @storage
                               PAIR;       # pair nat nat : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : @parameter%claim : @storage
                               MEM;        # bool : @parameter%claim : @storage
                               IF
                                 {}
                                 {
                                   PUSH string "INVALID_BRIBE_ID_OR_EPOCH"; # string : @parameter%claim : @storage
                                   FAILWITH;   # FAILED
                                 }; # @parameter%claim : @storage
                               SWAP;       # @storage : @parameter%claim
                               # sp.verify(~ (self.data.claim_ledger.contains(sp.record(token_id = params.token_id, bribe_id = params.bribe_id))), 'VOTER_HAS_ALREADY_CLAIMED_BRIBE') # @storage : @parameter%claim
                               DUP;        # @storage : @storage : @parameter%claim
                               DUG 2;      # @storage : @parameter%claim : @storage
                               CAR;        # pair (big_map %claim_ledger (pair (nat %token_id) (nat %bribe_id)) unit) (big_map %epoch_bribes (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value)))) : @parameter%claim : @storage
                               CAR;        # big_map (pair (nat %token_id) (nat %bribe_id)) unit : @parameter%claim : @storage
                               SWAP;       # @parameter%claim : big_map (pair (nat %token_id) (nat %bribe_id)) unit : @storage
                               DUP;        # @parameter%claim : @parameter%claim : big_map (pair (nat %token_id) (nat %bribe_id)) unit : @storage
                               GET 7;      # nat : @parameter%claim : big_map (pair (nat %token_id) (nat %bribe_id)) unit : @storage
                               SWAP;       # @parameter%claim : nat : big_map (pair (nat %token_id) (nat %bribe_id)) unit : @storage
                               DUP;        # @parameter%claim : @parameter%claim : nat : big_map (pair (nat %token_id) (nat %bribe_id)) unit : @storage
                               DUG 3;      # @parameter%claim : nat : big_map (pair (nat %token_id) (nat %bribe_id)) unit : @parameter%claim : @storage
                               CAR;        # nat : nat : big_map (pair (nat %token_id) (nat %bribe_id)) unit : @parameter%claim : @storage
                               PAIR;       # pair nat nat : big_map (pair (nat %token_id) (nat %bribe_id)) unit : @parameter%claim : @storage
                               MEM;        # bool : @parameter%claim : @storage
                               IF
                                 {
                                   PUSH string "VOTER_HAS_ALREADY_CLAIMED_BRIBE"; # string : @parameter%claim : @storage
                                   FAILWITH;   # FAILED
                                 }
                                 {}; # @parameter%claim : @storage
                               SWAP;       # @storage : @parameter%claim
                               # compute_bribe_178 = sp.local("compute_bribe_178", self.data.epoch_bribes[sp.record(epoch = params.epoch, bribe_id = params.bribe_id)]) # @storage : @parameter%claim
                               DUP;        # @storage : @storage : @parameter%claim
                               DUG 2;      # @storage : @parameter%claim : @storage
                               CAR;        # pair (big_map %claim_ledger (pair (nat %token_id) (nat %bribe_id)) unit) (big_map %epoch_bribes (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value)))) : @parameter%claim : @storage
                               CDR;        # big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : @parameter%claim : @storage
                               SWAP;       # @parameter%claim : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : @storage
                               DUP;        # @parameter%claim : @parameter%claim : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : @storage
                               GET 7;      # nat : @parameter%claim : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : @storage
                               SWAP;       # @parameter%claim : nat : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : @storage
                               DUP;        # @parameter%claim : @parameter%claim : nat : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : @storage
                               DUG 3;      # @parameter%claim : nat : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : @parameter%claim : @storage
                               GET 5;      # nat : nat : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : @parameter%claim : @storage
                               PAIR;       # pair nat nat : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : @parameter%claim : @storage
                               GET;        # option (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : @parameter%claim : @storage
                               IF_NONE
                                 {
                                   PUSH int 178; # int : @parameter%claim : @storage
                                   FAILWITH;   # FAILED
                                 }
                                 {}; # @some : @parameter%claim : @storage
                               # with compute_bribe_178.value.bribe.type.match_cases(...): # @some : @parameter%claim : @storage
                               DUP;        # @some : @some : @parameter%claim : @storage
                               GET 3;      # or (address %fa12) (or (pair %fa2 address nat) (unit %tez)) : @some : @parameter%claim : @storage
                               IF_LEFT
                                 {
                                   # if ((compute_bribe_178.value.bribe.value * params.vote_share) // 1000000000000000000) > 0: # address : @some : @parameter%claim : @storage
                                   PUSH nat 0; # nat : address : @some : @parameter%claim : @storage
                                   PUSH nat 1000000000000000000; # nat : nat : address : @some : @parameter%claim : @storage
                                   DUP 5;      # @parameter%claim : nat : nat : address : @some : @parameter%claim : @storage
                                   GET 8;      # nat : nat : nat : address : @some : @parameter%claim : @storage
                                   DUP 5;      # @some : nat : nat : nat : address : @some : @parameter%claim : @storage
                                   GET 4;      # nat : nat : nat : nat : address : @some : @parameter%claim : @storage
                                   MUL;        # nat : nat : nat : address : @some : @parameter%claim : @storage
                                   EDIV;       # option (pair nat nat) : nat : address : @some : @parameter%claim : @storage
                                   IF_NONE
                                     {
                                       PUSH int 179; # int : nat : address : @some : @parameter%claim : @storage
                                       FAILWITH;   # FAILED
                                     }
                                     {
                                       CAR;        # nat : nat : address : @some : @parameter%claim : @storage
                                     }; # nat : nat : address : @some : @parameter%claim : @storage
                                   COMPARE;    # int : address : @some : @parameter%claim : @storage
                                   GT;         # bool : address : @some : @parameter%claim : @storage
                                   IF
                                     {
                                       # sp.transfer(sp.record(from_ = sp.self_address, to_ = params.owner, value = (compute_bribe_178.value.bribe.value * params.vote_share) // 1000000000000000000), sp.tez(0), sp.contract(sp.TRecord(from_ = sp.TAddress, to_ = sp.TAddress, value = sp.TNat).layout(("from_ as from", ("to_ as to", "value"))), fa12, entry_point='transfer').open_some()) # address : @some : @parameter%claim : @storage
                                       CONTRACT %transfer (pair (address %from) (pair (address %to) (nat %value))); # option (contract (pair (address %from) (pair (address %to) (nat %value)))) : @some : @parameter%claim : @storage
                                       IF_NONE
                                         {
                                           PUSH int 16; # int : @some : @parameter%claim : @storage
                                           FAILWITH;   # FAILED
                                         }
                                         {}; # @some : @some : @parameter%claim : @storage
                                       NIL operation; # list operation : @some : @some : @parameter%claim : @storage
                                       SWAP;       # @some : list operation : @some : @parameter%claim : @storage
                                       PUSH mutez 0; # mutez : @some : list operation : @some : @parameter%claim : @storage
                                       PUSH nat 1000000000000000000; # nat : mutez : @some : list operation : @some : @parameter%claim : @storage
                                       DUP 6;      # @parameter%claim : nat : mutez : @some : list operation : @some : @parameter%claim : @storage
                                       GET 8;      # nat : nat : mutez : @some : list operation : @some : @parameter%claim : @storage
                                       DIG 5;      # @some : nat : nat : mutez : @some : list operation : @parameter%claim : @storage
                                       GET 4;      # nat : nat : nat : mutez : @some : list operation : @parameter%claim : @storage
                                       MUL;        # nat : nat : mutez : @some : list operation : @parameter%claim : @storage
                                       EDIV;       # option (pair nat nat) : mutez : @some : list operation : @parameter%claim : @storage
                                       IF_NONE
                                         {
                                           PUSH int 179; # int : mutez : @some : list operation : @parameter%claim : @storage
                                           FAILWITH;   # FAILED
                                         }
                                         {
                                           CAR;        # nat : mutez : @some : list operation : @parameter%claim : @storage
                                         }; # nat : mutez : @some : list operation : @parameter%claim : @storage
                                       DUP 5;      # @parameter%claim : nat : mutez : @some : list operation : @parameter%claim : @storage
                                       GET 3;      # address : nat : mutez : @some : list operation : @parameter%claim : @storage
                                       SELF_ADDRESS; # @self : address : nat : mutez : @some : list operation : @parameter%claim : @storage
                                       PAIR 3;     # pair @self (pair address nat) : mutez : @some : list operation : @parameter%claim : @storage
                                       TRANSFER_TOKENS; # operation : list operation : @parameter%claim : @storage
                                       CONS;       # list operation : @parameter%claim : @storage
                                     }
                                     {
                                       DROP 2;     # @parameter%claim : @storage
                                       NIL operation; # list operation : @parameter%claim : @storage
                                     }; # list operation : @parameter%claim : @storage
                                 }
                                 {
                                   IF_LEFT
                                     {
                                       # if ((compute_bribe_178.value.bribe.value * params.vote_share) // 1000000000000000000) > 0: # pair address nat : @some : @parameter%claim : @storage
                                       PUSH nat 0; # nat : pair address nat : @some : @parameter%claim : @storage
                                       PUSH nat 1000000000000000000; # nat : nat : pair address nat : @some : @parameter%claim : @storage
                                       DUP 5;      # @parameter%claim : nat : nat : pair address nat : @some : @parameter%claim : @storage
                                       GET 8;      # nat : nat : nat : pair address nat : @some : @parameter%claim : @storage
                                       DUP 5;      # @some : nat : nat : nat : pair address nat : @some : @parameter%claim : @storage
                                       GET 4;      # nat : nat : nat : nat : pair address nat : @some : @parameter%claim : @storage
                                       MUL;        # nat : nat : nat : pair address nat : @some : @parameter%claim : @storage
                                       EDIV;       # option (pair nat nat) : nat : pair address nat : @some : @parameter%claim : @storage
                                       IF_NONE
                                         {
                                           PUSH int 179; # int : nat : pair address nat : @some : @parameter%claim : @storage
                                           FAILWITH;   # FAILED
                                         }
                                         {
                                           CAR;        # nat : nat : pair address nat : @some : @parameter%claim : @storage
                                         }; # nat : nat : pair address nat : @some : @parameter%claim : @storage
                                       COMPARE;    # int : pair address nat : @some : @parameter%claim : @storage
                                       GT;         # bool : pair address nat : @some : @parameter%claim : @storage
                                       IF
                                         {
                                           # sp.transfer(sp.list([sp.record(from_ = sp.self_address, txs = sp.list([sp.record(to_ = params.owner, token_id = sp.snd(fa2), amount = (compute_bribe_178.value.bribe.value * params.vote_share) // 1000000000000000000)]))]), sp.tez(0), sp.contract(sp.TList(sp.TRecord(from_ = sp.TAddress, txs = sp.TList(sp.TRecord(amount = sp.TNat, to_ = sp.TAddress, token_id = sp.TNat).layout(("to_", ("token_id", "amount"))))).layout(("from_", "txs"))), sp.fst(fa2), entry_point='transfer').open_some()) # pair address nat : @some : @parameter%claim : @storage
                                           DUP;        # pair address nat : pair address nat : @some : @parameter%claim : @storage
                                           CAR;        # address : pair address nat : @some : @parameter%claim : @storage
                                           CONTRACT %transfer (list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))); # option (contract (list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))))) : pair address nat : @some : @parameter%claim : @storage
                                           IF_NONE
                                             {
                                               PUSH int 55; # int : pair address nat : @some : @parameter%claim : @storage
                                               FAILWITH;   # FAILED
                                             }
                                             {}; # @some : pair address nat : @some : @parameter%claim : @storage
                                           NIL operation; # list operation : @some : pair address nat : @some : @parameter%claim : @storage
                                           SWAP;       # @some : list operation : pair address nat : @some : @parameter%claim : @storage
                                           PUSH mutez 0; # mutez : @some : list operation : pair address nat : @some : @parameter%claim : @storage
                                           NIL (pair address (list (pair address (pair nat nat)))); # list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair address nat : @some : @parameter%claim : @storage
                                           NIL (pair address (pair nat nat)); # list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair address nat : @some : @parameter%claim : @storage
                                           PUSH nat 1000000000000000000; # nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair address nat : @some : @parameter%claim : @storage
                                           DUP 9;      # @parameter%claim : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair address nat : @some : @parameter%claim : @storage
                                           GET 8;      # nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair address nat : @some : @parameter%claim : @storage
                                           DIG 8;      # @some : nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair address nat : @parameter%claim : @storage
                                           GET 4;      # nat : nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair address nat : @parameter%claim : @storage
                                           MUL;        # nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair address nat : @parameter%claim : @storage
                                           EDIV;       # option (pair nat nat) : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair address nat : @parameter%claim : @storage
                                           IF_NONE
                                             {
                                               PUSH int 179; # int : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair address nat : @parameter%claim : @storage
                                               FAILWITH;   # FAILED
                                             }
                                             {
                                               CAR;        # nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair address nat : @parameter%claim : @storage
                                             }; # nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair address nat : @parameter%claim : @storage
                                           DIG 6;      # pair address nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%claim : @storage
                                           CDR;        # nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%claim : @storage
                                           DUP 8;      # @parameter%claim : nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%claim : @storage
                                           GET 3;      # address : nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%claim : @storage
                                           PAIR 3;     # pair address (pair nat nat) : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%claim : @storage
                                           CONS;       # list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%claim : @storage
                                           SELF_ADDRESS; # @self : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%claim : @storage
                                           PAIR;       # pair @self (list (pair address (pair nat nat))) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%claim : @storage
                                           CONS;       # list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%claim : @storage
                                           TRANSFER_TOKENS; # operation : list operation : @parameter%claim : @storage
                                           CONS;       # list operation : @parameter%claim : @storage
                                         }
                                         {
                                           DROP 2;     # @parameter%claim : @storage
                                           NIL operation; # list operation : @parameter%claim : @storage
                                         }; # list operation : @parameter%claim : @storage
                                     }
                                     {
                                       DROP;       # @some : @parameter%claim : @storage
                                       # sp.send(params.owner, sp.mul((compute_bribe_178.value.bribe.value * params.vote_share) // 1000000000000000000, sp.mutez(1))) # @some : @parameter%claim : @storage
                                       NIL operation; # list operation : @some : @parameter%claim : @storage
                                       DUP 3;      # @parameter%claim : list operation : @some : @parameter%claim : @storage
                                       GET 3;      # address : list operation : @some : @parameter%claim : @storage
                                       CONTRACT unit; # option (contract unit) : list operation : @some : @parameter%claim : @storage
                                       IF_NONE
                                         {
                                           PUSH int 203; # int : list operation : @some : @parameter%claim : @storage
                                           FAILWITH;   # FAILED
                                         }
                                         {}; # @some : list operation : @some : @parameter%claim : @storage
                                       PUSH mutez 1; # mutez : @some : list operation : @some : @parameter%claim : @storage
                                       PUSH nat 1000000000000000000; # nat : mutez : @some : list operation : @some : @parameter%claim : @storage
                                       DUP 6;      # @parameter%claim : nat : mutez : @some : list operation : @some : @parameter%claim : @storage
                                       GET 8;      # nat : nat : mutez : @some : list operation : @some : @parameter%claim : @storage
                                       DIG 5;      # @some : nat : nat : mutez : @some : list operation : @parameter%claim : @storage
                                       GET 4;      # nat : nat : nat : mutez : @some : list operation : @parameter%claim : @storage
                                       MUL;        # nat : nat : mutez : @some : list operation : @parameter%claim : @storage
                                       EDIV;       # option (pair nat nat) : mutez : @some : list operation : @parameter%claim : @storage
                                       IF_NONE
                                         {
                                           PUSH int 179; # int : mutez : @some : list operation : @parameter%claim : @storage
                                           FAILWITH;   # FAILED
                                         }
                                         {
                                           CAR;        # nat : mutez : @some : list operation : @parameter%claim : @storage
                                         }; # nat : mutez : @some : list operation : @parameter%claim : @storage
                                       MUL;        # mutez : @some : list operation : @parameter%claim : @storage
                                       UNIT;       # unit : mutez : @some : list operation : @parameter%claim : @storage
                                       TRANSFER_TOKENS; # operation : list operation : @parameter%claim : @storage
                                       CONS;       # list operation : @parameter%claim : @storage
                                     }; # list operation : @parameter%claim : @storage
                                 }; # list operation : @parameter%claim : @storage
                               # self.data.claim_ledger[sp.record(token_id = params.token_id, bribe_id = params.bribe_id)] = sp.unit # list operation : @parameter%claim : @storage
                               DIG 2;      # @storage : list operation : @parameter%claim
                               UNPAIR;     # pair (big_map %claim_ledger (pair (nat %token_id) (nat %bribe_id)) unit) (big_map %epoch_bribes (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value)))) : pair (nat %uid) (address %voter) : list operation : @parameter%claim
                               UNPAIR;     # big_map (pair (nat %token_id) (nat %bribe_id)) unit : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : pair (nat %uid) (address %voter) : list operation : @parameter%claim
                               PUSH (option unit) (Some Unit); # option unit : big_map (pair (nat %token_id) (nat %bribe_id)) unit : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : pair (nat %uid) (address %voter) : list operation : @parameter%claim
                               DIG 5;      # @parameter%claim : option unit : big_map (pair (nat %token_id) (nat %bribe_id)) unit : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : pair (nat %uid) (address %voter) : list operation
                               DUP;        # @parameter%claim : @parameter%claim : option unit : big_map (pair (nat %token_id) (nat %bribe_id)) unit : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : pair (nat %uid) (address %voter) : list operation
                               GET 7;      # nat : @parameter%claim : option unit : big_map (pair (nat %token_id) (nat %bribe_id)) unit : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : pair (nat %uid) (address %voter) : list operation
                               SWAP;       # @parameter%claim : nat : option unit : big_map (pair (nat %token_id) (nat %bribe_id)) unit : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : pair (nat %uid) (address %voter) : list operation
                               CAR;        # nat : nat : option unit : big_map (pair (nat %token_id) (nat %bribe_id)) unit : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : pair (nat %uid) (address %voter) : list operation
                               PAIR;       # pair nat nat : option unit : big_map (pair (nat %token_id) (nat %bribe_id)) unit : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : pair (nat %uid) (address %voter) : list operation
                               UPDATE;     # big_map (pair nat nat) unit : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : pair (nat %uid) (address %voter) : list operation
                               PAIR;       # pair (big_map (pair nat nat) unit) (big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value)))) : pair (nat %uid) (address %voter) : list operation
                               PAIR;       # pair (pair (big_map (pair nat nat) unit) (big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))))) (pair (nat %uid) (address %voter)) : list operation
                               SWAP;       # list operation : pair (pair (big_map (pair nat nat) unit) (big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))))) (pair (nat %uid) (address %voter))
                             }; # list operation : pair (pair (big_map (pair nat nat) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                         }
                         {
                           IF_LEFT
                             {
                               PUSH string "CONTRACT_DOES_NOT_ACCEPT_TEZ"; # string : @parameter%default : @storage
                               FAILWITH;   # FAILED
                             }
                             {
                               SWAP;       # @storage : @parameter%return_bribe
                               # == return_bribe ==
                               # sp.verify(sp.sender == self.data.voter, 'NOT_AUTHORISED') # @storage : @parameter%return_bribe
                               DUP;        # @storage : @storage : @parameter%return_bribe
                               DUG 2;      # @storage : @parameter%return_bribe : @storage
                               GET 4;      # address : @parameter%return_bribe : @storage
                               SENDER;     # @sender : address : @parameter%return_bribe : @storage
                               COMPARE;    # int : @parameter%return_bribe : @storage
                               EQ;         # bool : @parameter%return_bribe : @storage
                               IF
                                 {}
                                 {
                                   PUSH string "NOT_AUTHORISED"; # string : @parameter%return_bribe : @storage
                                   FAILWITH;   # FAILED
                                 }; # @parameter%return_bribe : @storage
                               SWAP;       # @storage : @parameter%return_bribe
                               # sp.verify(self.data.epoch_bribes.contains(params), 'INVALID_BRIBE_ID_OR_EPOCH') # @storage : @parameter%return_bribe
                               DUP;        # @storage : @storage : @parameter%return_bribe
                               DUG 2;      # @storage : @parameter%return_bribe : @storage
                               CAR;        # pair (big_map %claim_ledger (pair (nat %token_id) (nat %bribe_id)) unit) (big_map %epoch_bribes (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value)))) : @parameter%return_bribe : @storage
                               CDR;        # big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : @parameter%return_bribe : @storage
                               SWAP;       # @parameter%return_bribe : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : @storage
                               DUP;        # @parameter%return_bribe : @parameter%return_bribe : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : @storage
                               DUG 2;      # @parameter%return_bribe : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : @parameter%return_bribe : @storage
                               MEM;        # bool : @parameter%return_bribe : @storage
                               IF
                                 {}
                                 {
                                   PUSH string "INVALID_BRIBE_ID_OR_EPOCH"; # string : @parameter%return_bribe : @storage
                                   FAILWITH;   # FAILED
                                 }; # @parameter%return_bribe : @storage
                               SWAP;       # @storage : @parameter%return_bribe
                               # compute_bribe_218 = sp.local("compute_bribe_218", self.data.epoch_bribes[params]) # @storage : @parameter%return_bribe
                               DUP;        # @storage : @storage : @parameter%return_bribe
                               DUG 2;      # @storage : @parameter%return_bribe : @storage
                               CAR;        # pair (big_map %claim_ledger (pair (nat %token_id) (nat %bribe_id)) unit) (big_map %epoch_bribes (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value)))) : @parameter%return_bribe : @storage
                               CDR;        # big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : @parameter%return_bribe : @storage
                               SWAP;       # @parameter%return_bribe : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : @storage
                               DUP;        # @parameter%return_bribe : @parameter%return_bribe : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : @storage
                               DUG 2;      # @parameter%return_bribe : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : @parameter%return_bribe : @storage
                               GET;        # option (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : @parameter%return_bribe : @storage
                               IF_NONE
                                 {
                                   PUSH int 218; # int : @parameter%return_bribe : @storage
                                   FAILWITH;   # FAILED
                                 }
                                 {}; # @some : @parameter%return_bribe : @storage
                               # with compute_bribe_218.value.bribe.type.match_cases(...): # @some : @parameter%return_bribe : @storage
                               DUP;        # @some : @some : @parameter%return_bribe : @storage
                               GET 3;      # or (address %fa12) (or (pair %fa2 address nat) (unit %tez)) : @some : @parameter%return_bribe : @storage
                               IF_LEFT
                                 {
                                   # if compute_bribe_218.value.bribe.value > 0: # address : @some : @parameter%return_bribe : @storage
                                   PUSH nat 0; # nat : address : @some : @parameter%return_bribe : @storage
                                   DUP 3;      # @some : nat : address : @some : @parameter%return_bribe : @storage
                                   GET 4;      # nat : nat : address : @some : @parameter%return_bribe : @storage
                                   COMPARE;    # int : address : @some : @parameter%return_bribe : @storage
                                   GT;         # bool : address : @some : @parameter%return_bribe : @storage
                                   IF
                                     {
                                       # sp.transfer(sp.record(from_ = sp.self_address, to_ = compute_bribe_218.value.provider, value = compute_bribe_218.value.bribe.value), sp.tez(0), sp.contract(sp.TRecord(from_ = sp.TAddress, to_ = sp.TAddress, value = sp.TNat).layout(("from_ as from", ("to_ as to", "value"))), fa12, entry_point='transfer').open_some()) # address : @some : @parameter%return_bribe : @storage
                                       CONTRACT %transfer (pair (address %from) (pair (address %to) (nat %value))); # option (contract (pair (address %from) (pair (address %to) (nat %value)))) : @some : @parameter%return_bribe : @storage
                                       IF_NONE
                                         {
                                           PUSH int 16; # int : @some : @parameter%return_bribe : @storage
                                           FAILWITH;   # FAILED
                                         }
                                         {}; # @some : @some : @parameter%return_bribe : @storage
                                       NIL operation; # list operation : @some : @some : @parameter%return_bribe : @storage
                                       SWAP;       # @some : list operation : @some : @parameter%return_bribe : @storage
                                       PUSH mutez 0; # mutez : @some : list operation : @some : @parameter%return_bribe : @storage
                                       DIG 3;      # @some : mutez : @some : list operation : @parameter%return_bribe : @storage
                                       DUP;        # @some : @some : mutez : @some : list operation : @parameter%return_bribe : @storage
                                       GET 4;      # nat : @some : mutez : @some : list operation : @parameter%return_bribe : @storage
                                       SWAP;       # @some : nat : mutez : @some : list operation : @parameter%return_bribe : @storage
                                       CAR;        # address : nat : mutez : @some : list operation : @parameter%return_bribe : @storage
                                       SELF_ADDRESS; # @self : address : nat : mutez : @some : list operation : @parameter%return_bribe : @storage
                                       PAIR 3;     # pair @self (pair address nat) : mutez : @some : list operation : @parameter%return_bribe : @storage
                                       TRANSFER_TOKENS; # operation : list operation : @parameter%return_bribe : @storage
                                       CONS;       # list operation : @parameter%return_bribe : @storage
                                     }
                                     {
                                       DROP 2;     # @parameter%return_bribe : @storage
                                       NIL operation; # list operation : @parameter%return_bribe : @storage
                                     }; # list operation : @parameter%return_bribe : @storage
                                 }
                                 {
                                   IF_LEFT
                                     {
                                       # if compute_bribe_218.value.bribe.value > 0: # pair address nat : @some : @parameter%return_bribe : @storage
                                       PUSH nat 0; # nat : pair address nat : @some : @parameter%return_bribe : @storage
                                       DUP 3;      # @some : nat : pair address nat : @some : @parameter%return_bribe : @storage
                                       GET 4;      # nat : nat : pair address nat : @some : @parameter%return_bribe : @storage
                                       COMPARE;    # int : pair address nat : @some : @parameter%return_bribe : @storage
                                       GT;         # bool : pair address nat : @some : @parameter%return_bribe : @storage
                                       IF
                                         {
                                           # sp.transfer(sp.list([sp.record(from_ = sp.self_address, txs = sp.list([sp.record(to_ = compute_bribe_218.value.provider, token_id = sp.snd(fa2), amount = compute_bribe_218.value.bribe.value)]))]), sp.tez(0), sp.contract(sp.TList(sp.TRecord(from_ = sp.TAddress, txs = sp.TList(sp.TRecord(amount = sp.TNat, to_ = sp.TAddress, token_id = sp.TNat).layout(("to_", ("token_id", "amount"))))).layout(("from_", "txs"))), sp.fst(fa2), entry_point='transfer').open_some()) # pair address nat : @some : @parameter%return_bribe : @storage
                                           DUP;        # pair address nat : pair address nat : @some : @parameter%return_bribe : @storage
                                           CAR;        # address : pair address nat : @some : @parameter%return_bribe : @storage
                                           CONTRACT %transfer (list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))); # option (contract (list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))))) : pair address nat : @some : @parameter%return_bribe : @storage
                                           IF_NONE
                                             {
                                               PUSH int 55; # int : pair address nat : @some : @parameter%return_bribe : @storage
                                               FAILWITH;   # FAILED
                                             }
                                             {}; # @some : pair address nat : @some : @parameter%return_bribe : @storage
                                           NIL operation; # list operation : @some : pair address nat : @some : @parameter%return_bribe : @storage
                                           SWAP;       # @some : list operation : pair address nat : @some : @parameter%return_bribe : @storage
                                           PUSH mutez 0; # mutez : @some : list operation : pair address nat : @some : @parameter%return_bribe : @storage
                                           NIL (pair address (list (pair address (pair nat nat)))); # list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair address nat : @some : @parameter%return_bribe : @storage
                                           NIL (pair address (pair nat nat)); # list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair address nat : @some : @parameter%return_bribe : @storage
                                           DUP 7;      # @some : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair address nat : @some : @parameter%return_bribe : @storage
                                           GET 4;      # nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair address nat : @some : @parameter%return_bribe : @storage
                                           DIG 6;      # pair address nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @some : @parameter%return_bribe : @storage
                                           CDR;        # nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @some : @parameter%return_bribe : @storage
                                           DIG 7;      # @some : nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%return_bribe : @storage
                                           CAR;        # address : nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%return_bribe : @storage
                                           PAIR 3;     # pair address (pair nat nat) : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%return_bribe : @storage
                                           CONS;       # list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%return_bribe : @storage
                                           SELF_ADDRESS; # @self : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%return_bribe : @storage
                                           PAIR;       # pair @self (list (pair address (pair nat nat))) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%return_bribe : @storage
                                           CONS;       # list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%return_bribe : @storage
                                           TRANSFER_TOKENS; # operation : list operation : @parameter%return_bribe : @storage
                                           CONS;       # list operation : @parameter%return_bribe : @storage
                                         }
                                         {
                                           DROP 2;     # @parameter%return_bribe : @storage
                                           NIL operation; # list operation : @parameter%return_bribe : @storage
                                         }; # list operation : @parameter%return_bribe : @storage
                                     }
                                     {
                                       DROP;       # @some : @parameter%return_bribe : @storage
                                       # sp.send(compute_bribe_218.value.provider, sp.mul(compute_bribe_218.value.bribe.value, sp.mutez(1))) # @some : @parameter%return_bribe : @storage
                                       DUP;        # @some : @some : @parameter%return_bribe : @storage
                                       CAR;        # address : @some : @parameter%return_bribe : @storage
                                       CONTRACT unit; # option (contract unit) : @some : @parameter%return_bribe : @storage
                                       IF_NONE
                                         {
                                           PUSH int 242; # int : @some : @parameter%return_bribe : @storage
                                           FAILWITH;   # FAILED
                                         }
                                         {}; # @some : @some : @parameter%return_bribe : @storage
                                       NIL operation; # list operation : @some : @some : @parameter%return_bribe : @storage
                                       SWAP;       # @some : list operation : @some : @parameter%return_bribe : @storage
                                       PUSH mutez 1; # mutez : @some : list operation : @some : @parameter%return_bribe : @storage
                                       DIG 3;      # @some : mutez : @some : list operation : @parameter%return_bribe : @storage
                                       GET 4;      # nat : mutez : @some : list operation : @parameter%return_bribe : @storage
                                       MUL;        # mutez : @some : list operation : @parameter%return_bribe : @storage
                                       UNIT;       # unit : mutez : @some : list operation : @parameter%return_bribe : @storage
                                       TRANSFER_TOKENS; # operation : list operation : @parameter%return_bribe : @storage
                                       CONS;       # list operation : @parameter%return_bribe : @storage
                                     }; # list operation : @parameter%return_bribe : @storage
                                 }; # list operation : @parameter%return_bribe : @storage
                               # self.data.epoch_bribes[params].bribe.value = 0 # list operation : @parameter%return_bribe : @storage
                               DIG 2;      # @storage : list operation : @parameter%return_bribe
                               UNPAIR;     # pair (big_map %claim_ledger (pair (nat %token_id) (nat %bribe_id)) unit) (big_map %epoch_bribes (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value)))) : pair (nat %uid) (address %voter) : list operation : @parameter%return_bribe
                               UNPAIR;     # big_map (pair (nat %token_id) (nat %bribe_id)) unit : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : pair (nat %uid) (address %voter) : list operation : @parameter%return_bribe
                               SWAP;       # big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : big_map (pair (nat %token_id) (nat %bribe_id)) unit : pair (nat %uid) (address %voter) : list operation : @parameter%return_bribe
                               DUP;        # big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : big_map (pair (nat %token_id) (nat %bribe_id)) unit : pair (nat %uid) (address %voter) : list operation : @parameter%return_bribe
                               DIG 5;      # @parameter%return_bribe : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : big_map (pair (nat %token_id) (nat %bribe_id)) unit : pair (nat %uid) (address %voter) : list operation
                               DUP;        # @parameter%return_bribe : @parameter%return_bribe : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : big_map (pair (nat %token_id) (nat %bribe_id)) unit : pair (nat %uid) (address %voter) : list operation
                               DUG 2;      # @parameter%return_bribe : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : @parameter%return_bribe : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : big_map (pair (nat %token_id) (nat %bribe_id)) unit : pair (nat %uid) (address %voter) : list operation
                               GET;        # option (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : @parameter%return_bribe : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : big_map (pair (nat %token_id) (nat %bribe_id)) unit : pair (nat %uid) (address %voter) : list operation
                               IF_NONE
                                 {
                                   PUSH int 244; # int : @parameter%return_bribe : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : big_map (pair (nat %token_id) (nat %bribe_id)) unit : pair (nat %uid) (address %voter) : list operation
                                   FAILWITH;   # FAILED
                                 }
                                 {}; # @some : @parameter%return_bribe : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : big_map (pair (nat %token_id) (nat %bribe_id)) unit : pair (nat %uid) (address %voter) : list operation
                               DUP;        # @some : @some : @parameter%return_bribe : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : big_map (pair (nat %token_id) (nat %bribe_id)) unit : pair (nat %uid) (address %voter) : list operation
                               CDR;        # pair (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value) : @some : @parameter%return_bribe : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : big_map (pair (nat %token_id) (nat %bribe_id)) unit : pair (nat %uid) (address %voter) : list operation
                               PUSH nat 0; # nat : pair (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value) : @some : @parameter%return_bribe : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : big_map (pair (nat %token_id) (nat %bribe_id)) unit : pair (nat %uid) (address %voter) : list operation
                               UPDATE 2;   # pair (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value) : @some : @parameter%return_bribe : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : big_map (pair (nat %token_id) (nat %bribe_id)) unit : pair (nat %uid) (address %voter) : list operation
                               UPDATE 2;   # @some : @parameter%return_bribe : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : big_map (pair (nat %token_id) (nat %bribe_id)) unit : pair (nat %uid) (address %voter) : list operation
                               SOME;       # option (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : @parameter%return_bribe : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : big_map (pair (nat %token_id) (nat %bribe_id)) unit : pair (nat %uid) (address %voter) : list operation
                               SWAP;       # @parameter%return_bribe : option (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : big_map (pair (nat %token_id) (nat %bribe_id)) unit : pair (nat %uid) (address %voter) : list operation
                               UPDATE;     # big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : big_map (pair (nat %token_id) (nat %bribe_id)) unit : pair (nat %uid) (address %voter) : list operation
                               SWAP;       # big_map (pair (nat %token_id) (nat %bribe_id)) unit : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))) : pair (nat %uid) (address %voter) : list operation
                               PAIR;       # pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value)))) : pair (nat %uid) (address %voter) : list operation
                               PAIR;       # pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))))) (pair (nat %uid) (address %voter)) : list operation
                               SWAP;       # list operation : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))))) (pair (nat %uid) (address %voter))
                             }; # list operation : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %provider) (pair %bribe (or %type (address %fa12) (or (pair %fa2 address nat) (unit %tez))) (nat %value))))) (pair (nat %uid) (address %voter))
                         }; # list operation : pair (pair (big_map (pair nat nat) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter))
                       PAIR;       # pair (list operation) (pair (pair (big_map (pair nat nat) unit) (big_map (pair nat nat) (pair address (pair (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) nat)))) (pair (nat %uid) (address %voter)))
                     }}; # operation : address : pair operation address : list operation : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                PAIR;       # pair operation address : pair operation address : list operation : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                # sp.operations().push(create_contract_core_factory_106.value.operation) # pair operation address : pair operation address : list operation : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                DIG 2;      # list operation : pair operation address : pair operation address : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                SWAP;       # pair operation address : list operation : pair operation address : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                DUP;        # pair operation address : pair operation address : list operation : pair operation address : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                DUG 2;      # pair operation address : list operation : pair operation address : pair operation address : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                CAR;        # operation : list operation : pair operation address : pair operation address : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                CONS;       # list operation : pair operation address : pair operation address : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                # sp.transfer(sp.record(amm = params.amm, gauge = create_contract_core_factory_103.value.address, bribe = create_contract_core_factory_106.value.address), sp.tez(0), sp.contract(sp.TRecord(amm = sp.TAddress, bribe = sp.TAddress, gauge = sp.TAddress).layout(("amm", ("gauge", "bribe"))), self.data.voter, entry_point='add_amm').open_some()) # list operation : pair operation address : pair operation address : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                DUP 5;      # pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter)))) : list operation : pair operation address : pair operation address : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                GET 8;      # address : list operation : pair operation address : pair operation address : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                CONTRACT %add_amm (pair (address %amm) (pair (address %gauge) (address %bribe))); # option (contract (pair (address %amm) (pair (address %gauge) (address %bribe)))) : list operation : pair operation address : pair operation address : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                IF_NONE
                  {
                    PUSH int 109; # int : list operation : pair operation address : pair operation address : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : list operation : pair operation address : pair operation address : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                PUSH mutez 0; # mutez : @some : list operation : pair operation address : pair operation address : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                DIG 3;      # pair operation address : mutez : @some : list operation : pair operation address : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                CDR;        # address : mutez : @some : list operation : pair operation address : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                DIG 4;      # pair operation address : address : mutez : @some : list operation : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                CDR;        # address : address : mutez : @some : list operation : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                DUP 6;      # @parameter%add_amm : address : address : mutez : @some : list operation : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                CAR;        # address : address : address : mutez : @some : list operation : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                PAIR 3;     # pair address (pair address address) : mutez : @some : list operation : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                TRANSFER_TOKENS; # operation : list operation : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                CONS;       # list operation : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                # sp.transfer(sp.record(amm = params.amm, tokens = params.tokens), sp.tez(0), sp.contract(sp.TRecord(amm = sp.TAddress, tokens = sp.TSet(sp.TVariant(fa12 = sp.TAddress, fa2 = sp.TPair(sp.TAddress, sp.TNat), tez = sp.TUnit).layout(("fa12", ("fa2", "tez"))))).layout(("amm", "tokens")), self.data.fee_distributor, entry_point='add_amm').open_some()) # list operation : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                DUP 3;      # pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter)))) : list operation : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                CAR;        # pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address)) : list operation : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                GET 3;      # address : list operation : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                CONTRACT %add_amm (pair (address %amm) (set %tokens (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))))); # option (contract (pair (address %amm) (set %tokens (or (address %fa12) (or (pair %fa2 address nat) (unit %tez)))))) : list operation : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                IF_NONE
                  {
                    PUSH int 121; # int : list operation : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : list operation : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                PUSH mutez 0; # mutez : @some : list operation : @parameter%add_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                DIG 3;      # @parameter%add_amm : mutez : @some : list operation : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                DUP;        # @parameter%add_amm : @parameter%add_amm : mutez : @some : list operation : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                GET 4;      # set (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) : @parameter%add_amm : mutez : @some : list operation : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                SWAP;       # @parameter%add_amm : set (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) : mutez : @some : list operation : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                CAR;        # address : set (or (address %fa12) (or (pair %fa2 address nat) (unit %tez))) : mutez : @some : list operation : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                PAIR;       # pair address (set (or (address %fa12) (or (pair %fa2 address nat) (unit %tez)))) : mutez : @some : list operation : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                TRANSFER_TOKENS; # operation : list operation : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                CONS;       # list operation : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
              }
              {
                PUSH string "CONTRACT_DOES_NOT_ACCEPT_TEZ"; # string : @parameter%default : @storage
                FAILWITH;   # FAILED
              }; # list operation : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
          }; # list operation : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option address) (option address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
      }
      {
        IF_LEFT
          {
            IF_LEFT
              {
                # == propose_add_admin ==
                # sp.verify(sp.amount == sp.tez(0), 'ENTRYPOINT_DOES_NOT_ACCEPT_TEZ') # @parameter%propose_add_admin : @storage
                PUSH mutez 0; # mutez : @parameter%propose_add_admin : @storage
                AMOUNT;     # @amount : mutez : @parameter%propose_add_admin : @storage
                COMPARE;    # int : @parameter%propose_add_admin : @storage
                EQ;         # bool : @parameter%propose_add_admin : @storage
                IF
                  {}
                  {
                    PUSH string "ENTRYPOINT_DOES_NOT_ACCEPT_TEZ"; # string : @parameter%propose_add_admin : @storage
                    FAILWITH;   # FAILED
                  }; # @parameter%propose_add_admin : @storage
                SWAP;       # @storage : @parameter%propose_add_admin
                # sp.verify(sp.sender == self.data.add_admin, 'NOT_AUTHORISED') # @storage : @parameter%propose_add_admin
                DUP;        # @storage : @storage : @parameter%propose_add_admin
                DUG 2;      # @storage : @parameter%propose_add_admin : @storage
                CAR;        # pair (pair (address %add_admin) (big_map %amm_registered address unit)) (pair (address %fee_distributor) (address %ply_address)) : @parameter%propose_add_admin : @storage
                CAR;        # pair (address %add_admin) (big_map %amm_registered address unit) : @parameter%propose_add_admin : @storage
                CAR;        # address : @parameter%propose_add_admin : @storage
                SENDER;     # @sender : address : @parameter%propose_add_admin : @storage
                COMPARE;    # int : @parameter%propose_add_admin : @storage
                EQ;         # bool : @parameter%propose_add_admin : @storage
                IF
                  {}
                  {
                    PUSH string "NOT_AUTHORISED"; # string : @parameter%propose_add_admin : @storage
                    FAILWITH;   # FAILED
                  }; # @parameter%propose_add_admin : @storage
                SWAP;       # @storage : @parameter%propose_add_admin
                # self.data.proposed_add_admin = sp.some(params) # @storage : @parameter%propose_add_admin
                UNPAIR;     # pair (pair (address %add_admin) (big_map %amm_registered address unit)) (pair (address %fee_distributor) (address %ply_address)) : pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))) : @parameter%propose_add_admin
                SWAP;       # pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))) : pair (pair (address %add_admin) (big_map %amm_registered address unit)) (pair (address %fee_distributor) (address %ply_address)) : @parameter%propose_add_admin
                UNPAIR;     # pair (option %proposed_add_admin address) (option %proposed_remove_admin address) : pair (address %remove_admin) (pair (address %ve_address) (address %voter)) : pair (pair (address %add_admin) (big_map %amm_registered address unit)) (pair (address %fee_distributor) (address %ply_address)) : @parameter%propose_add_admin
                CDR;        # option address : pair (address %remove_admin) (pair (address %ve_address) (address %voter)) : pair (pair (address %add_admin) (big_map %amm_registered address unit)) (pair (address %fee_distributor) (address %ply_address)) : @parameter%propose_add_admin
                DIG 3;      # @parameter%propose_add_admin : option address : pair (address %remove_admin) (pair (address %ve_address) (address %voter)) : pair (pair (address %add_admin) (big_map %amm_registered address unit)) (pair (address %fee_distributor) (address %ply_address))
                SOME;       # option address : option address : pair (address %remove_admin) (pair (address %ve_address) (address %voter)) : pair (pair (address %add_admin) (big_map %amm_registered address unit)) (pair (address %fee_distributor) (address %ply_address))
                PAIR;       # pair (option address) (option address) : pair (address %remove_admin) (pair (address %ve_address) (address %voter)) : pair (pair (address %add_admin) (big_map %amm_registered address unit)) (pair (address %fee_distributor) (address %ply_address))
                PAIR;       # pair (pair (option address) (option address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))) : pair (pair (address %add_admin) (big_map %amm_registered address unit)) (pair (address %fee_distributor) (address %ply_address))
                SWAP;       # pair (pair (address %add_admin) (big_map %amm_registered address unit)) (pair (address %fee_distributor) (address %ply_address)) : pair (pair (option address) (option address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter)))
                PAIR;       # pair (pair (pair (address %add_admin) (big_map %amm_registered address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option address) (option address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
              }
              {
                # == propose_remove_admin ==
                # sp.verify(sp.amount == sp.tez(0), 'ENTRYPOINT_DOES_NOT_ACCEPT_TEZ') # @parameter%propose_remove_admin : @storage
                PUSH mutez 0; # mutez : @parameter%propose_remove_admin : @storage
                AMOUNT;     # @amount : mutez : @parameter%propose_remove_admin : @storage
                COMPARE;    # int : @parameter%propose_remove_admin : @storage
                EQ;         # bool : @parameter%propose_remove_admin : @storage
                IF
                  {}
                  {
                    PUSH string "ENTRYPOINT_DOES_NOT_ACCEPT_TEZ"; # string : @parameter%propose_remove_admin : @storage
                    FAILWITH;   # FAILED
                  }; # @parameter%propose_remove_admin : @storage
                SWAP;       # @storage : @parameter%propose_remove_admin
                # sp.verify(sp.sender == self.data.remove_admin, 'NOT_AUTHORISED') # @storage : @parameter%propose_remove_admin
                DUP;        # @storage : @storage : @parameter%propose_remove_admin
                DUG 2;      # @storage : @parameter%propose_remove_admin : @storage
                GET 5;      # address : @parameter%propose_remove_admin : @storage
                SENDER;     # @sender : address : @parameter%propose_remove_admin : @storage
                COMPARE;    # int : @parameter%propose_remove_admin : @storage
                EQ;         # bool : @parameter%propose_remove_admin : @storage
                IF
                  {}
                  {
                    PUSH string "NOT_AUTHORISED"; # string : @parameter%propose_remove_admin : @storage
                    FAILWITH;   # FAILED
                  }; # @parameter%propose_remove_admin : @storage
                SWAP;       # @storage : @parameter%propose_remove_admin
                # self.data.proposed_remove_admin = sp.some(params) # @storage : @parameter%propose_remove_admin
                UNPAIR;     # pair (pair (address %add_admin) (big_map %amm_registered address unit)) (pair (address %fee_distributor) (address %ply_address)) : pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))) : @parameter%propose_remove_admin
                SWAP;       # pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))) : pair (pair (address %add_admin) (big_map %amm_registered address unit)) (pair (address %fee_distributor) (address %ply_address)) : @parameter%propose_remove_admin
                UNPAIR;     # pair (option %proposed_add_admin address) (option %proposed_remove_admin address) : pair (address %remove_admin) (pair (address %ve_address) (address %voter)) : pair (pair (address %add_admin) (big_map %amm_registered address unit)) (pair (address %fee_distributor) (address %ply_address)) : @parameter%propose_remove_admin
                CAR;        # option address : pair (address %remove_admin) (pair (address %ve_address) (address %voter)) : pair (pair (address %add_admin) (big_map %amm_registered address unit)) (pair (address %fee_distributor) (address %ply_address)) : @parameter%propose_remove_admin
                DIG 3;      # @parameter%propose_remove_admin : option address : pair (address %remove_admin) (pair (address %ve_address) (address %voter)) : pair (pair (address %add_admin) (big_map %amm_registered address unit)) (pair (address %fee_distributor) (address %ply_address))
                SOME;       # option address : option address : pair (address %remove_admin) (pair (address %ve_address) (address %voter)) : pair (pair (address %add_admin) (big_map %amm_registered address unit)) (pair (address %fee_distributor) (address %ply_address))
                SWAP;       # option address : option address : pair (address %remove_admin) (pair (address %ve_address) (address %voter)) : pair (pair (address %add_admin) (big_map %amm_registered address unit)) (pair (address %fee_distributor) (address %ply_address))
                PAIR;       # pair (option address) (option address) : pair (address %remove_admin) (pair (address %ve_address) (address %voter)) : pair (pair (address %add_admin) (big_map %amm_registered address unit)) (pair (address %fee_distributor) (address %ply_address))
                PAIR;       # pair (pair (option address) (option address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))) : pair (pair (address %add_admin) (big_map %amm_registered address unit)) (pair (address %fee_distributor) (address %ply_address))
                SWAP;       # pair (pair (address %add_admin) (big_map %amm_registered address unit)) (pair (address %fee_distributor) (address %ply_address)) : pair (pair (option address) (option address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter)))
                PAIR;       # pair (pair (pair (address %add_admin) (big_map %amm_registered address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option address) (option address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
              }; # pair (pair (pair (address %add_admin) (big_map %amm_registered address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option address) (option address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
            NIL operation; # list operation : pair (pair (pair (address %add_admin) (big_map %amm_registered address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option address) (option address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
          }
          {
            IF_LEFT
              {
                # == remove_amm ==
                # sp.verify(sp.amount == sp.tez(0), 'ENTRYPOINT_DOES_NOT_ACCEPT_TEZ') # @parameter%remove_amm : @storage
                PUSH mutez 0; # mutez : @parameter%remove_amm : @storage
                AMOUNT;     # @amount : mutez : @parameter%remove_amm : @storage
                COMPARE;    # int : @parameter%remove_amm : @storage
                EQ;         # bool : @parameter%remove_amm : @storage
                IF
                  {}
                  {
                    PUSH string "ENTRYPOINT_DOES_NOT_ACCEPT_TEZ"; # string : @parameter%remove_amm : @storage
                    FAILWITH;   # FAILED
                  }; # @parameter%remove_amm : @storage
                SWAP;       # @storage : @parameter%remove_amm
                # sp.verify(sp.sender == self.data.remove_admin, 'NOT_AUTHORISED') # @storage : @parameter%remove_amm
                DUP;        # @storage : @storage : @parameter%remove_amm
                DUG 2;      # @storage : @parameter%remove_amm : @storage
                GET 5;      # address : @parameter%remove_amm : @storage
                SENDER;     # @sender : address : @parameter%remove_amm : @storage
                COMPARE;    # int : @parameter%remove_amm : @storage
                EQ;         # bool : @parameter%remove_amm : @storage
                IF
                  {}
                  {
                    PUSH string "NOT_AUTHORISED"; # string : @parameter%remove_amm : @storage
                    FAILWITH;   # FAILED
                  }; # @parameter%remove_amm : @storage
                SWAP;       # @storage : @parameter%remove_amm
                # sp.verify(self.data.amm_registered.contains(params), 'AMM_INVALID') # @storage : @parameter%remove_amm
                DUP;        # @storage : @storage : @parameter%remove_amm
                DUG 2;      # @storage : @parameter%remove_amm : @storage
                CAR;        # pair (pair (address %add_admin) (big_map %amm_registered address unit)) (pair (address %fee_distributor) (address %ply_address)) : @parameter%remove_amm : @storage
                CAR;        # pair (address %add_admin) (big_map %amm_registered address unit) : @parameter%remove_amm : @storage
                CDR;        # big_map address unit : @parameter%remove_amm : @storage
                SWAP;       # @parameter%remove_amm : big_map address unit : @storage
                DUP;        # @parameter%remove_amm : @parameter%remove_amm : big_map address unit : @storage
                DUG 2;      # @parameter%remove_amm : big_map address unit : @parameter%remove_amm : @storage
                MEM;        # bool : @parameter%remove_amm : @storage
                IF
                  {}
                  {
                    PUSH string "AMM_INVALID"; # string : @parameter%remove_amm : @storage
                    FAILWITH;   # FAILED
                  }; # @parameter%remove_amm : @storage
                SWAP;       # @storage : @parameter%remove_amm
                # del self.data.amm_registered[params] # @storage : @parameter%remove_amm
                UNPAIR;     # pair (pair (address %add_admin) (big_map %amm_registered address unit)) (pair (address %fee_distributor) (address %ply_address)) : pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))) : @parameter%remove_amm
                UNPAIR;     # pair (address %add_admin) (big_map %amm_registered address unit) : pair (address %fee_distributor) (address %ply_address) : pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))) : @parameter%remove_amm
                UNPAIR;     # address : big_map address unit : pair (address %fee_distributor) (address %ply_address) : pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))) : @parameter%remove_amm
                SWAP;       # big_map address unit : address : pair (address %fee_distributor) (address %ply_address) : pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))) : @parameter%remove_amm
                NONE unit;  # option unit : big_map address unit : address : pair (address %fee_distributor) (address %ply_address) : pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))) : @parameter%remove_amm
                DUP 6;      # @parameter%remove_amm : option unit : big_map address unit : address : pair (address %fee_distributor) (address %ply_address) : pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))) : @parameter%remove_amm
                UPDATE;     # big_map address unit : address : pair (address %fee_distributor) (address %ply_address) : pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))) : @parameter%remove_amm
                SWAP;       # address : big_map address unit : pair (address %fee_distributor) (address %ply_address) : pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))) : @parameter%remove_amm
                PAIR;       # pair address (big_map address unit) : pair (address %fee_distributor) (address %ply_address) : pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))) : @parameter%remove_amm
                PAIR;       # pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address)) : pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))) : @parameter%remove_amm
                PAIR;       # pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter)))) : @parameter%remove_amm
                SWAP;       # @parameter%remove_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                # sp.transfer(params, sp.tez(0), sp.contract(sp.TAddress, self.data.voter, entry_point='remove_amm').open_some()) # @parameter%remove_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                NIL operation; # list operation : @parameter%remove_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                DUP 3;      # pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter)))) : list operation : @parameter%remove_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                GET 8;      # address : list operation : @parameter%remove_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                CONTRACT %remove_amm address; # option (contract address) : list operation : @parameter%remove_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                IF_NONE
                  {
                    PUSH int 146; # int : list operation : @parameter%remove_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : list operation : @parameter%remove_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                PUSH mutez 0; # mutez : @some : list operation : @parameter%remove_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                DUP 4;      # @parameter%remove_amm : mutez : @some : list operation : @parameter%remove_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                TRANSFER_TOKENS; # operation : list operation : @parameter%remove_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                CONS;       # list operation : @parameter%remove_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                # sp.transfer(params, sp.tez(0), sp.contract(sp.TAddress, self.data.fee_distributor, entry_point='remove_amm').open_some()) # list operation : @parameter%remove_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                DUP 3;      # pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter)))) : list operation : @parameter%remove_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                CAR;        # pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address)) : list operation : @parameter%remove_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                GET 3;      # address : list operation : @parameter%remove_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                CONTRACT %remove_amm address; # option (contract address) : list operation : @parameter%remove_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                IF_NONE
                  {
                    PUSH int 154; # int : list operation : @parameter%remove_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : list operation : @parameter%remove_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                PUSH mutez 0; # mutez : @some : list operation : @parameter%remove_amm : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                DIG 3;      # @parameter%remove_amm : mutez : @some : list operation : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                TRANSFER_TOKENS; # operation : list operation : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                CONS;       # list operation : pair (pair (pair address (big_map address unit)) (pair (address %fee_distributor) (address %ply_address))) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
              }
              {
                # == set_fee_distributor ==
                # if self.data.fee_distributor == sp.address('tz1RBkXZSiQb3fS7Sg3zbFdPMBFPJUNHdcFo'): # @parameter%set_fee_distributor : @storage
                PUSH address "tz1RBkXZSiQb3fS7Sg3zbFdPMBFPJUNHdcFo"; # address : @parameter%set_fee_distributor : @storage
                DUP 3;      # @storage : address : @parameter%set_fee_distributor : @storage
                CAR;        # pair (pair (address %add_admin) (big_map %amm_registered address unit)) (pair (address %fee_distributor) (address %ply_address)) : address : @parameter%set_fee_distributor : @storage
                GET 3;      # address : address : @parameter%set_fee_distributor : @storage
                COMPARE;    # int : @parameter%set_fee_distributor : @storage
                EQ;         # bool : @parameter%set_fee_distributor : @storage
                IF
                  {
                    SWAP;       # @storage : @parameter%set_fee_distributor
                    # self.data.fee_distributor = params # @storage : @parameter%set_fee_distributor
                    UNPAIR;     # pair (pair (address %add_admin) (big_map %amm_registered address unit)) (pair (address %fee_distributor) (address %ply_address)) : pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))) : @parameter%set_fee_distributor
                    UNPAIR;     # pair (address %add_admin) (big_map %amm_registered address unit) : pair (address %fee_distributor) (address %ply_address) : pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))) : @parameter%set_fee_distributor
                    SWAP;       # pair (address %fee_distributor) (address %ply_address) : pair (address %add_admin) (big_map %amm_registered address unit) : pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))) : @parameter%set_fee_distributor
                    CDR;        # address : pair (address %add_admin) (big_map %amm_registered address unit) : pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))) : @parameter%set_fee_distributor
                    DIG 3;      # @parameter%set_fee_distributor : address : pair (address %add_admin) (big_map %amm_registered address unit) : pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter)))
                    PAIR;       # pair @parameter%set_fee_distributor address : pair (address %add_admin) (big_map %amm_registered address unit) : pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter)))
                    SWAP;       # pair (address %add_admin) (big_map %amm_registered address unit) : pair @parameter%set_fee_distributor address : pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter)))
                    PAIR;       # pair (pair (address %add_admin) (big_map %amm_registered address unit)) (pair @parameter%set_fee_distributor address) : pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter)))
                    PAIR;       # pair (pair (pair (address %add_admin) (big_map %amm_registered address unit)) (pair @parameter%set_fee_distributor address)) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                  }
                  {
                    DROP;       # @storage
                  }; # pair (pair (pair (address %add_admin) (big_map %amm_registered address unit)) (pair address address)) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
                NIL operation; # list operation : pair (pair (pair (address %add_admin) (big_map %amm_registered address unit)) (pair address address)) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
              }; # list operation : pair (pair (pair address (big_map address unit)) (pair address address)) (pair (pair (option %proposed_add_admin address) (option %proposed_remove_admin address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
          }; # list operation : pair (pair (pair address (big_map address unit)) (pair address address)) (pair (pair (option address) (option address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
      }; # list operation : pair (pair (pair address (big_map address unit)) (pair address address)) (pair (pair (option address) (option address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
    NIL operation; # list operation : list operation : pair (pair (pair address (big_map address unit)) (pair address address)) (pair (pair (option address) (option address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
    SWAP;       # list operation : list operation : pair (pair (pair address (big_map address unit)) (pair address address)) (pair (pair (option address) (option address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
    ITER
      {
        CONS;       # list operation : pair (pair (pair address (big_map address unit)) (pair address address)) (pair (pair (option address) (option address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
      }; # list operation : pair (pair (pair address (big_map address unit)) (pair address address)) (pair (pair (option address) (option address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter))))
    PAIR;       # pair (list operation) (pair (pair (pair address (big_map address unit)) (pair address address)) (pair (pair (option address) (option address)) (pair (address %remove_admin) (pair (address %ve_address) (address %voter)))))
  };