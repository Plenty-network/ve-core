parameter (or (or (pair %add_amm (address %amm) (pair (address %lp_token_address) (set %tokens (pair (address %token_address) (pair %type nat nat))))) (address %remove_amm)) (or (address %set_fee_distributor) (address %set_voter)));
storage   (pair (pair (address %admin) (pair (big_map %amm_registered address unit) (address %fee_distributor))) (pair (address %ply_address) (pair (address %ve_address) (address %voter))));
code
  {
    UNPAIR;     # @parameter : @storage
    IF_LEFT
      {
        IF_LEFT
          {
            SWAP;       # @storage : @parameter%add_amm
            # == add_amm ==
            # sp.verify(sp.sender == self.data.admin, 'NOT_AUTHORISED') # @storage : @parameter%add_amm
            DUP;        # @storage : @storage : @parameter%add_amm
            DUG 2;      # @storage : @parameter%add_amm : @storage
            CAR;        # pair (address %admin) (pair (big_map %amm_registered address unit) (address %fee_distributor)) : @parameter%add_amm : @storage
            CAR;        # address : @parameter%add_amm : @storage
            SENDER;     # @sender : address : @parameter%add_amm : @storage
            COMPARE;    # int : @parameter%add_amm : @storage
            EQ;         # bool : @parameter%add_amm : @storage
            IF
              {}
              {
                PUSH string "NOT_AUTHORISED"; # string : @parameter%add_amm : @storage
                FAILWITH;   # FAILED
              }; # @parameter%add_amm : @storage
            SWAP;       # @storage : @parameter%add_amm
            # sp.verify(~ (self.data.amm_registered.contains(params.amm)), 'AMM_ALREADY_ADDED') # @storage : @parameter%add_amm
            DUP;        # @storage : @storage : @parameter%add_amm
            DUG 2;      # @storage : @parameter%add_amm : @storage
            CAR;        # pair (address %admin) (pair (big_map %amm_registered address unit) (address %fee_distributor)) : @parameter%add_amm : @storage
            GET 3;      # big_map address unit : @parameter%add_amm : @storage
            SWAP;       # @parameter%add_amm : big_map address unit : @storage
            DUP;        # @parameter%add_amm : @parameter%add_amm : big_map address unit : @storage
            DUG 2;      # @parameter%add_amm : big_map address unit : @parameter%add_amm : @storage
            CAR;        # address : big_map address unit : @parameter%add_amm : @storage
            MEM;        # bool : @parameter%add_amm : @storage
            IF
              {
                PUSH string "AMM_ALREADY_ADDED"; # string : @parameter%add_amm : @storage
                FAILWITH;   # FAILED
              }
              {}; # @parameter%add_amm : @storage
            SWAP;       # @storage : @parameter%add_amm
            # self.data.amm_registered[params.amm] = sp.unit # @storage : @parameter%add_amm
            UNPAIR;     # pair (address %admin) (pair (big_map %amm_registered address unit) (address %fee_distributor)) : pair (address %ply_address) (pair (address %ve_address) (address %voter)) : @parameter%add_amm
            UNPAIR;     # address : pair (big_map %amm_registered address unit) (address %fee_distributor) : pair (address %ply_address) (pair (address %ve_address) (address %voter)) : @parameter%add_amm
            SWAP;       # pair (big_map %amm_registered address unit) (address %fee_distributor) : address : pair (address %ply_address) (pair (address %ve_address) (address %voter)) : @parameter%add_amm
            UNPAIR;     # big_map address unit : address : address : pair (address %ply_address) (pair (address %ve_address) (address %voter)) : @parameter%add_amm
            PUSH (option unit) (Some Unit); # option unit : big_map address unit : address : address : pair (address %ply_address) (pair (address %ve_address) (address %voter)) : @parameter%add_amm
            DUP 6;      # @parameter%add_amm : option unit : big_map address unit : address : address : pair (address %ply_address) (pair (address %ve_address) (address %voter)) : @parameter%add_amm
            CAR;        # address : option unit : big_map address unit : address : address : pair (address %ply_address) (pair (address %ve_address) (address %voter)) : @parameter%add_amm
            UPDATE;     # big_map address unit : address : address : pair (address %ply_address) (pair (address %ve_address) (address %voter)) : @parameter%add_amm
            PAIR;       # pair (big_map address unit) address : address : pair (address %ply_address) (pair (address %ve_address) (address %voter)) : @parameter%add_amm
            SWAP;       # address : pair (big_map address unit) address : pair (address %ply_address) (pair (address %ve_address) (address %voter)) : @parameter%add_amm
            PAIR;       # pair address (pair (big_map address unit) address) : pair (address %ply_address) (pair (address %ve_address) (address %voter)) : @parameter%add_amm
            PAIR;       # pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter))) : @parameter%add_amm
            SWAP;       # @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            # sp.result(sp.record(attached_tokens = {}, balances = {}, derived_balances = {}, derived_supply = 0, last_update_time = 0, lp_token_address = params.lp_token_address, period_finish = 0, ply_address = self.data.ply_address, recharge_ledger = {}, reward_per_token = 0, reward_rate = 0, rewards = {}, total_supply = 0, user_reward_per_token_debt = {}, ve_address = self.data.ve_address, voter = self.data.voter))
            # def f_x0(_x0):
            #   sp.set_type(_x0, sp.TRecord(address = sp.TAddress, token_id = sp.TNat).layout(("address", "token_id")))
            #   sp.if self.data.derived_balances.get(_x0.address, default_value = 0) != 0:
            #     self.data.derived_supply = sp.as_nat(self.data.derived_supply - self.data.derived_balances.get(_x0.address, default_value = 0))
            #   mark_up = sp.local("mark_up", 0)
            #   sp.if _x0.token_id != 0:
            #     mark_up.value = (((self.data.total_supply * sp.view("get_token_voting_power", self.data.ve_address, sp.record(time = 0, token_id = _x0.token_id, ts = sp.as_nat(sp.now - sp.timestamp(0))), sp.TNat).open_some(message = 'INVALID_VIEW')) // sp.view("get_total_voting_power", self.data.ve_address, sp.record(time = 0, ts = sp.as_nat(sp.now - sp.timestamp(0))), sp.TNat).open_some(message = 'INVALID_VIEW')) * 60) // 100
            #   self.data.derived_balances[_x0.address] = sp.min(((self.data.balances[_x0.address] * 40) // 100) + mark_up.value, self.data.balances[_x0.address])
            #   self.data.derived_supply += self.data.derived_balances[_x0.address]
            # def f_x1(_x1):
            #   sp.set_type(_x1, sp.TAddress)
            #   reward_per_token_ = sp.local("reward_per_token_", self.data.reward_per_token)
            #   sp.if self.data.total_supply != 0:
            #     reward_per_token_.value += ((sp.as_nat(sp.min(sp.as_nat(sp.now - sp.timestamp(0)), self.data.period_finish) - self.data.last_update_time) * self.data.reward_rate) * 1000000000000000000) // self.data.derived_supply
            #   self.data.reward_per_token = reward_per_token_.value
            #   self.data.last_update_time = sp.min(sp.as_nat(sp.now - sp.timestamp(0)), self.data.period_finish)
            #   sp.if _x1 != sp.address('KT1TezoooozzSmartPyzzDYNAMiCzzpLu4LU'):
            #     sp.if ~ (self.data.rewards.contains(_x1)):
            #       self.data.rewards[_x1] = 0
            #     self.data.rewards[_x1] += (self.data.derived_balances.get(_x1, default_value = 0) * sp.as_nat(self.data.reward_per_token - self.data.user_reward_per_token_debt.get(_x1, default_value = 0))) // 1000000000000000000
            #     self.data.user_reward_per_token_debt[_x1] = self.data.reward_per_token
            # create_contract_core_factory_100 = sp.local("create_contract_core_factory_100", create contract ...) # @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            NIL operation; # list operation : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            PUSH (pair address address) (Pair "tz1RBkXZSiQb3fS7Sg3zbFdPMBFPJUNHdcFo" "tz1RBkXZSiQb3fS7Sg3zbFdPMBFPJUNHdcFo"); # pair address address : list operation : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            EMPTY_BIG_MAP address nat; # big_map address nat : pair address address : list operation : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            PUSH nat 0; # nat : big_map address nat : pair address address : list operation : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            PAIR;       # pair nat (big_map address nat) : pair address address : list operation : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            PAIR;       # pair (pair nat (big_map address nat)) (pair address address) : list operation : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            EMPTY_BIG_MAP address nat; # big_map address nat : pair (pair nat (big_map address nat)) (pair address address) : list operation : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            PUSH nat 0; # nat : big_map address nat : pair (pair nat (big_map address nat)) (pair address address) : list operation : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            PAIR;       # pair nat (big_map address nat) : pair (pair nat (big_map address nat)) (pair address address) : list operation : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            PUSH nat 0; # nat : pair nat (big_map address nat) : pair (pair nat (big_map address nat)) (pair address address) : list operation : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            EMPTY_BIG_MAP nat unit; # big_map nat unit : nat : pair nat (big_map address nat) : pair (pair nat (big_map address nat)) (pair address address) : list operation : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            PAIR;       # pair (big_map nat unit) nat : pair nat (big_map address nat) : pair (pair nat (big_map address nat)) (pair address address) : list operation : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            PAIR;       # pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair nat (big_map address nat)) (pair address address) : list operation : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            PAIR;       # pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : list operation : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            PUSH (pair (pair nat address) (pair nat address)) (Pair (Pair 0 "tz1az7uQWFeuFd1XB9thkXrtEMfQ8TvP1GsF") (Pair 0 "tz1az7uQWFeuFd1XB9thkXrtEMfQ8TvP1GsF")); # pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : list operation : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            PUSH nat 0; # nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : list operation : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            EMPTY_BIG_MAP address nat; # big_map address nat : nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : list operation : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            PAIR;       # pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : list operation : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            EMPTY_BIG_MAP address nat; # big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : list operation : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            EMPTY_BIG_MAP address nat; # big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : list operation : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            PAIR;       # pair (big_map address nat) (big_map address nat) : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : list operation : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            PAIR;       # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : list operation : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            PAIR;       # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : list operation : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            PAIR;       # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : list operation : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            PUSH mutez 0; # mutez : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : list operation : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            NONE key_hash; # option key_hash : mutez : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : list operation : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            CREATE_CONTRACT
             { parameter (or (or (unit %get_reward) (pair %recharge (nat %amount) (nat %epoch))) (or (pair %stake (nat %amount) (nat %token_id)) (nat %withdraw)));
               storage   (pair (pair (pair (pair (big_map %attached_tokens address nat) (big_map %balances address nat)) (pair (big_map %derived_balances address nat) (nat %derived_supply))) (pair (pair (nat %last_update_time) (address %lp_token_address)) (pair (nat %period_finish) (address %ply_address)))) (pair (pair (pair (big_map %recharge_ledger nat unit) (nat %reward_per_token)) (pair (nat %reward_rate) (big_map %rewards address nat))) (pair (pair (nat %total_supply) (big_map %user_reward_per_token_debt address nat)) (pair (address %ve_address) (address %voter)))));
               code
                 {
                   # Private variable: update_derived # pair @parameter @storage
                   LAMBDA
                     (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                     (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                     {
                       UNPAIR;     # pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       # if self.data.derived_balances.get(_x0.address, default_value = 0) != 0: # pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       PUSH nat 0; # nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       DUP 3;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       CAR;        # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       CAR;        # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       GET 3;      # big_map address nat : nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       DUP 3;      # pair address nat : big_map address nat : nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       CAR;        # address : big_map address nat : nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       GET;        # option nat : nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       IF_NONE
                         {
                           PUSH nat 0; # nat : nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                         }
                         {}; # nat : nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       COMPARE;    # int : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       NEQ;        # bool : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       IF
                         {
                           SWAP;       # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : pair address nat
                           # self.data.derived_supply = sp.as_nat(self.data.derived_supply - self.data.derived_balances.get(_x0.address, default_value = 0)) # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : pair address nat
                           DUP;        # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : pair address nat
                           DUG 2;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           UNPAIR;     # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           UNPAIR;     # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           UNPAIR;     # pair (big_map address nat) (big_map address nat) : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           SWAP;       # pair (big_map address nat) nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           CAR;        # big_map address nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           DUP 6;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : big_map address nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           CAR;        # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : big_map address nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           CAR;        # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : big_map address nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           GET 3;      # big_map address nat : big_map address nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           DUP 6;      # pair address nat : big_map address nat : big_map address nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           CAR;        # address : big_map address nat : big_map address nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           GET;        # option nat : big_map address nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           IF_NONE
                             {
                               PUSH nat 0; # nat : big_map address nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                             }
                             {}; # nat : big_map address nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           DIG 6;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : nat : big_map address nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                           CAR;        # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : big_map address nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                           CAR;        # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : nat : big_map address nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                           GET 4;      # nat : nat : big_map address nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                           SUB;        # int : big_map address nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                           ISNAT;      # option nat : big_map address nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                           IF_NONE
                             {
                               PUSH int 155; # int : big_map address nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                               FAILWITH;   # FAILED
                             }
                             {}; # @some : big_map address nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                           SWAP;       # big_map address nat : @some : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                           PAIR;       # pair (big_map address nat) @some : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                           SWAP;       # pair (big_map address nat) (big_map address nat) : pair (big_map address nat) @some : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                           PAIR;       # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) @some) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                           PAIR;       # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) @some)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                           PAIR;       # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) @some)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : pair address nat
                           SWAP;       # pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) @some)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                         }
                         {}; # pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       # mark_up = sp.local("mark_up", 0) # pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       PUSH nat 0; # nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       # if _x0.token_id != 0: # nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       PUSH nat 0; # nat : nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       DUP 3;      # pair address nat : nat : nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       CDR;        # nat : nat : nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       COMPARE;    # int : nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       NEQ;        # bool : nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       IF
                         {
                           DROP;       # pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           # mark_up.value = (((self.data.total_supply * sp.view("get_token_voting_power", self.data.ve_address, sp.record(time = 0, token_id = _x0.token_id, ts = sp.as_nat(sp.now - sp.timestamp(0))), sp.TNat).open_some(message = 'INVALID_VIEW')) // sp.view("get_total_voting_power", self.data.ve_address, sp.record(time = 0, ts = sp.as_nat(sp.now - sp.timestamp(0))), sp.TNat).open_some(message = 'INVALID_VIEW')) * 60) // 100 # pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           PUSH nat 100; # nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           PUSH nat 60; # nat : nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           DUP 4;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : nat : nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           GET 7;      # address : nat : nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           PUSH timestamp "1970-01-01T00:00:00Z"; # timestamp : address : nat : nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           NOW;        # @now : timestamp : address : nat : nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           SUB;        # int : address : nat : nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           ISNAT;      # option nat : address : nat : nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           IF_NONE
                             {
                               PUSH int 158; # int : address : nat : nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               FAILWITH;   # FAILED
                             }
                             {}; # @some : address : nat : nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           PUSH nat 0; # nat : @some : address : nat : nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           PAIR;       # pair nat @some : address : nat : nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           VIEW "get_total_voting_power" nat; # option nat : nat : nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           IF_NONE
                             {
                               PUSH string "INVALID_VIEW"; # string : nat : nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               FAILWITH;   # FAILED
                             }
                             {}; # @some : nat : nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           DUP 5;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @some : nat : nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           GET 7;      # address : @some : nat : nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           PUSH timestamp "1970-01-01T00:00:00Z"; # timestamp : address : @some : nat : nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           NOW;        # @now : timestamp : address : @some : nat : nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           SUB;        # int : address : @some : nat : nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           ISNAT;      # option nat : address : @some : nat : nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           IF_NONE
                             {
                               PUSH int 158; # int : address : @some : nat : nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               FAILWITH;   # FAILED
                             }
                             {}; # @some : address : @some : nat : nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           DUP 6;      # pair address nat : @some : address : @some : nat : nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           CDR;        # nat : @some : address : @some : nat : nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           PUSH nat 0; # nat : nat : @some : address : @some : nat : nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           PAIR 3;     # pair nat (pair nat @some) : address : @some : nat : nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           VIEW "get_token_voting_power" nat; # option nat : @some : nat : nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           IF_NONE
                             {
                               PUSH string "INVALID_VIEW"; # string : @some : nat : nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               FAILWITH;   # FAILED
                             }
                             {}; # @some : @some : nat : nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           DUP 6;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @some : @some : nat : nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           GET 5;      # pair nat (big_map address nat) : @some : @some : nat : nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           CAR;        # nat : @some : @some : nat : nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           MUL;        # nat : @some : nat : nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           EDIV;       # option (pair nat nat) : nat : nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           IF_NONE
                             {
                               PUSH int 180; # int : nat : nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               FAILWITH;   # FAILED
                             }
                             {
                               CAR;        # nat : nat : nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                             }; # nat : nat : nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           MUL;        # nat : nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           EDIV;       # option (pair nat nat) : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           IF_NONE
                             {
                               PUSH int 180; # int : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               FAILWITH;   # FAILED
                             }
                             {
                               CAR;        # nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                             }; # nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                         }
                         {}; # nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       # self.data.derived_balances[_x0.address] = sp.min(((self.data.balances[_x0.address] * 40) // 100) + mark_up.value, self.data.balances[_x0.address]) # nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       DUP 3;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       UNPAIR;     # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       UNPAIR;     # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       UNPAIR;     # pair (big_map address nat) (big_map address nat) : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       SWAP;       # pair (big_map address nat) nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       UNPAIR;     # big_map address nat : nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       DUP 8;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : big_map address nat : nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       CAR;        # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : big_map address nat : nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       CAR;        # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : big_map address nat : nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       CAR;        # pair (big_map address nat) (big_map address nat) : big_map address nat : nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       CDR;        # big_map address nat : big_map address nat : nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       DUP 8;      # pair address nat : big_map address nat : big_map address nat : nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       CAR;        # address : big_map address nat : big_map address nat : nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       GET;        # option nat : big_map address nat : nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       IF_NONE
                         {
                           PUSH int 149; # int : big_map address nat : nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           FAILWITH;   # FAILED
                         }
                         {}; # @some : big_map address nat : nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       DIG 6;      # nat : @some : big_map address nat : nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       PUSH nat 100; # nat : nat : @some : big_map address nat : nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       PUSH nat 40; # nat : nat : nat : @some : big_map address nat : nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       DIG 10;     # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : nat : nat : nat : @some : big_map address nat : nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                       CAR;        # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : nat : nat : @some : big_map address nat : nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                       CAR;        # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : nat : nat : nat : @some : big_map address nat : nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                       CAR;        # pair (big_map address nat) (big_map address nat) : nat : nat : nat : @some : big_map address nat : nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                       CDR;        # big_map address nat : nat : nat : nat : @some : big_map address nat : nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                       DUP 11;     # pair address nat : big_map address nat : nat : nat : nat : @some : big_map address nat : nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                       CAR;        # address : big_map address nat : nat : nat : nat : @some : big_map address nat : nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                       GET;        # option nat : nat : nat : nat : @some : big_map address nat : nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                       IF_NONE
                         {
                           PUSH int 149; # int : nat : nat : nat : @some : big_map address nat : nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                           FAILWITH;   # FAILED
                         }
                         {}; # @some : nat : nat : nat : @some : big_map address nat : nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                       MUL;        # nat : nat : nat : @some : big_map address nat : nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                       EDIV;       # option (pair nat nat) : nat : @some : big_map address nat : nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                       IF_NONE
                         {
                           PUSH int 182; # int : nat : @some : big_map address nat : nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                           FAILWITH;   # FAILED
                         }
                         {
                           CAR;        # nat : nat : @some : big_map address nat : nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                         }; # nat : nat : @some : big_map address nat : nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                       ADD;        # nat : @some : big_map address nat : nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                       DUP;        # nat : nat : @some : big_map address nat : nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                       DUP 3;      # @some : nat : nat : @some : big_map address nat : nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                       COMPARE;    # int : nat : @some : big_map address nat : nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                       LE;         # bool : nat : @some : big_map address nat : nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                       IF
                         {
                           DROP;       # @some : big_map address nat : nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                         }
                         {
                           SWAP;       # @some : nat : big_map address nat : nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                           DROP;       # nat : big_map address nat : nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                         }; # nat : big_map address nat : nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                       SOME;       # option nat : big_map address nat : nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                       DUP 7;      # pair address nat : option nat : big_map address nat : nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                       CAR;        # address : option nat : big_map address nat : nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                       UPDATE;     # big_map address nat : nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                       PAIR;       # pair (big_map address nat) nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                       SWAP;       # pair (big_map address nat) (big_map address nat) : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                       PAIR;       # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                       PAIR;       # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                       PAIR;       # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : pair address nat
                       # self.data.derived_supply += self.data.derived_balances[_x0.address] # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : pair address nat
                       DUP;        # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : pair address nat
                       DUG 2;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       UNPAIR;     # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       UNPAIR;     # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       UNPAIR;     # pair (big_map address nat) (big_map address nat) : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       SWAP;       # pair (big_map address nat) nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       UNPAIR;     # big_map address nat : nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       SWAP;       # nat : big_map address nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       DIG 6;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : nat : big_map address nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                       CAR;        # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : big_map address nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                       CAR;        # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : nat : big_map address nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                       GET 3;      # big_map address nat : nat : big_map address nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair address nat
                       DIG 6;      # pair address nat : big_map address nat : nat : big_map address nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))
                       CAR;        # address : big_map address nat : nat : big_map address nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))
                       GET;        # option nat : nat : big_map address nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))
                       IF_NONE
                         {
                           PUSH int 184; # int : nat : big_map address nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))
                           FAILWITH;   # FAILED
                         }
                         {}; # @some : nat : big_map address nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))
                       ADD;        # nat : big_map address nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))
                       SWAP;       # big_map address nat : nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))
                       PAIR;       # pair (big_map address nat) nat : pair (big_map address nat) (big_map address nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))
                       SWAP;       # pair (big_map address nat) (big_map address nat) : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))
                       PAIR;       # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))
                       PAIR;       # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))
                       PAIR;       # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       UNIT;       # unit : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       PAIR;       # pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))
                     }; # lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : pair @parameter @storage
                   SWAP;       # pair @parameter @storage : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                   # Private variable: update_reward # pair @parameter @storage : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                   LAMBDA
                     (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                     (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                     {
                       UNPAIR;     # address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       SWAP;       # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : address
                       # reward_per_token_ = sp.local("reward_per_token_", self.data.reward_per_token) # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : address
                       DUP;        # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : address
                       DUG 2;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       GET 3;      # pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       CAR;        # pair (big_map nat unit) nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       CDR;        # nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       # if self.data.total_supply != 0: # nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       PUSH nat 0; # nat : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       DUP 4;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : nat : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       GET 5;      # pair nat (big_map address nat) : nat : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       CAR;        # nat : nat : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       COMPARE;    # int : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       NEQ;        # bool : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       IF
                         {
                           # reward_per_token_.value += ((sp.as_nat(sp.min(sp.as_nat(sp.now - sp.timestamp(0)), self.data.period_finish) - self.data.last_update_time) * self.data.reward_rate) * 1000000000000000000) // self.data.derived_supply # nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           DUP 3;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           CAR;        # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           CAR;        # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           GET 4;      # nat : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           PUSH nat 1000000000000000000; # nat : nat : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           DIG 4;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : nat : nat : nat : address
                           DUP;        # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : nat : nat : nat : address
                           GET 3;      # pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : nat : nat : nat : address
                           GET 3;      # nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : nat : nat : nat : address
                           SWAP;       # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : nat : nat : nat : nat : address
                           DUP;        # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : nat : nat : nat : nat : address
                           CAR;        # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : nat : nat : nat : nat : address
                           GET 3;      # pair nat address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : nat : nat : nat : nat : address
                           CAR;        # nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : nat : nat : nat : nat : address
                           SWAP;       # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : nat : nat : nat : nat : nat : address
                           DUP;        # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : nat : nat : nat : nat : nat : address
                           DUG 7;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : nat : nat : nat : nat : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           CAR;        # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : nat : nat : nat : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           GET 5;      # nat : nat : nat : nat : nat : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           PUSH timestamp "1970-01-01T00:00:00Z"; # timestamp : nat : nat : nat : nat : nat : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           NOW;        # @now : timestamp : nat : nat : nat : nat : nat : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           SUB;        # int : nat : nat : nat : nat : nat : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           ISNAT;      # option nat : nat : nat : nat : nat : nat : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           IF_NONE
                             {
                               PUSH int 120; # int : nat : nat : nat : nat : nat : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               FAILWITH;   # FAILED
                             }
                             {}; # @some : nat : nat : nat : nat : nat : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           DUP;        # @some : @some : nat : nat : nat : nat : nat : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           DUP 3;      # nat : @some : @some : nat : nat : nat : nat : nat : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           COMPARE;    # int : @some : nat : nat : nat : nat : nat : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           LE;         # bool : @some : nat : nat : nat : nat : nat : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           IF
                             {
                               DROP;       # nat : nat : nat : nat : nat : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                             }
                             {
                               SWAP;       # nat : @some : nat : nat : nat : nat : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               DROP;       # @some : nat : nat : nat : nat : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                             }; # nat : nat : nat : nat : nat : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           SUB;        # int : nat : nat : nat : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           ISNAT;      # option nat : nat : nat : nat : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           IF_NONE
                             {
                               PUSH int 125; # int : nat : nat : nat : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               FAILWITH;   # FAILED
                             }
                             {}; # @some : nat : nat : nat : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           MUL;        # nat : nat : nat : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           MUL;        # nat : nat : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           EDIV;       # option (pair nat nat) : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           IF_NONE
                             {
                               PUSH int 126; # int : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               FAILWITH;   # FAILED
                             }
                             {
                               CAR;        # nat : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                             }; # nat : nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           ADD;        # nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                         }
                         {}; # nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       # self.data.reward_per_token = reward_per_token_.value # nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       DIG 2;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : nat : address
                       UNPAIR;     # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : nat : address
                       SWAP;       # pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : address
                       UNPAIR;     # pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : address
                       UNPAIR;     # pair (big_map nat unit) nat : pair nat (big_map address nat) : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : address
                       CAR;        # big_map nat unit : pair nat (big_map address nat) : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : address
                       DIG 4;      # nat : big_map nat unit : pair nat (big_map address nat) : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address
                       SWAP;       # big_map nat unit : nat : pair nat (big_map address nat) : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address
                       PAIR;       # pair (big_map nat unit) nat : pair nat (big_map address nat) : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address
                       PAIR;       # pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address
                       PAIR;       # pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address
                       SWAP;       # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : address
                       PAIR;       # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : address
                       # self.data.last_update_time = sp.min(sp.as_nat(sp.now - sp.timestamp(0)), self.data.period_finish) # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : address
                       DUP;        # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : address
                       DUG 2;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       UNPAIR;     # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       UNPAIR;     # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       SWAP;       # pair (pair nat address) (pair nat address) : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       UNPAIR;     # pair nat address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       CDR;        # address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       DIG 5;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : address
                       CAR;        # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : address
                       GET 5;      # nat : address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : address
                       PUSH timestamp "1970-01-01T00:00:00Z"; # timestamp : nat : address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : address
                       NOW;        # @now : timestamp : nat : address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : address
                       SUB;        # int : nat : address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : address
                       ISNAT;      # option nat : nat : address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : address
                       IF_NONE
                         {
                           PUSH int 120; # int : nat : address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : address
                           FAILWITH;   # FAILED
                         }
                         {}; # @some : nat : address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : address
                       DUP;        # @some : @some : nat : address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : address
                       DUP 3;      # nat : @some : @some : nat : address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : address
                       COMPARE;    # int : @some : nat : address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : address
                       LE;         # bool : @some : nat : address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : address
                       IF
                         {
                           DROP;       # nat : address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : address
                         }
                         {
                           SWAP;       # nat : @some : address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : address
                           DROP;       # @some : address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : address
                         }; # nat : address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : address
                       PAIR;       # pair nat address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : address
                       PAIR;       # pair (pair nat address) (pair nat address) : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : address
                       SWAP;       # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : address
                       PAIR;       # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : address
                       PAIR;       # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : address
                       SWAP;       # address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       # if _x1 != sp.address('KT1TezoooozzSmartPyzzDYNAMiCzzpLu4LU'): # address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       DUP;        # address : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       PUSH address "KT1TezoooozzSmartPyzzDYNAMiCzzpLu4LU"; # address : address : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       COMPARE;    # int : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       NEQ;        # bool : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       IF
                         {
                           SWAP;       # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : address
                           # if ~ (self.data.rewards.contains(_x1)): # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : address
                           DUP;        # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : address
                           DUG 2;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           GET 3;      # pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           GET 4;      # big_map address nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           SWAP;       # address : big_map address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           DUP;        # address : address : big_map address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           DUG 2;      # address : big_map address nat : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           MEM;        # bool : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           IF
                             {}
                             {
                               SWAP;       # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : address
                               # self.data.rewards[_x1] = 0 # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : address
                               UNPAIR;     # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : address
                               SWAP;       # pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address
                               UNPAIR;     # pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address
                               UNPAIR;     # pair (big_map nat unit) nat : pair nat (big_map address nat) : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address
                               SWAP;       # pair nat (big_map address nat) : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address
                               UNPAIR;     # nat : big_map address nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address
                               SWAP;       # big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address
                               PUSH (option nat) (Some 0); # option nat : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address
                               DUP 7;      # address : option nat : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address
                               UPDATE;     # big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address
                               SWAP;       # nat : big_map address nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address
                               PAIR;       # pair nat (big_map address nat) : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address
                               SWAP;       # pair (big_map nat unit) nat : pair nat (big_map address nat) : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address
                               PAIR;       # pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address
                               PAIR;       # pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address
                               SWAP;       # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : address
                               PAIR;       # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : address
                               SWAP;       # address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                             }; # address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           SWAP;       # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : address
                           # self.data.rewards[_x1] += (self.data.derived_balances.get(_x1, default_value = 0) * sp.as_nat(self.data.reward_per_token - self.data.user_reward_per_token_debt.get(_x1, default_value = 0))) // 1000000000000000000 # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : address
                           DUP;        # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : address
                           DUG 2;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           UNPAIR;     # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           SWAP;       # pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           UNPAIR;     # pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           UNPAIR;     # pair (big_map nat unit) nat : pair nat (big_map address nat) : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           SWAP;       # pair nat (big_map address nat) : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           UNPAIR;     # nat : big_map address nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           SWAP;       # big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           DUP;        # big_map address nat : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           DUP 7;      # address : big_map address nat : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           DUP;        # address : address : big_map address nat : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           DUG 2;      # address : big_map address nat : address : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           GET;        # option nat : address : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           IF_NONE
                             {
                               PUSH int 138; # int : address : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               FAILWITH;   # FAILED
                             }
                             {}; # @some : address : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           PUSH nat 1000000000000000000; # nat : @some : address : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           DUP 10;     # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : nat : @some : address : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           GET 5;      # pair nat (big_map address nat) : nat : @some : address : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           CDR;        # big_map address nat : nat : @some : address : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           DUP 10;     # address : big_map address nat : nat : @some : address : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           GET;        # option nat : nat : @some : address : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           IF_NONE
                             {
                               PUSH nat 0; # nat : nat : @some : address : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                             }
                             {}; # nat : nat : @some : address : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           DUP 11;     # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : nat : nat : @some : address : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           GET 3;      # pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : nat : nat : @some : address : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           CAR;        # pair (big_map nat unit) nat : nat : nat : @some : address : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           CDR;        # nat : nat : nat : @some : address : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           SUB;        # int : nat : @some : address : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           ISNAT;      # option nat : nat : @some : address : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           IF_NONE
                             {
                               PUSH int 140; # int : nat : @some : address : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               FAILWITH;   # FAILED
                             }
                             {}; # @some : nat : @some : address : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           DIG 10;     # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @some : nat : @some : address : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address
                           CAR;        # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @some : nat : @some : address : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address
                           CAR;        # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : @some : nat : @some : address : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address
                           GET 3;      # big_map address nat : @some : nat : @some : address : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address
                           DUP 11;     # address : big_map address nat : @some : nat : @some : address : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address
                           GET;        # option nat : @some : nat : @some : address : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address
                           IF_NONE
                             {
                               PUSH nat 0; # nat : @some : nat : @some : address : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address
                             }
                             {}; # nat : @some : nat : @some : address : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address
                           MUL;        # nat : nat : @some : address : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address
                           EDIV;       # option (pair nat nat) : @some : address : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address
                           IF_NONE
                             {
                               PUSH int 138; # int : @some : address : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address
                               FAILWITH;   # FAILED
                             }
                             {
                               CAR;        # nat : @some : address : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address
                             }; # nat : @some : address : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address
                           ADD;        # nat : address : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address
                           SOME;       # option nat : address : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address
                           SWAP;       # address : option nat : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address
                           UPDATE;     # big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address
                           SWAP;       # nat : big_map address nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address
                           PAIR;       # pair nat (big_map address nat) : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address
                           SWAP;       # pair (big_map nat unit) nat : pair nat (big_map address nat) : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address
                           PAIR;       # pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address
                           PAIR;       # pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address
                           SWAP;       # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : address
                           PAIR;       # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : address
                           # self.data.user_reward_per_token_debt[_x1] = self.data.reward_per_token # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : address
                           DUP;        # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : address
                           DUG 2;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           UNPAIR;     # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           SWAP;       # pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           UNPAIR;     # pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           SWAP;       # pair (pair nat (big_map address nat)) (pair address address) : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           UNPAIR;     # pair nat (big_map address nat) : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           UNPAIR;     # nat : big_map address nat : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           SWAP;       # big_map address nat : nat : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           DIG 6;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : big_map address nat : nat : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address
                           GET 3;      # pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : big_map address nat : nat : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address
                           CAR;        # pair (big_map nat unit) nat : big_map address nat : nat : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address
                           CDR;        # nat : big_map address nat : nat : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address
                           SOME;       # option nat : big_map address nat : nat : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : address
                           DIG 6;      # address : option nat : big_map address nat : nat : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))
                           UPDATE;     # big_map address nat : nat : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))
                           SWAP;       # nat : big_map address nat : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))
                           PAIR;       # pair nat (big_map address nat) : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))
                           PAIR;       # pair (pair nat (big_map address nat)) (pair address address) : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))
                           SWAP;       # pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))
                           PAIR;       # pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))
                           SWAP;       # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))
                           PAIR;       # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                         }
                         {
                           DROP;       # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                         }; # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       UNIT;       # unit : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                       PAIR;       # pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))
                     }; # lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : pair @parameter @storage : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                   SWAP;       # pair @parameter @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                   UNPAIR;     # @parameter : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                   IF_LEFT
                     {
                       IF_LEFT
                         {
                           DROP;       # @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           DIG 2;      # lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           DROP;       # @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           SWAP;       # lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : @storage
                           # == get_reward ==
                           # compute_gauge_304 = sp.local("compute_gauge_304", self.update_reward(sp.sender)) # lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : @storage
                           SENDER;     # @sender : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : @storage
                           SWAP;       # lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : @sender : @storage
                           DUG 2;      # @sender : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           PAIR;       # pair @sender @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           EXEC;       # pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))
                           CDR;        # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           # if self.data.rewards[sp.sender] != 0: # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           DUP;        # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           GET 3;      # pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           GET 4;      # big_map address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           PUSH nat 0; # nat : big_map address nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           SWAP;       # big_map address nat : nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           SENDER;     # @sender : big_map address nat : nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           GET;        # option nat : nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           IF_NONE
                             {
                               PUSH int 307; # int : nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               FAILWITH;   # FAILED
                             }
                             {}; # @some : nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           COMPARE;    # int : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           NEQ;        # bool : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           IF
                             {
                               # sp.transfer(sp.record(from_ = sp.self_address, to_ = sp.sender, value = self.data.rewards[sp.sender]), sp.tez(0), sp.contract(sp.TRecord(from_ = sp.TAddress, to_ = sp.TAddress, value = sp.TNat).layout(("from_ as from", ("to_ as to", "value"))), self.data.ply_address, entry_point='transfer').open_some()) # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               DUP;        # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               CAR;        # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               GET 6;      # address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               CONTRACT %transfer (pair (address %from) (pair (address %to) (nat %value))); # option (contract (pair (address %from) (pair (address %to) (nat %value)))) : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               IF_NONE
                                 {
                                   PUSH int 15; # int : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   FAILWITH;   # FAILED
                                 }
                                 {}; # @some : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               NIL operation; # list operation : @some : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               SWAP;       # @some : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               PUSH mutez 0; # mutez : @some : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               DUP 4;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : mutez : @some : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               GET 3;      # pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : mutez : @some : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               GET 4;      # big_map address nat : mutez : @some : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               SENDER;     # @sender : big_map address nat : mutez : @some : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               GET;        # option nat : mutez : @some : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               IF_NONE
                                 {
                                   PUSH int 313; # int : mutez : @some : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   FAILWITH;   # FAILED
                                 }
                                 {}; # @some : mutez : @some : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               SENDER;     # @sender : @some : mutez : @some : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               SELF_ADDRESS; # @self : @sender : @some : mutez : @some : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               PAIR 3;     # pair @self (pair @sender @some) : mutez : @some : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               TRANSFER_TOKENS; # operation : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               CONS;       # list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               SWAP;       # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : list operation
                               # self.data.rewards[sp.sender] = 0 # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : list operation
                               UNPAIR;     # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : list operation
                               SWAP;       # pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation
                               UNPAIR;     # pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation
                               UNPAIR;     # pair (big_map nat unit) nat : pair nat (big_map address nat) : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation
                               SWAP;       # pair nat (big_map address nat) : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation
                               UNPAIR;     # nat : big_map address nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation
                               SWAP;       # big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation
                               PUSH (option nat) (Some 0); # option nat : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation
                               SENDER;     # @sender : option nat : big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation
                               UPDATE;     # big_map address nat : nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation
                               SWAP;       # nat : big_map address nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation
                               PAIR;       # pair nat (big_map address nat) : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation
                               SWAP;       # pair (big_map nat unit) nat : pair nat (big_map address nat) : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation
                               PAIR;       # pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation
                               PAIR;       # pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation
                               SWAP;       # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : list operation
                               PAIR;       # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : list operation
                               SWAP;       # list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                             }
                             {
                               NIL operation; # list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                             }; # list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                         }
                         {
                           DIG 3;      # lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : @parameter%recharge : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           DROP;       # @parameter%recharge : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           SWAP;       # @storage : @parameter%recharge : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           # == recharge ==
                           # sp.verify(sp.sender == self.data.voter, 'NOT_AUTHORISED') # @storage : @parameter%recharge : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           DUP;        # @storage : @storage : @parameter%recharge : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           DUG 2;      # @storage : @parameter%recharge : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           GET 8;      # address : @parameter%recharge : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           SENDER;     # @sender : address : @parameter%recharge : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           COMPARE;    # int : @parameter%recharge : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           EQ;         # bool : @parameter%recharge : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           IF
                             {}
                             {
                               PUSH string "NOT_AUTHORISED"; # string : @parameter%recharge : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               FAILWITH;   # FAILED
                             }; # @parameter%recharge : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           SWAP;       # @storage : @parameter%recharge : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           # sp.verify(~ (self.data.recharge_ledger.contains(params.epoch)), 'ALREADY_RECHARGED_FOR_EPOCH') # @storage : @parameter%recharge : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           DUP;        # @storage : @storage : @parameter%recharge : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           DUG 2;      # @storage : @parameter%recharge : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           GET 3;      # pair (pair (big_map %recharge_ledger nat unit) (nat %reward_per_token)) (pair (nat %reward_rate) (big_map %rewards address nat)) : @parameter%recharge : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           CAR;        # pair (big_map %recharge_ledger nat unit) (nat %reward_per_token) : @parameter%recharge : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           CAR;        # big_map nat unit : @parameter%recharge : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           SWAP;       # @parameter%recharge : big_map nat unit : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           DUP;        # @parameter%recharge : @parameter%recharge : big_map nat unit : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           DUG 2;      # @parameter%recharge : big_map nat unit : @parameter%recharge : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           CDR;        # nat : big_map nat unit : @parameter%recharge : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           MEM;        # bool : @parameter%recharge : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           IF
                             {
                               PUSH string "ALREADY_RECHARGED_FOR_EPOCH"; # string : @parameter%recharge : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               FAILWITH;   # FAILED
                             }
                             {}; # @parameter%recharge : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           # compute_gauge_332 = sp.local("compute_gauge_332", self.update_reward(sp.address('KT1TezoooozzSmartPyzzDYNAMiCzzpLu4LU'))) # @parameter%recharge : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           DIG 2;      # lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : @parameter%recharge : @storage
                           PUSH address "KT1TezoooozzSmartPyzzDYNAMiCzzpLu4LU"; # address : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : @parameter%recharge : @storage
                           SWAP;       # lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : address : @parameter%recharge : @storage
                           DIG 3;      # @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : address : @parameter%recharge
                           DIG 2;      # address : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : @parameter%recharge
                           PAIR;       # pair address @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : @parameter%recharge
                           EXEC;       # pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))) : @parameter%recharge
                           CDR;        # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @parameter%recharge
                           # self.data.period_finish = ((sp.as_nat(sp.now - sp.timestamp(0)) + 604800) // 604800) * 604800 # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @parameter%recharge
                           UNPAIR;     # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%recharge
                           UNPAIR;     # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%recharge
                           SWAP;       # pair (pair nat address) (pair nat address) : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%recharge
                           UNPAIR;     # pair nat address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%recharge
                           SWAP;       # pair nat address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%recharge
                           CDR;        # address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%recharge
                           PUSH nat 604800; # nat : address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%recharge
                           DUP;        # nat : nat : address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%recharge
                           DUP;        # nat : nat : nat : address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%recharge
                           PUSH timestamp "1970-01-01T00:00:00Z"; # timestamp : nat : nat : nat : address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%recharge
                           NOW;        # @now : timestamp : nat : nat : nat : address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%recharge
                           SUB;        # int : nat : nat : nat : address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%recharge
                           ISNAT;      # option nat : nat : nat : nat : address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%recharge
                           IF_NONE
                             {
                               PUSH int 335; # int : nat : nat : nat : address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%recharge
                               FAILWITH;   # FAILED
                             }
                             {}; # @some : nat : nat : nat : address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%recharge
                           ADD;        # nat : nat : nat : address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%recharge
                           EDIV;       # option (pair nat nat) : nat : address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%recharge
                           IF_NONE
                             {
                               PUSH int 339; # int : nat : address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%recharge
                               FAILWITH;   # FAILED
                             }
                             {
                               CAR;        # nat : nat : address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%recharge
                             }; # nat : nat : address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%recharge
                           MUL;        # nat : address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%recharge
                           PAIR;       # pair nat address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%recharge
                           SWAP;       # pair nat address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%recharge
                           PAIR;       # pair (pair nat address) (pair nat address) : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%recharge
                           SWAP;       # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%recharge
                           PAIR;       # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%recharge
                           PAIR;       # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @parameter%recharge
                           # self.data.reward_rate = params.amount // sp.as_nat(self.data.period_finish - sp.as_nat(sp.now - sp.timestamp(0))) # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @parameter%recharge
                           DUP;        # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @parameter%recharge
                           DUG 2;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           UNPAIR;     # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           SWAP;       # pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           UNPAIR;     # pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           UNPAIR;     # pair (big_map nat unit) nat : pair nat (big_map address nat) : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           SWAP;       # pair nat (big_map address nat) : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           CDR;        # big_map address nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           PUSH timestamp "1970-01-01T00:00:00Z"; # timestamp : big_map address nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           NOW;        # @now : timestamp : big_map address nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           SUB;        # int : big_map address nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           ISNAT;      # option nat : big_map address nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           IF_NONE
                             {
                               PUSH int 335; # int : big_map address nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               FAILWITH;   # FAILED
                             }
                             {}; # @some : big_map address nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @parameter%recharge : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           DIG 6;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @some : big_map address nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @parameter%recharge
                           CAR;        # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @some : big_map address nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @parameter%recharge
                           GET 5;      # nat : @some : big_map address nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @parameter%recharge
                           SUB;        # int : big_map address nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @parameter%recharge
                           ISNAT;      # option nat : big_map address nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @parameter%recharge
                           IF_NONE
                             {
                               PUSH int 342; # int : big_map address nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @parameter%recharge
                               FAILWITH;   # FAILED
                             }
                             {}; # @some : big_map address nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @parameter%recharge
                           DUP 6;      # @parameter%recharge : @some : big_map address nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @parameter%recharge
                           CAR;        # nat : @some : big_map address nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @parameter%recharge
                           EDIV;       # option (pair nat nat) : big_map address nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @parameter%recharge
                           IF_NONE
                             {
                               PUSH int 345; # int : big_map address nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @parameter%recharge
                               FAILWITH;   # FAILED
                             }
                             {
                               CAR;        # nat : big_map address nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @parameter%recharge
                             }; # nat : big_map address nat : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @parameter%recharge
                           PAIR;       # pair nat (big_map address nat) : pair (big_map nat unit) nat : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @parameter%recharge
                           SWAP;       # pair (big_map nat unit) nat : pair nat (big_map address nat) : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @parameter%recharge
                           PAIR;       # pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @parameter%recharge
                           PAIR;       # pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @parameter%recharge
                           SWAP;       # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%recharge
                           # self.data.last_update_time = sp.as_nat(sp.now - sp.timestamp(0)) # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%recharge
                           UNPAIR;     # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%recharge
                           SWAP;       # pair (pair nat address) (pair nat address) : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%recharge
                           UNPAIR;     # pair nat address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%recharge
                           CDR;        # address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%recharge
                           PUSH timestamp "1970-01-01T00:00:00Z"; # timestamp : address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%recharge
                           NOW;        # @now : timestamp : address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%recharge
                           SUB;        # int : address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%recharge
                           ISNAT;      # option nat : address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%recharge
                           IF_NONE
                             {
                               PUSH int 335; # int : address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%recharge
                               FAILWITH;   # FAILED
                             }
                             {}; # @some : address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%recharge
                           PAIR;       # pair @some address : pair nat address : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%recharge
                           PAIR;       # pair (pair @some address) (pair nat address) : pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%recharge
                           SWAP;       # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair @some address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%recharge
                           PAIR;       # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair @some address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%recharge
                           SWAP;       # pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair @some address) (pair nat address)) : @parameter%recharge
                           # self.data.recharge_ledger[params.epoch] = sp.unit # pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair @some address) (pair nat address)) : @parameter%recharge
                           UNPAIR;     # pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair @some address) (pair nat address)) : @parameter%recharge
                           UNPAIR;     # pair (big_map nat unit) nat : pair nat (big_map address nat) : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair @some address) (pair nat address)) : @parameter%recharge
                           UNPAIR;     # big_map nat unit : nat : pair nat (big_map address nat) : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair @some address) (pair nat address)) : @parameter%recharge
                           PUSH (option unit) (Some Unit); # option unit : big_map nat unit : nat : pair nat (big_map address nat) : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair @some address) (pair nat address)) : @parameter%recharge
                           DIG 6;      # @parameter%recharge : option unit : big_map nat unit : nat : pair nat (big_map address nat) : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair @some address) (pair nat address))
                           CDR;        # nat : option unit : big_map nat unit : nat : pair nat (big_map address nat) : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair @some address) (pair nat address))
                           UPDATE;     # big_map nat unit : nat : pair nat (big_map address nat) : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair @some address) (pair nat address))
                           PAIR;       # pair (big_map nat unit) nat : pair nat (big_map address nat) : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair @some address) (pair nat address))
                           PAIR;       # pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair @some address) (pair nat address))
                           PAIR;       # pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair @some address) (pair nat address))
                           SWAP;       # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair @some address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))
                           PAIR;       # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair @some address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           NIL operation; # list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair @some address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                         }; # list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                     }
                     {
                       IF_LEFT
                         {
                           # == stake ==
                           # sp.verify(params.amount > 0, 'ZERO_STAKE_NOT_ALLOWED') # @parameter%stake : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           DUP;        # @parameter%stake : @parameter%stake : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           CAR;        # nat : @parameter%stake : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           PUSH nat 0; # nat : nat : @parameter%stake : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           COMPARE;    # int : @parameter%stake : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           LT;         # bool : @parameter%stake : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           IF
                             {}
                             {
                               PUSH string "ZERO_STAKE_NOT_ALLOWED"; # string : @parameter%stake : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               FAILWITH;   # FAILED
                             }; # @parameter%stake : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           # compute_gauge_197 = sp.local("compute_gauge_197", self.update_reward(sp.sender)) # @parameter%stake : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           DIG 2;      # lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : @parameter%stake : @storage : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           SENDER;     # @sender : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : @parameter%stake : @storage : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           SWAP;       # lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : @sender : @parameter%stake : @storage : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           DIG 3;      # @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : @sender : @parameter%stake : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           DIG 2;      # @sender : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : @parameter%stake : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           PAIR;       # pair @sender @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : @parameter%stake : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           EXEC;       # pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))) : @parameter%stake : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           CDR;        # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @parameter%stake : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           DIG 2;      # lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @parameter%stake
                           SWAP;       # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : @parameter%stake
                           DIG 2;      # @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           SWAP;       # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @parameter%stake : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           # if ~ (self.data.balances.contains(sp.sender)): # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @parameter%stake : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           DUP;        # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @parameter%stake : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           DUG 2;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           CAR;        # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           CAR;        # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           CAR;        # pair (big_map address nat) (big_map address nat) : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           CDR;        # big_map address nat : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           SENDER;     # @sender : big_map address nat : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           MEM;        # bool : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           IF
                             {}
                             {
                               SWAP;       # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @parameter%stake : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               # self.data.balances[sp.sender] = 0 # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @parameter%stake : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               UNPAIR;     # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               UNPAIR;     # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               UNPAIR;     # pair (big_map address nat) (big_map address nat) : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               UNPAIR;     # big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               SWAP;       # big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               PUSH (option nat) (Some 0); # option nat : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               SENDER;     # @sender : option nat : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               UPDATE;     # big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               SWAP;       # big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               PAIR;       # pair (big_map address nat) (big_map address nat) : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               PAIR;       # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               PAIR;       # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               PAIR;       # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @parameter%stake : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               SWAP;       # @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                             }; # @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           SWAP;       # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @parameter%stake : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           # self.data.balances[sp.sender] += params.amount # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @parameter%stake : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           UNPAIR;     # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           UNPAIR;     # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           UNPAIR;     # pair (big_map address nat) (big_map address nat) : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           UNPAIR;     # big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           SWAP;       # big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           DUP;        # big_map address nat : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           SENDER;     # @sender : big_map address nat : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           DUP;        # @sender : @sender : big_map address nat : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           DUG 2;      # @sender : big_map address nat : @sender : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           GET;        # option nat : @sender : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           IF_NONE
                             {
                               PUSH int 202; # int : @sender : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               FAILWITH;   # FAILED
                             }
                             {}; # @some : @sender : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           DUP 8;      # @parameter%stake : @some : @sender : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           CAR;        # nat : @some : @sender : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           ADD;        # nat : @sender : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           SOME;       # option nat : @sender : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           SWAP;       # @sender : option nat : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           UPDATE;     # big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           SWAP;       # big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           PAIR;       # pair (big_map address nat) (big_map address nat) : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           PAIR;       # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           PAIR;       # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           SWAP;       # pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @parameter%stake : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           # self.data.total_supply += params.amount # pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @parameter%stake : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           UNPAIR;     # pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @parameter%stake : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           SWAP;       # pair (pair nat (big_map address nat)) (pair address address) : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @parameter%stake : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           UNPAIR;     # pair nat (big_map address nat) : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @parameter%stake : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           UNPAIR;     # nat : big_map address nat : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @parameter%stake : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           DUP 6;      # @parameter%stake : nat : big_map address nat : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @parameter%stake : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           CAR;        # nat : nat : big_map address nat : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @parameter%stake : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           ADD;        # nat : big_map address nat : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @parameter%stake : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           PAIR;       # pair nat (big_map address nat) : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @parameter%stake : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           PAIR;       # pair (pair nat (big_map address nat)) (pair address address) : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @parameter%stake : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           SWAP;       # pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @parameter%stake : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           PAIR;       # pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @parameter%stake : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           SWAP;       # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           PAIR;       # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @parameter%stake : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           SWAP;       # @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           # compute_gauge_206 = sp.local("compute_gauge_206", self.update_derived(sp.record(address = sp.sender, token_id = params.token_id))) # @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           DIG 2;      # lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           SWAP;       # @parameter%stake : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           DUP;        # @parameter%stake : @parameter%stake : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           DUG 2;      # @parameter%stake : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           CDR;        # nat : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           SENDER;     # @sender : nat : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           PAIR;       # pair @sender nat : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           SWAP;       # lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : pair @sender nat : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           DIG 3;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : pair @sender nat : @parameter%stake
                           DIG 2;      # pair @sender nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : @parameter%stake
                           PAIR;       # pair (pair @sender nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : @parameter%stake
                           EXEC;       # pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))) : @parameter%stake
                           CDR;        # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @parameter%stake
                           SWAP;       # @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           # if params.token_id != 0: # @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           DUP;        # @parameter%stake : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           CDR;        # nat : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           PUSH nat 0; # nat : nat : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           COMPARE;    # int : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           NEQ;        # bool : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           IF
                             {
                               SWAP;       # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @parameter%stake
                               # sp.verify(sp.view("is_owner", self.data.ve_address, sp.record(address = sp.sender, token_id = params.token_id), sp.TBool).open_some(message = 'INVALID_VIEW'), 'SENDER_DOES_NOT_OWN_LOCK') # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @parameter%stake
                               DUP;        # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @parameter%stake
                               DUG 2;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               GET 7;      # address : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               SWAP;       # @parameter%stake : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               DUP;        # @parameter%stake : @parameter%stake : address : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               DUG 2;      # @parameter%stake : address : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               CDR;        # nat : address : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               SENDER;     # @sender : nat : address : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               PAIR;       # pair @sender nat : address : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               VIEW "is_owner" bool; # option bool : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               IF_NONE
                                 {
                                   PUSH string "INVALID_VIEW"; # string : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   FAILWITH;   # FAILED
                                 }
                                 {}; # @some : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               IF
                                 {}
                                 {
                                   PUSH string "SENDER_DOES_NOT_OWN_LOCK"; # string : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   FAILWITH;   # FAILED
                                 }; # @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               SWAP;       # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @parameter%stake
                               # if ~ (self.data.attached_tokens.contains(sp.sender)): # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @parameter%stake
                               DUP;        # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @parameter%stake
                               DUG 2;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               CAR;        # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               CAR;        # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               CAR;        # pair (big_map address nat) (big_map address nat) : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               CAR;        # big_map address nat : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               SENDER;     # @sender : big_map address nat : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               MEM;        # bool : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               IF
                                 {
                                   NIL operation; # list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                 }
                                 {
                                   SWAP;       # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @parameter%stake
                                   # self.data.attached_tokens[sp.sender] = params.token_id # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @parameter%stake
                                   UNPAIR;     # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake
                                   UNPAIR;     # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake
                                   UNPAIR;     # pair (big_map address nat) (big_map address nat) : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake
                                   UNPAIR;     # big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake
                                   DUP 6;      # @parameter%stake : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake
                                   CDR;        # nat : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake
                                   SOME;       # option nat : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake
                                   SENDER;     # @sender : option nat : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake
                                   UPDATE;     # big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake
                                   PAIR;       # pair (big_map address nat) (big_map address nat) : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake
                                   PAIR;       # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake
                                   PAIR;       # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : @parameter%stake
                                   PAIR;       # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @parameter%stake
                                   SWAP;       # @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   # sp.transfer(sp.record(attachments = sp.list([(params.token_id, True)]), owner = sp.sender), sp.tez(0), sp.contract(sp.TRecord(attachments = sp.TList(sp.TPair(sp.TNat, sp.TBool)), owner = sp.TAddress).layout(("attachments", "owner")), self.data.ve_address, entry_point='attach').open_some()) # @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   NIL operation; # list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   DUP 3;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   GET 7;      # address : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   CONTRACT %attach (pair (list %attachments (pair nat bool)) (address %owner)); # option (contract (pair (list %attachments (pair nat bool)) (address %owner))) : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   IF_NONE
                                     {
                                       PUSH int 79; # int : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                       FAILWITH;   # FAILED
                                     }
                                     {}; # @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   PUSH mutez 0; # mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   SENDER;     # @sender : mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   NIL (pair nat bool); # list (pair nat bool) : @sender : mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   PUSH bool True; # bool : list (pair nat bool) : @sender : mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   DUP 7;      # @parameter%stake : bool : list (pair nat bool) : @sender : mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   CDR;        # nat : bool : list (pair nat bool) : @sender : mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   PAIR;       # pair nat bool : list (pair nat bool) : @sender : mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   CONS;       # list (pair nat bool) : @sender : mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   PAIR;       # pair (list (pair nat bool)) @sender : mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   TRANSFER_TOKENS; # operation : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   CONS;       # list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                 }; # list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               SWAP;       # @parameter%stake : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               # if self.data.attached_tokens[sp.sender] != params.token_id: # @parameter%stake : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               DUP;        # @parameter%stake : @parameter%stake : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               DUG 2;      # @parameter%stake : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               CDR;        # nat : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               DUP 4;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : nat : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               CAR;        # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               CAR;        # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : nat : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               CAR;        # pair (big_map address nat) (big_map address nat) : nat : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               CAR;        # big_map address nat : nat : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               SENDER;     # @sender : big_map address nat : nat : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               GET;        # option nat : nat : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               IF_NONE
                                 {
                                   PUSH int 230; # int : nat : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   FAILWITH;   # FAILED
                                 }
                                 {}; # @some : nat : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               COMPARE;    # int : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               NEQ;        # bool : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               IF
                                 {
                                   # sp.transfer(sp.record(attachments = sp.list([(self.data.attached_tokens[sp.sender], False), (params.token_id, True)]), owner = sp.sender), sp.tez(0), sp.contract(sp.TRecord(attachments = sp.TList(sp.TPair(sp.TNat, sp.TBool)), owner = sp.TAddress).layout(("attachments", "owner")), self.data.ve_address, entry_point='attach').open_some()) # list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   DUP 3;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   GET 7;      # address : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   CONTRACT %attach (pair (list %attachments (pair nat bool)) (address %owner)); # option (contract (pair (list %attachments (pair nat bool)) (address %owner))) : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   IF_NONE
                                     {
                                       PUSH int 79; # int : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                       FAILWITH;   # FAILED
                                     }
                                     {}; # @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   PUSH mutez 0; # mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   SENDER;     # @sender : mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   NIL (pair nat bool); # list (pair nat bool) : @sender : mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   PUSH bool True; # bool : list (pair nat bool) : @sender : mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   DUP 7;      # @parameter%stake : bool : list (pair nat bool) : @sender : mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   CDR;        # nat : bool : list (pair nat bool) : @sender : mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   PAIR;       # pair nat bool : list (pair nat bool) : @sender : mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   CONS;       # list (pair nat bool) : @sender : mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   PUSH bool False; # bool : list (pair nat bool) : @sender : mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   DUP 8;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : bool : list (pair nat bool) : @sender : mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   CAR;        # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : bool : list (pair nat bool) : @sender : mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   CAR;        # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : bool : list (pair nat bool) : @sender : mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   CAR;        # pair (big_map address nat) (big_map address nat) : bool : list (pair nat bool) : @sender : mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   CAR;        # big_map address nat : bool : list (pair nat bool) : @sender : mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   SENDER;     # @sender : big_map address nat : bool : list (pair nat bool) : @sender : mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   GET;        # option nat : bool : list (pair nat bool) : @sender : mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   IF_NONE
                                     {
                                       PUSH int 235; # int : bool : list (pair nat bool) : @sender : mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                       FAILWITH;   # FAILED
                                     }
                                     {}; # @some : bool : list (pair nat bool) : @sender : mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   PAIR;       # pair @some bool : list (pair nat bool) : @sender : mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   CONS;       # list (pair nat bool) : @sender : mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   PAIR;       # pair (list (pair nat bool)) @sender : mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   TRANSFER_TOKENS; # operation : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   CONS;       # list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   # self.data.attached_tokens[sp.sender] = params.token_id # list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   DIG 2;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : list operation : @parameter%stake
                                   UNPAIR;     # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : list operation : @parameter%stake
                                   UNPAIR;     # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : list operation : @parameter%stake
                                   UNPAIR;     # pair (big_map address nat) (big_map address nat) : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : list operation : @parameter%stake
                                   UNPAIR;     # big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : list operation : @parameter%stake
                                   DUP 7;      # @parameter%stake : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : list operation : @parameter%stake
                                   CDR;        # nat : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : list operation : @parameter%stake
                                   SOME;       # option nat : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : list operation : @parameter%stake
                                   SENDER;     # @sender : option nat : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : list operation : @parameter%stake
                                   UPDATE;     # big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : list operation : @parameter%stake
                                   PAIR;       # pair (big_map address nat) (big_map address nat) : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : list operation : @parameter%stake
                                   PAIR;       # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : list operation : @parameter%stake
                                   PAIR;       # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : list operation : @parameter%stake
                                   PAIR;       # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : list operation : @parameter%stake
                                   DUG 2;      # list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                 }
                                 {}; # list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                             }
                             {
                               NIL operation; # list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                             }; # list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           # sp.transfer(sp.record(from_ = sp.sender, to_ = sp.self_address, value = params.amount), sp.tez(0), sp.contract(sp.TRecord(from_ = sp.TAddress, to_ = sp.TAddress, value = sp.TNat).layout(("from_ as from", ("to_ as to", "value"))), self.data.lp_token_address, entry_point='transfer').open_some()) # list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           DUP 3;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           CAR;        # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           GET 3;      # pair nat address : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           CDR;        # address : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           CONTRACT %transfer (pair (address %from) (pair (address %to) (nat %value))); # option (contract (pair (address %from) (pair (address %to) (nat %value)))) : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           IF_NONE
                             {
                               PUSH int 15; # int : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               FAILWITH;   # FAILED
                             }
                             {}; # @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           PUSH mutez 0; # mutez : @some : list operation : @parameter%stake : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           DIG 3;      # @parameter%stake : mutez : @some : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           CAR;        # nat : mutez : @some : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           SELF_ADDRESS; # @self : nat : mutez : @some : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           SENDER;     # @sender : @self : nat : mutez : @some : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           PAIR 3;     # pair @sender (pair @self nat) : mutez : @some : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           TRANSFER_TOKENS; # operation : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           CONS;       # list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                         }
                         {
                           # == withdraw ==
                           # sp.verify(params > 0, 'ZERO_WITHDRAWAL_NOT_ALLOWED') # @parameter%withdraw : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           DUP;        # @parameter%withdraw : @parameter%withdraw : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           PUSH nat 0; # nat : @parameter%withdraw : @parameter%withdraw : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           COMPARE;    # int : @parameter%withdraw : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           LT;         # bool : @parameter%withdraw : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           IF
                             {}
                             {
                               PUSH string "ZERO_WITHDRAWAL_NOT_ALLOWED"; # string : @parameter%withdraw : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               FAILWITH;   # FAILED
                             }; # @parameter%withdraw : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           # sp.verify(self.data.balances.get(sp.sender, default_value = 0) != 0, 'NO_STAKE_TO_WITHDRAW') # @parameter%withdraw : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           PUSH nat 0; # nat : @parameter%withdraw : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           DUP 3;      # @storage : nat : @parameter%withdraw : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           CAR;        # pair (pair (pair (big_map %attached_tokens address nat) (big_map %balances address nat)) (pair (big_map %derived_balances address nat) (nat %derived_supply))) (pair (pair (nat %last_update_time) (address %lp_token_address)) (pair (nat %period_finish) (address %ply_address))) : nat : @parameter%withdraw : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           CAR;        # pair (pair (big_map %attached_tokens address nat) (big_map %balances address nat)) (pair (big_map %derived_balances address nat) (nat %derived_supply)) : nat : @parameter%withdraw : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           CAR;        # pair (big_map %attached_tokens address nat) (big_map %balances address nat) : nat : @parameter%withdraw : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           CDR;        # big_map address nat : nat : @parameter%withdraw : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           SENDER;     # @sender : big_map address nat : nat : @parameter%withdraw : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           GET;        # option nat : nat : @parameter%withdraw : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           IF_NONE
                             {
                               PUSH nat 0; # nat : nat : @parameter%withdraw : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                             }
                             {}; # nat : nat : @parameter%withdraw : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           COMPARE;    # int : @parameter%withdraw : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           NEQ;        # bool : @parameter%withdraw : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           IF
                             {}
                             {
                               PUSH string "NO_STAKE_TO_WITHDRAW"; # string : @parameter%withdraw : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               FAILWITH;   # FAILED
                             }; # @parameter%withdraw : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           # compute_gauge_266 = sp.local("compute_gauge_266", self.update_reward(sp.sender)) # @parameter%withdraw : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           DIG 2;      # lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : @parameter%withdraw : @storage : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           SENDER;     # @sender : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : @parameter%withdraw : @storage : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           SWAP;       # lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : @sender : @parameter%withdraw : @storage : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           DIG 3;      # @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : @sender : @parameter%withdraw : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           DIG 2;      # @sender : @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : @parameter%withdraw : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           PAIR;       # pair @sender @storage : lambda (pair address (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : @parameter%withdraw : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           EXEC;       # pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))) : @parameter%withdraw : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           CDR;        # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @parameter%withdraw : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           DIG 2;      # lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : @parameter%withdraw
                           SWAP;       # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : @parameter%withdraw
                           DIG 2;      # @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           # sp.transfer(sp.record(from_ = sp.self_address, to_ = sp.sender, value = sp.min(params, self.data.balances[sp.sender])), sp.tez(0), sp.contract(sp.TRecord(from_ = sp.TAddress, to_ = sp.TAddress, value = sp.TNat).layout(("from_ as from", ("to_ as to", "value"))), self.data.lp_token_address, entry_point='transfer').open_some()) # @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           NIL operation; # list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           DUP 3;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           CAR;        # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           GET 3;      # pair nat address : list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           CDR;        # address : list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           CONTRACT %transfer (pair (address %from) (pair (address %to) (nat %value))); # option (contract (pair (address %from) (pair (address %to) (nat %value)))) : list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           IF_NONE
                             {
                               PUSH int 15; # int : list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               FAILWITH;   # FAILED
                             }
                             {}; # @some : list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           PUSH mutez 0; # mutez : @some : list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           DUP 5;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : mutez : @some : list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           CAR;        # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : mutez : @some : list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           CAR;        # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : mutez : @some : list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           CAR;        # pair (big_map address nat) (big_map address nat) : mutez : @some : list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           CDR;        # big_map address nat : mutez : @some : list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           SENDER;     # @sender : big_map address nat : mutez : @some : list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           GET;        # option nat : mutez : @some : list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           IF_NONE
                             {
                               PUSH int 273; # int : mutez : @some : list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               FAILWITH;   # FAILED
                             }
                             {}; # @some : mutez : @some : list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           DUP 5;      # @parameter%withdraw : @some : mutez : @some : list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           DUP;        # @parameter%withdraw : @parameter%withdraw : @some : mutez : @some : list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           DUP 3;      # @some : @parameter%withdraw : @parameter%withdraw : @some : mutez : @some : list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           COMPARE;    # int : @parameter%withdraw : @some : mutez : @some : list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           LE;         # bool : @parameter%withdraw : @some : mutez : @some : list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           IF
                             {
                               DROP;       # @some : mutez : @some : list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                             }
                             {
                               SWAP;       # @some : @parameter%withdraw : mutez : @some : list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               DROP;       # @parameter%withdraw : mutez : @some : list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                             }; # nat : mutez : contract (pair (address %from) (pair (address %to) (nat %value))) : list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           SENDER;     # @sender : nat : mutez : contract (pair (address %from) (pair (address %to) (nat %value))) : list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           SELF_ADDRESS; # @self : @sender : nat : mutez : contract (pair (address %from) (pair (address %to) (nat %value))) : list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           PAIR 3;     # pair @self (pair @sender nat) : mutez : contract (pair (address %from) (pair (address %to) (nat %value))) : list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           TRANSFER_TOKENS; # operation : list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           CONS;       # list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           # self.data.total_supply = sp.as_nat(self.data.total_supply - sp.min(params, self.data.balances[sp.sender])) # list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           DUP 3;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           UNPAIR;     # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           SWAP;       # pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           UNPAIR;     # pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair nat (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           SWAP;       # pair (pair nat (big_map address nat)) (pair address address) : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           UNPAIR;     # pair nat (big_map address nat) : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           CDR;        # big_map address nat : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           DUP 7;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : big_map address nat : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           CAR;        # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : big_map address nat : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           CAR;        # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : big_map address nat : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           CAR;        # pair (big_map address nat) (big_map address nat) : big_map address nat : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           CDR;        # big_map address nat : big_map address nat : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           SENDER;     # @sender : big_map address nat : big_map address nat : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           GET;        # option nat : big_map address nat : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           IF_NONE
                             {
                               PUSH int 279; # int : big_map address nat : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               FAILWITH;   # FAILED
                             }
                             {}; # @some : big_map address nat : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           DUP 7;      # @parameter%withdraw : @some : big_map address nat : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           DUP;        # @parameter%withdraw : @parameter%withdraw : @some : big_map address nat : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           DUP 3;      # @some : @parameter%withdraw : @parameter%withdraw : @some : big_map address nat : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           COMPARE;    # int : @parameter%withdraw : @some : big_map address nat : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           LE;         # bool : @parameter%withdraw : @some : big_map address nat : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           IF
                             {
                               DROP;       # @some : big_map address nat : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                             }
                             {
                               SWAP;       # @some : @parameter%withdraw : big_map address nat : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               DROP;       # @parameter%withdraw : big_map address nat : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                             }; # nat : big_map address nat : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           DIG 7;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : nat : big_map address nat : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation : @parameter%withdraw : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           GET 5;      # pair nat (big_map address nat) : nat : big_map address nat : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation : @parameter%withdraw : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           CAR;        # nat : nat : big_map address nat : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation : @parameter%withdraw : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           SUB;        # int : big_map address nat : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation : @parameter%withdraw : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           ISNAT;      # option nat : big_map address nat : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation : @parameter%withdraw : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           IF_NONE
                             {
                               PUSH int 279; # int : big_map address nat : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation : @parameter%withdraw : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               FAILWITH;   # FAILED
                             }
                             {}; # @some : big_map address nat : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation : @parameter%withdraw : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           PAIR;       # pair @some (big_map address nat) : pair address address : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation : @parameter%withdraw : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           PAIR;       # pair (pair @some (big_map address nat)) (pair address address) : pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation : @parameter%withdraw : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           SWAP;       # pair (pair (big_map nat unit) nat) (pair nat (big_map address nat)) : pair (pair @some (big_map address nat)) (pair address address) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation : @parameter%withdraw : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           PAIR;       # pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation : @parameter%withdraw : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           SWAP;       # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : @parameter%withdraw : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           PAIR;       # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : list operation : @parameter%withdraw : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           # self.data.balances[sp.sender] = sp.as_nat(self.data.balances[sp.sender] - sp.min(params, self.data.balances[sp.sender])) # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : list operation : @parameter%withdraw : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           DUP;        # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : list operation : @parameter%withdraw : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           DUG 3;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           UNPAIR;     # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           UNPAIR;     # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           UNPAIR;     # pair (big_map address nat) (big_map address nat) : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           UNPAIR;     # big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           SWAP;       # big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           DUP 8;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           CAR;        # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           CAR;        # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           CAR;        # pair (big_map address nat) (big_map address nat) : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           CDR;        # big_map address nat : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           SENDER;     # @sender : big_map address nat : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           GET;        # option nat : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           IF_NONE
                             {
                               PUSH int 281; # int : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               FAILWITH;   # FAILED
                             }
                             {}; # @some : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : @parameter%withdraw : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           DIG 7;      # @parameter%withdraw : @some : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           DUP;        # @parameter%withdraw : @parameter%withdraw : @some : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           DUP 3;      # @some : @parameter%withdraw : @parameter%withdraw : @some : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           COMPARE;    # int : @parameter%withdraw : @some : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           LE;         # bool : @parameter%withdraw : @some : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           IF
                             {
                               DROP;       # @some : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                             }
                             {
                               SWAP;       # @some : @parameter%withdraw : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               DROP;       # @parameter%withdraw : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                             }; # nat : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           DIG 7;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : nat : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           CAR;        # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           CAR;        # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : nat : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           CAR;        # pair (big_map address nat) (big_map address nat) : nat : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           CDR;        # big_map address nat : nat : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           SENDER;     # @sender : big_map address nat : nat : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           GET;        # option nat : nat : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           IF_NONE
                             {
                               PUSH int 281; # int : nat : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               FAILWITH;   # FAILED
                             }
                             {}; # @some : nat : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           SUB;        # int : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           ISNAT;      # option nat : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           IF_NONE
                             {
                               PUSH int 280; # int : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                               FAILWITH;   # FAILED
                             }
                             {}; # @some : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           SOME;       # option nat : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           SENDER;     # @sender : option nat : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           UPDATE;     # big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           SWAP;       # big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           PAIR;       # pair (big_map address nat) (big_map address nat) : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           PAIR;       # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           PAIR;       # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)) : list operation : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           PAIR;       # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : list operation : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           SWAP;       # list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           # compute_gauge_285 = sp.local("compute_gauge_285", self.update_derived(sp.record(address = sp.sender, token_id = self.data.attached_tokens.get(sp.sender, default_value = 0)))) # list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))))
                           DUG 2;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : list operation
                           DUP;        # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : list operation
                           DUG 3;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)))
                           CAR;        # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)))
                           CAR;        # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)))
                           CAR;        # pair (big_map address nat) (big_map address nat) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)))
                           CAR;        # big_map address nat : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)))
                           SENDER;     # @sender : big_map address nat : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)))
                           GET;        # option nat : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)))
                           IF_NONE
                             {
                               PUSH nat 0; # nat : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)))
                             }
                             {}; # nat : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)))
                           SENDER;     # @sender : nat : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)))
                           PAIR;       # pair @sender nat : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)))
                           SWAP;       # lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : pair @sender nat : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)))
                           DIG 3;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : pair @sender nat : list operation
                           DIG 2;      # pair @sender nat : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : list operation
                           PAIR;       # pair (pair @sender nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair @some (big_map address nat)) (pair address address)))) : lambda (pair (pair address nat) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) (pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))) : list operation
                           EXEC;       # pair unit (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))) : list operation
                           CDR;        # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : list operation
                           SWAP;       # list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           # if self.data.balances[sp.sender] == 0: # list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           PUSH nat 0; # nat : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           DUP 3;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : nat : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           CAR;        # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : nat : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           CAR;        # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : nat : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           CAR;        # pair (big_map address nat) (big_map address nat) : nat : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           CDR;        # big_map address nat : nat : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           SENDER;     # @sender : big_map address nat : nat : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           GET;        # option nat : nat : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           IF_NONE
                             {
                               PUSH int 288; # int : nat : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               FAILWITH;   # FAILED
                             }
                             {}; # @some : nat : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           COMPARE;    # int : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           EQ;         # bool : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                           IF
                             {
                               SWAP;       # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : list operation
                               # if self.data.attached_tokens.contains(sp.sender): # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : list operation
                               DUP;        # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : list operation
                               DUG 2;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               CAR;        # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               CAR;        # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               CAR;        # pair (big_map address nat) (big_map address nat) : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               CAR;        # big_map address nat : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               SENDER;     # @sender : big_map address nat : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               MEM;        # bool : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                               IF
                                 {
                                   SWAP;       # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : list operation
                                   # sp.transfer(sp.record(attachments = sp.list([(self.data.attached_tokens[sp.sender], False)]), owner = sp.sender), sp.tez(0), sp.contract(sp.TRecord(attachments = sp.TList(sp.TPair(sp.TNat, sp.TBool)), owner = sp.TAddress).layout(("attachments", "owner")), self.data.ve_address, entry_point='attach').open_some()) # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : list operation
                                   DUP;        # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : list operation
                                   DUG 2;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   GET 7;      # address : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   CONTRACT %attach (pair (list %attachments (pair nat bool)) (address %owner)); # option (contract (pair (list %attachments (pair nat bool)) (address %owner))) : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   IF_NONE
                                     {
                                       PUSH int 79; # int : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                       FAILWITH;   # FAILED
                                     }
                                     {}; # @some : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   PUSH mutez 0; # mutez : @some : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   SENDER;     # @sender : mutez : @some : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   NIL (pair nat bool); # list (pair nat bool) : @sender : mutez : @some : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   PUSH bool False; # bool : list (pair nat bool) : @sender : mutez : @some : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   DUP 7;      # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : bool : list (pair nat bool) : @sender : mutez : @some : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   CAR;        # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : bool : list (pair nat bool) : @sender : mutez : @some : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   CAR;        # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : bool : list (pair nat bool) : @sender : mutez : @some : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   CAR;        # pair (big_map address nat) (big_map address nat) : bool : list (pair nat bool) : @sender : mutez : @some : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   CAR;        # big_map address nat : bool : list (pair nat bool) : @sender : mutez : @some : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   SENDER;     # @sender : big_map address nat : bool : list (pair nat bool) : @sender : mutez : @some : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   GET;        # option nat : bool : list (pair nat bool) : @sender : mutez : @some : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   IF_NONE
                                     {
                                       PUSH int 293; # int : bool : list (pair nat bool) : @sender : mutez : @some : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                       FAILWITH;   # FAILED
                                     }
                                     {}; # @some : bool : list (pair nat bool) : @sender : mutez : @some : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   PAIR;       # pair @some bool : list (pair nat bool) : @sender : mutez : @some : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   CONS;       # list (pair nat bool) : @sender : mutez : @some : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   PAIR;       # pair (list (pair nat bool)) @sender : mutez : @some : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   TRANSFER_TOKENS; # operation : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   CONS;       # list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                   SWAP;       # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : list operation
                                   # del self.data.attached_tokens[sp.sender] # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : list operation
                                   UNPAIR;     # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : list operation
                                   UNPAIR;     # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : list operation
                                   UNPAIR;     # pair (big_map address nat) (big_map address nat) : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : list operation
                                   UNPAIR;     # big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : list operation
                                   NONE nat;   # option nat : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : list operation
                                   SENDER;     # @sender : option nat : big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : list operation
                                   UPDATE;     # big_map address nat : big_map address nat : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : list operation
                                   PAIR;       # pair (big_map address nat) (big_map address nat) : pair (big_map address nat) nat : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : list operation
                                   PAIR;       # pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat) : pair (pair nat address) (pair nat address) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : list operation
                                   PAIR;       # pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address)) : pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)) : list operation
                                   PAIR;       # pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))) : list operation
                                   SWAP;       # list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                                 }
                                 {}; # list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                             }
                             {}; # list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                         }; # list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                     }; # list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                   NIL operation; # list operation : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                   SWAP;       # list operation : list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                   ITER
                     {
                       CONS;       # list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                     }; # list operation : pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address)))
                   PAIR;       # pair (list operation) (pair (pair (pair (pair (big_map address nat) (big_map address nat)) (pair (big_map address nat) nat)) (pair (pair nat address) (pair nat address))) (pair (pair (pair (big_map nat unit) nat) (pair nat (big_map address nat))) (pair (pair nat (big_map address nat)) (pair address address))))
                 }}; # operation : address : list operation : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            PAIR;       # pair operation address : list operation : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            # sp.operations().push(create_contract_core_factory_100.value.operation) # pair operation address : list operation : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            DUP;        # pair operation address : pair operation address : list operation : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            DUG 2;      # pair operation address : list operation : pair operation address : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            CAR;        # operation : list operation : pair operation address : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            CONS;       # list operation : pair operation address : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            SWAP;       # pair operation address : list operation : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            # sp.result(sp.record(claim_ledger = {}, epoch_bribes = {}, uid = 0, voter = self.data.voter))
            # create_contract_core_factory_103 = sp.local("create_contract_core_factory_103", create contract ...) # pair operation address : list operation : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            PUSH (pair nat address) (Pair 0 "tz1RBkXZSiQb3fS7Sg3zbFdPMBFPJUNHdcFo"); # pair nat address : pair operation address : list operation : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            EMPTY_BIG_MAP (pair nat nat) (pair address (pair (pair nat nat) nat)); # big_map (pair nat nat) (pair address (pair (pair nat nat) nat)) : pair nat address : pair operation address : list operation : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            EMPTY_BIG_MAP (pair nat nat) unit; # big_map (pair nat nat) unit : big_map (pair nat nat) (pair address (pair (pair nat nat) nat)) : pair nat address : pair operation address : list operation : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            PAIR;       # pair (big_map (pair nat nat) unit) (big_map (pair nat nat) (pair address (pair (pair nat nat) nat))) : pair nat address : pair operation address : list operation : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            PAIR;       # pair (pair (big_map (pair nat nat) unit) (big_map (pair nat nat) (pair address (pair (pair nat nat) nat)))) (pair nat address) : pair operation address : list operation : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            PUSH mutez 0; # mutez : pair (pair (big_map (pair nat nat) unit) (big_map (pair nat nat) (pair address (pair (pair nat nat) nat)))) (pair nat address) : pair operation address : list operation : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            NONE key_hash; # option key_hash : mutez : pair (pair (big_map (pair nat nat) unit) (big_map (pair nat nat) (pair address (pair (pair nat nat) nat)))) (pair nat address) : pair operation address : list operation : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            CREATE_CONTRACT
             { parameter (or (pair %add_bribe (nat %epoch) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount)))) (pair %claim (nat %token_id) (pair (address %owner) (pair (nat %epoch) (pair (nat %bribe_id) (nat %weight_share))))));
               storage   (pair (pair (big_map %claim_ledger (pair (nat %token_id) (nat %bribe_id)) unit) (big_map %epoch_bribes (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))))) (pair (nat %uid) (address %voter)));
               code
                 {
                   UNPAIR;     # @parameter : @storage
                   IF_LEFT
                     {
                       SWAP;       # @storage : @parameter%add_bribe
                       # == add_bribe ==
                       # sp.verify((params.epoch > sp.fst(sp.view("get_current_epoch", self.data.voter, sp.unit, sp.TPair(sp.TNat, sp.TTimestamp)).open_some(message = 'INVALID_VIEW'))) | ((params.epoch == sp.fst(sp.view("get_current_epoch", self.data.voter, sp.unit, sp.TPair(sp.TNat, sp.TTimestamp)).open_some(message = 'INVALID_VIEW'))) & (sp.now < sp.snd(sp.view("get_current_epoch", self.data.voter, sp.unit, sp.TPair(sp.TNat, sp.TTimestamp)).open_some(message = 'INVALID_VIEW')))), 'EPOCH_IN_THE_PAST') # @storage : @parameter%add_bribe
                       DUP;        # @storage : @storage : @parameter%add_bribe
                       DUG 2;      # @storage : @parameter%add_bribe : @storage
                       GET 4;      # address : @parameter%add_bribe : @storage
                       UNIT;       # unit : address : @parameter%add_bribe : @storage
                       VIEW "get_current_epoch" (pair nat timestamp); # option (pair nat timestamp) : @parameter%add_bribe : @storage
                       IF_NONE
                         {
                           PUSH string "INVALID_VIEW"; # string : @parameter%add_bribe : @storage
                           FAILWITH;   # FAILED
                         }
                         {}; # @some : @parameter%add_bribe : @storage
                       CAR;        # nat : @parameter%add_bribe : @storage
                       SWAP;       # @parameter%add_bribe : nat : @storage
                       DUP;        # @parameter%add_bribe : @parameter%add_bribe : nat : @storage
                       DUG 2;      # @parameter%add_bribe : nat : @parameter%add_bribe : @storage
                       CAR;        # nat : nat : @parameter%add_bribe : @storage
                       COMPARE;    # int : @parameter%add_bribe : @storage
                       GT;         # bool : @parameter%add_bribe : @storage
                       IF
                         {
                           PUSH bool True; # bool : @parameter%add_bribe : @storage
                         }
                         {
                           SWAP;       # @storage : @parameter%add_bribe
                           DUP;        # @storage : @storage : @parameter%add_bribe
                           DUG 2;      # @storage : @parameter%add_bribe : @storage
                           GET 4;      # address : @parameter%add_bribe : @storage
                           UNIT;       # unit : address : @parameter%add_bribe : @storage
                           VIEW "get_current_epoch" (pair nat timestamp); # option (pair nat timestamp) : @parameter%add_bribe : @storage
                           IF_NONE
                             {
                               PUSH string "INVALID_VIEW"; # string : @parameter%add_bribe : @storage
                               FAILWITH;   # FAILED
                             }
                             {}; # @some : @parameter%add_bribe : @storage
                           CAR;        # nat : @parameter%add_bribe : @storage
                           SWAP;       # @parameter%add_bribe : nat : @storage
                           DUP;        # @parameter%add_bribe : @parameter%add_bribe : nat : @storage
                           DUG 2;      # @parameter%add_bribe : nat : @parameter%add_bribe : @storage
                           CAR;        # nat : nat : @parameter%add_bribe : @storage
                           COMPARE;    # int : @parameter%add_bribe : @storage
                           EQ;         # bool : @parameter%add_bribe : @storage
                           IF
                             {
                               SWAP;       # @storage : @parameter%add_bribe
                               DUP;        # @storage : @storage : @parameter%add_bribe
                               DUG 2;      # @storage : @parameter%add_bribe : @storage
                               GET 4;      # address : @parameter%add_bribe : @storage
                               UNIT;       # unit : address : @parameter%add_bribe : @storage
                               VIEW "get_current_epoch" (pair nat timestamp); # option (pair nat timestamp) : @parameter%add_bribe : @storage
                               IF_NONE
                                 {
                                   PUSH string "INVALID_VIEW"; # string : @parameter%add_bribe : @storage
                                   FAILWITH;   # FAILED
                                 }
                                 {}; # @some : @parameter%add_bribe : @storage
                               CDR;        # timestamp : @parameter%add_bribe : @storage
                               NOW;        # @now : timestamp : @parameter%add_bribe : @storage
                               COMPARE;    # int : @parameter%add_bribe : @storage
                               LT;         # bool : @parameter%add_bribe : @storage
                             }
                             {
                               PUSH bool False; # bool : @parameter%add_bribe : @storage
                             }; # bool : @parameter%add_bribe : @storage
                         }; # bool : @parameter%add_bribe : @storage
                       IF
                         {}
                         {
                           PUSH string "EPOCH_IN_THE_PAST"; # string : @parameter%add_bribe : @storage
                           FAILWITH;   # FAILED
                         }; # @parameter%add_bribe : @storage
                       SWAP;       # @storage : @parameter%add_bribe
                       # self.data.uid += 1 # @storage : @parameter%add_bribe
                       DUP;        # @storage : @storage : @parameter%add_bribe
                       GET 3;      # nat : @storage : @parameter%add_bribe
                       PUSH nat 1; # nat : nat : @storage : @parameter%add_bribe
                       ADD;        # nat : @storage : @parameter%add_bribe
                       UPDATE 3;   # @storage : @parameter%add_bribe
                       # self.data.epoch_bribes[sp.record(epoch = params.epoch, bribe_id = self.data.uid)] = sp.record(token_address = params.token_address, type = params.type, amount = params.amount) # @storage : @parameter%add_bribe
                       DUP;        # @storage : @storage : @parameter%add_bribe
                       DUG 2;      # @storage : @parameter%add_bribe : @storage
                       UNPAIR;     # pair (big_map %claim_ledger (pair (nat %token_id) (nat %bribe_id)) unit) (big_map %epoch_bribes (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount)))) : pair (nat %uid) (address %voter) : @parameter%add_bribe : @storage
                       UNPAIR;     # big_map (pair (nat %token_id) (nat %bribe_id)) unit : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : pair (nat %uid) (address %voter) : @parameter%add_bribe : @storage
                       SWAP;       # big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : big_map (pair (nat %token_id) (nat %bribe_id)) unit : pair (nat %uid) (address %voter) : @parameter%add_bribe : @storage
                       DIG 3;      # @parameter%add_bribe : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : big_map (pair (nat %token_id) (nat %bribe_id)) unit : pair (nat %uid) (address %voter) : @storage
                       DUP;        # @parameter%add_bribe : @parameter%add_bribe : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : big_map (pair (nat %token_id) (nat %bribe_id)) unit : pair (nat %uid) (address %voter) : @storage
                       GET 6;      # nat : @parameter%add_bribe : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : big_map (pair (nat %token_id) (nat %bribe_id)) unit : pair (nat %uid) (address %voter) : @storage
                       SWAP;       # @parameter%add_bribe : nat : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : big_map (pair (nat %token_id) (nat %bribe_id)) unit : pair (nat %uid) (address %voter) : @storage
                       DUP;        # @parameter%add_bribe : @parameter%add_bribe : nat : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : big_map (pair (nat %token_id) (nat %bribe_id)) unit : pair (nat %uid) (address %voter) : @storage
                       GET 5;      # pair nat nat : @parameter%add_bribe : nat : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : big_map (pair (nat %token_id) (nat %bribe_id)) unit : pair (nat %uid) (address %voter) : @storage
                       SWAP;       # @parameter%add_bribe : pair nat nat : nat : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : big_map (pair (nat %token_id) (nat %bribe_id)) unit : pair (nat %uid) (address %voter) : @storage
                       DUP;        # @parameter%add_bribe : @parameter%add_bribe : pair nat nat : nat : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : big_map (pair (nat %token_id) (nat %bribe_id)) unit : pair (nat %uid) (address %voter) : @storage
                       DUG 6;      # @parameter%add_bribe : pair nat nat : nat : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : big_map (pair (nat %token_id) (nat %bribe_id)) unit : pair (nat %uid) (address %voter) : @parameter%add_bribe : @storage
                       GET 3;      # address : pair nat nat : nat : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : big_map (pair (nat %token_id) (nat %bribe_id)) unit : pair (nat %uid) (address %voter) : @parameter%add_bribe : @storage
                       PAIR 3;     # pair address (pair (pair nat nat) nat) : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : big_map (pair (nat %token_id) (nat %bribe_id)) unit : pair (nat %uid) (address %voter) : @parameter%add_bribe : @storage
                       SOME;       # option (pair address (pair (pair nat nat) nat)) : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : big_map (pair (nat %token_id) (nat %bribe_id)) unit : pair (nat %uid) (address %voter) : @parameter%add_bribe : @storage
                       DIG 5;      # @storage : option (pair address (pair (pair nat nat) nat)) : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : big_map (pair (nat %token_id) (nat %bribe_id)) unit : pair (nat %uid) (address %voter) : @parameter%add_bribe
                       GET 3;      # nat : option (pair address (pair (pair nat nat) nat)) : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : big_map (pair (nat %token_id) (nat %bribe_id)) unit : pair (nat %uid) (address %voter) : @parameter%add_bribe
                       DUP 6;      # @parameter%add_bribe : nat : option (pair address (pair (pair nat nat) nat)) : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : big_map (pair (nat %token_id) (nat %bribe_id)) unit : pair (nat %uid) (address %voter) : @parameter%add_bribe
                       CAR;        # nat : nat : option (pair address (pair (pair nat nat) nat)) : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : big_map (pair (nat %token_id) (nat %bribe_id)) unit : pair (nat %uid) (address %voter) : @parameter%add_bribe
                       PAIR;       # pair nat nat : option (pair address (pair (pair nat nat) nat)) : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : big_map (pair (nat %token_id) (nat %bribe_id)) unit : pair (nat %uid) (address %voter) : @parameter%add_bribe
                       UPDATE;     # big_map (pair nat nat) (pair address (pair (pair nat nat) nat)) : big_map (pair (nat %token_id) (nat %bribe_id)) unit : pair (nat %uid) (address %voter) : @parameter%add_bribe
                       SWAP;       # big_map (pair (nat %token_id) (nat %bribe_id)) unit : big_map (pair nat nat) (pair address (pair (pair nat nat) nat)) : pair (nat %uid) (address %voter) : @parameter%add_bribe
                       PAIR;       # pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (pair nat nat) nat))) : pair (nat %uid) (address %voter) : @parameter%add_bribe
                       PAIR;       # pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (pair nat nat) nat)))) (pair (nat %uid) (address %voter)) : @parameter%add_bribe
                       SWAP;       # @parameter%add_bribe : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (pair nat nat) nat)))) (pair (nat %uid) (address %voter))
                       # if sp.fst(params.type) == 0: # @parameter%add_bribe : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (pair nat nat) nat)))) (pair (nat %uid) (address %voter))
                       DUP;        # @parameter%add_bribe : @parameter%add_bribe : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (pair nat nat) nat)))) (pair (nat %uid) (address %voter))
                       GET 5;      # pair nat nat : @parameter%add_bribe : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (pair nat nat) nat)))) (pair (nat %uid) (address %voter))
                       CAR;        # nat : @parameter%add_bribe : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (pair nat nat) nat)))) (pair (nat %uid) (address %voter))
                       PUSH nat 0; # nat : nat : @parameter%add_bribe : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (pair nat nat) nat)))) (pair (nat %uid) (address %voter))
                       COMPARE;    # int : @parameter%add_bribe : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (pair nat nat) nat)))) (pair (nat %uid) (address %voter))
                       EQ;         # bool : @parameter%add_bribe : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (pair nat nat) nat)))) (pair (nat %uid) (address %voter))
                       IF
                         {
                           # sp.transfer(sp.record(from_ = sp.sender, to_ = sp.self_address, value = params.amount), sp.tez(0), sp.contract(sp.TRecord(from_ = sp.TAddress, to_ = sp.TAddress, value = sp.TNat).layout(("from_ as from", ("to_ as to", "value"))), params.token_address, entry_point='transfer').open_some()) # @parameter%add_bribe : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (pair nat nat) nat)))) (pair (nat %uid) (address %voter))
                           DUP;        # @parameter%add_bribe : @parameter%add_bribe : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (pair nat nat) nat)))) (pair (nat %uid) (address %voter))
                           GET 3;      # address : @parameter%add_bribe : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (pair nat nat) nat)))) (pair (nat %uid) (address %voter))
                           CONTRACT %transfer (pair (address %from) (pair (address %to) (nat %value))); # option (contract (pair (address %from) (pair (address %to) (nat %value)))) : @parameter%add_bribe : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (pair nat nat) nat)))) (pair (nat %uid) (address %voter))
                           IF_NONE
                             {
                               PUSH int 15; # int : @parameter%add_bribe : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (pair nat nat) nat)))) (pair (nat %uid) (address %voter))
                               FAILWITH;   # FAILED
                             }
                             {}; # @some : @parameter%add_bribe : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (pair nat nat) nat)))) (pair (nat %uid) (address %voter))
                           NIL operation; # list operation : @some : @parameter%add_bribe : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (pair nat nat) nat)))) (pair (nat %uid) (address %voter))
                           SWAP;       # @some : list operation : @parameter%add_bribe : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (pair nat nat) nat)))) (pair (nat %uid) (address %voter))
                           PUSH mutez 0; # mutez : @some : list operation : @parameter%add_bribe : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (pair nat nat) nat)))) (pair (nat %uid) (address %voter))
                           DIG 3;      # @parameter%add_bribe : mutez : @some : list operation : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (pair nat nat) nat)))) (pair (nat %uid) (address %voter))
                           GET 6;      # nat : mutez : @some : list operation : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (pair nat nat) nat)))) (pair (nat %uid) (address %voter))
                           SELF_ADDRESS; # @self : nat : mutez : @some : list operation : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (pair nat nat) nat)))) (pair (nat %uid) (address %voter))
                           SENDER;     # @sender : @self : nat : mutez : @some : list operation : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (pair nat nat) nat)))) (pair (nat %uid) (address %voter))
                           PAIR 3;     # pair @sender (pair @self nat) : mutez : @some : list operation : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (pair nat nat) nat)))) (pair (nat %uid) (address %voter))
                           TRANSFER_TOKENS; # operation : list operation : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (pair nat nat) nat)))) (pair (nat %uid) (address %voter))
                           CONS;       # list operation : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (pair nat nat) nat)))) (pair (nat %uid) (address %voter))
                         }
                         {
                           # sp.transfer(sp.list([sp.record(from_ = sp.sender, txs = sp.list([sp.record(to_ = sp.self_address, token_id = sp.snd(params.type), amount = params.amount)]))]), sp.tez(0), sp.contract(sp.TList(sp.TRecord(from_ = sp.TAddress, txs = sp.TList(sp.TRecord(amount = sp.TNat, to_ = sp.TAddress, token_id = sp.TNat).layout(("to_", ("token_id", "amount"))))).layout(("from_", "txs"))), params.token_address, entry_point='transfer').open_some()) # @parameter%add_bribe : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (pair nat nat) nat)))) (pair (nat %uid) (address %voter))
                           DUP;        # @parameter%add_bribe : @parameter%add_bribe : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (pair nat nat) nat)))) (pair (nat %uid) (address %voter))
                           GET 3;      # address : @parameter%add_bribe : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (pair nat nat) nat)))) (pair (nat %uid) (address %voter))
                           CONTRACT %transfer (list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))); # option (contract (list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))))) : @parameter%add_bribe : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (pair nat nat) nat)))) (pair (nat %uid) (address %voter))
                           IF_NONE
                             {
                               PUSH int 51; # int : @parameter%add_bribe : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (pair nat nat) nat)))) (pair (nat %uid) (address %voter))
                               FAILWITH;   # FAILED
                             }
                             {}; # @some : @parameter%add_bribe : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (pair nat nat) nat)))) (pair (nat %uid) (address %voter))
                           NIL operation; # list operation : @some : @parameter%add_bribe : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (pair nat nat) nat)))) (pair (nat %uid) (address %voter))
                           SWAP;       # @some : list operation : @parameter%add_bribe : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (pair nat nat) nat)))) (pair (nat %uid) (address %voter))
                           PUSH mutez 0; # mutez : @some : list operation : @parameter%add_bribe : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (pair nat nat) nat)))) (pair (nat %uid) (address %voter))
                           NIL (pair address (list (pair address (pair nat nat)))); # list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%add_bribe : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (pair nat nat) nat)))) (pair (nat %uid) (address %voter))
                           NIL (pair address (pair nat nat)); # list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%add_bribe : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (pair nat nat) nat)))) (pair (nat %uid) (address %voter))
                           DIG 5;      # @parameter%add_bribe : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (pair nat nat) nat)))) (pair (nat %uid) (address %voter))
                           DUP;        # @parameter%add_bribe : @parameter%add_bribe : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (pair nat nat) nat)))) (pair (nat %uid) (address %voter))
                           GET 6;      # nat : @parameter%add_bribe : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (pair nat nat) nat)))) (pair (nat %uid) (address %voter))
                           SWAP;       # @parameter%add_bribe : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (pair nat nat) nat)))) (pair (nat %uid) (address %voter))
                           GET 5;      # pair nat nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (pair nat nat) nat)))) (pair (nat %uid) (address %voter))
                           CDR;        # nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (pair nat nat) nat)))) (pair (nat %uid) (address %voter))
                           SELF_ADDRESS; # @self : nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (pair nat nat) nat)))) (pair (nat %uid) (address %voter))
                           PAIR 3;     # pair @self (pair nat nat) : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (pair nat nat) nat)))) (pair (nat %uid) (address %voter))
                           CONS;       # list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (pair nat nat) nat)))) (pair (nat %uid) (address %voter))
                           SENDER;     # @sender : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (pair nat nat) nat)))) (pair (nat %uid) (address %voter))
                           PAIR;       # pair @sender (list (pair address (pair nat nat))) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (pair nat nat) nat)))) (pair (nat %uid) (address %voter))
                           CONS;       # list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (pair nat nat) nat)))) (pair (nat %uid) (address %voter))
                           TRANSFER_TOKENS; # operation : list operation : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (pair nat nat) nat)))) (pair (nat %uid) (address %voter))
                           CONS;       # list operation : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (pair nat nat) nat)))) (pair (nat %uid) (address %voter))
                         }; # list operation : pair (pair (big_map (pair (nat %token_id) (nat %bribe_id)) unit) (big_map (pair nat nat) (pair address (pair (pair nat nat) nat)))) (pair (nat %uid) (address %voter))
                     }
                     {
                       SWAP;       # @storage : @parameter%claim
                       # == claim ==
                       # sp.verify(sp.sender == self.data.voter, 'NOT_AUTHORISED') # @storage : @parameter%claim
                       DUP;        # @storage : @storage : @parameter%claim
                       DUG 2;      # @storage : @parameter%claim : @storage
                       GET 4;      # address : @parameter%claim : @storage
                       SENDER;     # @sender : address : @parameter%claim : @storage
                       COMPARE;    # int : @parameter%claim : @storage
                       EQ;         # bool : @parameter%claim : @storage
                       IF
                         {}
                         {
                           PUSH string "NOT_AUTHORISED"; # string : @parameter%claim : @storage
                           FAILWITH;   # FAILED
                         }; # @parameter%claim : @storage
                       SWAP;       # @storage : @parameter%claim
                       # sp.verify(self.data.epoch_bribes.contains(sp.record(epoch = params.epoch, bribe_id = params.bribe_id)), 'INVALID_BRIBE_ID_OR_EPOCH') # @storage : @parameter%claim
                       DUP;        # @storage : @storage : @parameter%claim
                       DUG 2;      # @storage : @parameter%claim : @storage
                       CAR;        # pair (big_map %claim_ledger (pair (nat %token_id) (nat %bribe_id)) unit) (big_map %epoch_bribes (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount)))) : @parameter%claim : @storage
                       CDR;        # big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : @parameter%claim : @storage
                       SWAP;       # @parameter%claim : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : @storage
                       DUP;        # @parameter%claim : @parameter%claim : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : @storage
                       GET 7;      # nat : @parameter%claim : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : @storage
                       SWAP;       # @parameter%claim : nat : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : @storage
                       DUP;        # @parameter%claim : @parameter%claim : nat : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : @storage
                       DUG 3;      # @parameter%claim : nat : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : @parameter%claim : @storage
                       GET 5;      # nat : nat : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : @parameter%claim : @storage
                       PAIR;       # pair nat nat : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : @parameter%claim : @storage
                       MEM;        # bool : @parameter%claim : @storage
                       IF
                         {}
                         {
                           PUSH string "INVALID_BRIBE_ID_OR_EPOCH"; # string : @parameter%claim : @storage
                           FAILWITH;   # FAILED
                         }; # @parameter%claim : @storage
                       SWAP;       # @storage : @parameter%claim
                       # sp.verify(~ (self.data.claim_ledger.contains(sp.record(token_id = params.token_id, bribe_id = params.bribe_id))), 'VOTER_HAS_ALREADY_CLAIMED_BRIBE') # @storage : @parameter%claim
                       DUP;        # @storage : @storage : @parameter%claim
                       DUG 2;      # @storage : @parameter%claim : @storage
                       CAR;        # pair (big_map %claim_ledger (pair (nat %token_id) (nat %bribe_id)) unit) (big_map %epoch_bribes (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount)))) : @parameter%claim : @storage
                       CAR;        # big_map (pair (nat %token_id) (nat %bribe_id)) unit : @parameter%claim : @storage
                       SWAP;       # @parameter%claim : big_map (pair (nat %token_id) (nat %bribe_id)) unit : @storage
                       DUP;        # @parameter%claim : @parameter%claim : big_map (pair (nat %token_id) (nat %bribe_id)) unit : @storage
                       GET 7;      # nat : @parameter%claim : big_map (pair (nat %token_id) (nat %bribe_id)) unit : @storage
                       SWAP;       # @parameter%claim : nat : big_map (pair (nat %token_id) (nat %bribe_id)) unit : @storage
                       DUP;        # @parameter%claim : @parameter%claim : nat : big_map (pair (nat %token_id) (nat %bribe_id)) unit : @storage
                       DUG 3;      # @parameter%claim : nat : big_map (pair (nat %token_id) (nat %bribe_id)) unit : @parameter%claim : @storage
                       CAR;        # nat : nat : big_map (pair (nat %token_id) (nat %bribe_id)) unit : @parameter%claim : @storage
                       PAIR;       # pair nat nat : big_map (pair (nat %token_id) (nat %bribe_id)) unit : @parameter%claim : @storage
                       MEM;        # bool : @parameter%claim : @storage
                       IF
                         {
                           PUSH string "VOTER_HAS_ALREADY_CLAIMED_BRIBE"; # string : @parameter%claim : @storage
                           FAILWITH;   # FAILED
                         }
                         {}; # @parameter%claim : @storage
                       # if sp.fst(self.data.epoch_bribes[sp.record(epoch = params.epoch, bribe_id = params.bribe_id)].type) == 0: # @parameter%claim : @storage
                       PUSH nat 0; # nat : @parameter%claim : @storage
                       DUP 3;      # @storage : nat : @parameter%claim : @storage
                       CAR;        # pair (big_map %claim_ledger (pair (nat %token_id) (nat %bribe_id)) unit) (big_map %epoch_bribes (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount)))) : nat : @parameter%claim : @storage
                       CDR;        # big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : nat : @parameter%claim : @storage
                       DIG 2;      # @parameter%claim : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : nat : @storage
                       DUP;        # @parameter%claim : @parameter%claim : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : nat : @storage
                       GET 7;      # nat : @parameter%claim : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : nat : @storage
                       SWAP;       # @parameter%claim : nat : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : nat : @storage
                       DUP;        # @parameter%claim : @parameter%claim : nat : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : nat : @storage
                       DUG 4;      # @parameter%claim : nat : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : nat : @parameter%claim : @storage
                       GET 5;      # nat : nat : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : nat : @parameter%claim : @storage
                       PAIR;       # pair nat nat : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : nat : @parameter%claim : @storage
                       GET;        # option (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : nat : @parameter%claim : @storage
                       IF_NONE
                         {
                           PUSH int 169; # int : nat : @parameter%claim : @storage
                           FAILWITH;   # FAILED
                         }
                         {}; # @some : nat : @parameter%claim : @storage
                       GET 3;      # pair nat nat : nat : @parameter%claim : @storage
                       CAR;        # nat : nat : @parameter%claim : @storage
                       COMPARE;    # int : @parameter%claim : @storage
                       EQ;         # bool : @parameter%claim : @storage
                       IF
                         {
                           # sp.transfer(sp.record(from_ = sp.self_address, to_ = params.owner, value = (self.data.epoch_bribes[sp.record(epoch = params.epoch, bribe_id = params.bribe_id)].amount * params.weight_share) // 1000000000000000000), sp.tez(0), sp.contract(sp.TRecord(from_ = sp.TAddress, to_ = sp.TAddress, value = sp.TNat).layout(("from_ as from", ("to_ as to", "value"))), self.data.epoch_bribes[sp.record(epoch = params.epoch, bribe_id = params.bribe_id)].token_address, entry_point='transfer').open_some()) # @parameter%claim : @storage
                           NIL operation; # list operation : @parameter%claim : @storage
                           DUP 3;      # @storage : list operation : @parameter%claim : @storage
                           CAR;        # pair (big_map %claim_ledger (pair (nat %token_id) (nat %bribe_id)) unit) (big_map %epoch_bribes (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount)))) : list operation : @parameter%claim : @storage
                           CDR;        # big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : list operation : @parameter%claim : @storage
                           DIG 2;      # @parameter%claim : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : list operation : @storage
                           DUP;        # @parameter%claim : @parameter%claim : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : list operation : @storage
                           GET 7;      # nat : @parameter%claim : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : list operation : @storage
                           SWAP;       # @parameter%claim : nat : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : list operation : @storage
                           DUP;        # @parameter%claim : @parameter%claim : nat : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : list operation : @storage
                           DUG 4;      # @parameter%claim : nat : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : list operation : @parameter%claim : @storage
                           GET 5;      # nat : nat : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : list operation : @parameter%claim : @storage
                           PAIR;       # pair nat nat : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : list operation : @parameter%claim : @storage
                           GET;        # option (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : list operation : @parameter%claim : @storage
                           IF_NONE
                             {
                               PUSH int 169; # int : list operation : @parameter%claim : @storage
                               FAILWITH;   # FAILED
                             }
                             {}; # @some : list operation : @parameter%claim : @storage
                           CAR;        # address : list operation : @parameter%claim : @storage
                           CONTRACT %transfer (pair (address %from) (pair (address %to) (nat %value))); # option (contract (pair (address %from) (pair (address %to) (nat %value)))) : list operation : @parameter%claim : @storage
                           IF_NONE
                             {
                               PUSH int 15; # int : list operation : @parameter%claim : @storage
                               FAILWITH;   # FAILED
                             }
                             {}; # @some : list operation : @parameter%claim : @storage
                           PUSH mutez 0; # mutez : @some : list operation : @parameter%claim : @storage
                           PUSH nat 1000000000000000000; # nat : mutez : @some : list operation : @parameter%claim : @storage
                           DUP 5;      # @parameter%claim : nat : mutez : @some : list operation : @parameter%claim : @storage
                           GET 8;      # nat : nat : mutez : @some : list operation : @parameter%claim : @storage
                           DUP 7;      # @storage : nat : nat : mutez : @some : list operation : @parameter%claim : @storage
                           CAR;        # pair (big_map %claim_ledger (pair (nat %token_id) (nat %bribe_id)) unit) (big_map %epoch_bribes (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount)))) : nat : nat : mutez : @some : list operation : @parameter%claim : @storage
                           CDR;        # big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : nat : nat : mutez : @some : list operation : @parameter%claim : @storage
                           DIG 6;      # @parameter%claim : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : nat : nat : mutez : @some : list operation : @storage
                           DUP;        # @parameter%claim : @parameter%claim : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : nat : nat : mutez : @some : list operation : @storage
                           GET 7;      # nat : @parameter%claim : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : nat : nat : mutez : @some : list operation : @storage
                           SWAP;       # @parameter%claim : nat : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : nat : nat : mutez : @some : list operation : @storage
                           DUP;        # @parameter%claim : @parameter%claim : nat : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : nat : nat : mutez : @some : list operation : @storage
                           DUG 8;      # @parameter%claim : nat : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : nat : nat : mutez : @some : list operation : @parameter%claim : @storage
                           GET 5;      # nat : nat : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : nat : nat : mutez : @some : list operation : @parameter%claim : @storage
                           PAIR;       # pair nat nat : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : nat : nat : mutez : @some : list operation : @parameter%claim : @storage
                           GET;        # option (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : nat : nat : mutez : @some : list operation : @parameter%claim : @storage
                           IF_NONE
                             {
                               PUSH int 169; # int : nat : nat : mutez : @some : list operation : @parameter%claim : @storage
                               FAILWITH;   # FAILED
                             }
                             {}; # @some : nat : nat : mutez : @some : list operation : @parameter%claim : @storage
                           GET 4;      # nat : nat : nat : mutez : @some : list operation : @parameter%claim : @storage
                           MUL;        # nat : nat : mutez : @some : list operation : @parameter%claim : @storage
                           EDIV;       # option (pair nat nat) : mutez : @some : list operation : @parameter%claim : @storage
                           IF_NONE
                             {
                               PUSH int 171; # int : mutez : @some : list operation : @parameter%claim : @storage
                               FAILWITH;   # FAILED
                             }
                             {
                               CAR;        # nat : mutez : @some : list operation : @parameter%claim : @storage
                             }; # nat : mutez : @some : list operation : @parameter%claim : @storage
                           DUP 5;      # @parameter%claim : nat : mutez : @some : list operation : @parameter%claim : @storage
                           GET 3;      # address : nat : mutez : @some : list operation : @parameter%claim : @storage
                           SELF_ADDRESS; # @self : address : nat : mutez : @some : list operation : @parameter%claim : @storage
                           PAIR 3;     # pair @self (pair address nat) : mutez : @some : list operation : @parameter%claim : @storage
                           TRANSFER_TOKENS; # operation : list operation : @parameter%claim : @storage
                           CONS;       # list operation : @parameter%claim : @storage
                         }
                         {
                           # sp.transfer(sp.list([sp.record(from_ = sp.self_address, txs = sp.list([sp.record(to_ = params.owner, token_id = sp.snd(self.data.epoch_bribes[sp.record(epoch = params.epoch, bribe_id = params.bribe_id)].type), amount = (self.data.epoch_bribes[sp.record(epoch = params.epoch, bribe_id = params.bribe_id)].amount * params.weight_share) // 1000000000000000000)]))]), sp.tez(0), sp.contract(sp.TList(sp.TRecord(from_ = sp.TAddress, txs = sp.TList(sp.TRecord(amount = sp.TNat, to_ = sp.TAddress, token_id = sp.TNat).layout(("to_", ("token_id", "amount"))))).layout(("from_", "txs"))), self.data.epoch_bribes[sp.record(epoch = params.epoch, bribe_id = params.bribe_id)].token_address, entry_point='transfer').open_some()) # @parameter%claim : @storage
                           NIL operation; # list operation : @parameter%claim : @storage
                           DUP 3;      # @storage : list operation : @parameter%claim : @storage
                           CAR;        # pair (big_map %claim_ledger (pair (nat %token_id) (nat %bribe_id)) unit) (big_map %epoch_bribes (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount)))) : list operation : @parameter%claim : @storage
                           CDR;        # big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : list operation : @parameter%claim : @storage
                           DIG 2;      # @parameter%claim : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : list operation : @storage
                           DUP;        # @parameter%claim : @parameter%claim : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : list operation : @storage
                           GET 7;      # nat : @parameter%claim : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : list operation : @storage
                           SWAP;       # @parameter%claim : nat : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : list operation : @storage
                           DUP;        # @parameter%claim : @parameter%claim : nat : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : list operation : @storage
                           DUG 4;      # @parameter%claim : nat : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : list operation : @parameter%claim : @storage
                           GET 5;      # nat : nat : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : list operation : @parameter%claim : @storage
                           PAIR;       # pair nat nat : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : list operation : @parameter%claim : @storage
                           GET;        # option (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : list operation : @parameter%claim : @storage
                           IF_NONE
                             {
                               PUSH int 169; # int : list operation : @parameter%claim : @storage
                               FAILWITH;   # FAILED
                             }
                             {}; # @some : list operation : @parameter%claim : @storage
                           CAR;        # address : list operation : @parameter%claim : @storage
                           CONTRACT %transfer (list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))); # option (contract (list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))))) : list operation : @parameter%claim : @storage
                           IF_NONE
                             {
                               PUSH int 51; # int : list operation : @parameter%claim : @storage
                               FAILWITH;   # FAILED
                             }
                             {}; # @some : list operation : @parameter%claim : @storage
                           PUSH mutez 0; # mutez : @some : list operation : @parameter%claim : @storage
                           NIL (pair address (list (pair address (pair nat nat)))); # list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%claim : @storage
                           NIL (pair address (pair nat nat)); # list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%claim : @storage
                           PUSH nat 1000000000000000000; # nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%claim : @storage
                           DUP 7;      # @parameter%claim : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%claim : @storage
                           GET 8;      # nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%claim : @storage
                           DUP 9;      # @storage : nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%claim : @storage
                           CAR;        # pair (big_map %claim_ledger (pair (nat %token_id) (nat %bribe_id)) unit) (big_map %epoch_bribes (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount)))) : nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%claim : @storage
                           CDR;        # big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%claim : @storage
                           DIG 8;      # @parameter%claim : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @storage
                           DUP;        # @parameter%claim : @parameter%claim : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @storage
                           GET 7;      # nat : @parameter%claim : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @storage
                           SWAP;       # @parameter%claim : nat : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @storage
                           DUP;        # @parameter%claim : @parameter%claim : nat : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @storage
                           DUG 10;     # @parameter%claim : nat : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%claim : @storage
                           GET 5;      # nat : nat : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%claim : @storage
                           PAIR;       # pair nat nat : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%claim : @storage
                           GET;        # option (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%claim : @storage
                           IF_NONE
                             {
                               PUSH int 169; # int : nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%claim : @storage
                               FAILWITH;   # FAILED
                             }
                             {}; # @some : nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%claim : @storage
                           GET 4;      # nat : nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%claim : @storage
                           MUL;        # nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%claim : @storage
                           EDIV;       # option (pair nat nat) : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%claim : @storage
                           IF_NONE
                             {
                               PUSH int 171; # int : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%claim : @storage
                               FAILWITH;   # FAILED
                             }
                             {
                               CAR;        # nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%claim : @storage
                             }; # nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%claim : @storage
                           DUP 8;      # @storage : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%claim : @storage
                           CAR;        # pair (big_map %claim_ledger (pair (nat %token_id) (nat %bribe_id)) unit) (big_map %epoch_bribes (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount)))) : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%claim : @storage
                           CDR;        # big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%claim : @storage
                           DIG 7;      # @parameter%claim : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @storage
                           DUP;        # @parameter%claim : @parameter%claim : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @storage
                           GET 7;      # nat : @parameter%claim : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @storage
                           SWAP;       # @parameter%claim : nat : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @storage
                           DUP;        # @parameter%claim : @parameter%claim : nat : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @storage
                           DUG 9;      # @parameter%claim : nat : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%claim : @storage
                           GET 5;      # nat : nat : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%claim : @storage
                           PAIR;       # pair nat nat : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%claim : @storage
                           GET;        # option (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%claim : @storage
                           IF_NONE
                             {
                               PUSH int 169; # int : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%claim : @storage
                               FAILWITH;   # FAILED
                             }
                             {}; # @some : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%claim : @storage
                           GET 3;      # pair nat nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%claim : @storage
                           CDR;        # nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%claim : @storage
                           DUP 8;      # @parameter%claim : nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%claim : @storage
                           GET 3;      # address : nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%claim : @storage
                           PAIR 3;     # pair address (pair nat nat) : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%claim : @storage
                           CONS;       # list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%claim : @storage
                           SELF_ADDRESS; # @self : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%claim : @storage
                           PAIR;       # pair @self (list (pair address (pair nat nat))) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%claim : @storage
                           CONS;       # list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%claim : @storage
                           TRANSFER_TOKENS; # operation : list operation : @parameter%claim : @storage
                           CONS;       # list operation : @parameter%claim : @storage
                         }; # list operation : @parameter%claim : @storage
                       # self.data.claim_ledger[sp.record(token_id = params.token_id, bribe_id = params.bribe_id)] = sp.unit # list operation : @parameter%claim : @storage
                       DIG 2;      # @storage : list operation : @parameter%claim
                       UNPAIR;     # pair (big_map %claim_ledger (pair (nat %token_id) (nat %bribe_id)) unit) (big_map %epoch_bribes (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount)))) : pair (nat %uid) (address %voter) : list operation : @parameter%claim
                       UNPAIR;     # big_map (pair (nat %token_id) (nat %bribe_id)) unit : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : pair (nat %uid) (address %voter) : list operation : @parameter%claim
                       PUSH (option unit) (Some Unit); # option unit : big_map (pair (nat %token_id) (nat %bribe_id)) unit : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : pair (nat %uid) (address %voter) : list operation : @parameter%claim
                       DIG 5;      # @parameter%claim : option unit : big_map (pair (nat %token_id) (nat %bribe_id)) unit : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : pair (nat %uid) (address %voter) : list operation
                       DUP;        # @parameter%claim : @parameter%claim : option unit : big_map (pair (nat %token_id) (nat %bribe_id)) unit : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : pair (nat %uid) (address %voter) : list operation
                       GET 7;      # nat : @parameter%claim : option unit : big_map (pair (nat %token_id) (nat %bribe_id)) unit : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : pair (nat %uid) (address %voter) : list operation
                       SWAP;       # @parameter%claim : nat : option unit : big_map (pair (nat %token_id) (nat %bribe_id)) unit : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : pair (nat %uid) (address %voter) : list operation
                       CAR;        # nat : nat : option unit : big_map (pair (nat %token_id) (nat %bribe_id)) unit : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : pair (nat %uid) (address %voter) : list operation
                       PAIR;       # pair nat nat : option unit : big_map (pair (nat %token_id) (nat %bribe_id)) unit : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : pair (nat %uid) (address %voter) : list operation
                       UPDATE;     # big_map (pair nat nat) unit : big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))) : pair (nat %uid) (address %voter) : list operation
                       PAIR;       # pair (big_map (pair nat nat) unit) (big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount)))) : pair (nat %uid) (address %voter) : list operation
                       PAIR;       # pair (pair (big_map (pair nat nat) unit) (big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))))) (pair (nat %uid) (address %voter)) : list operation
                       SWAP;       # list operation : pair (pair (big_map (pair nat nat) unit) (big_map (pair (nat %epoch) (nat %bribe_id)) (pair (address %token_address) (pair (pair %type nat nat) (nat %amount))))) (pair (nat %uid) (address %voter))
                     }; # list operation : pair (pair (big_map (pair nat nat) unit) (big_map (pair nat nat) (pair address (pair (pair nat nat) nat)))) (pair (nat %uid) (address %voter))
                   PAIR;       # pair (list operation) (pair (pair (big_map (pair nat nat) unit) (big_map (pair nat nat) (pair address (pair (pair nat nat) nat)))) (pair (nat %uid) (address %voter)))
                 }}; # operation : address : pair operation address : list operation : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            PAIR;       # pair operation address : pair operation address : list operation : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            # sp.operations().push(create_contract_core_factory_103.value.operation) # pair operation address : pair operation address : list operation : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            DIG 2;      # list operation : pair operation address : pair operation address : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            SWAP;       # pair operation address : list operation : pair operation address : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            DUP;        # pair operation address : pair operation address : list operation : pair operation address : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            DUG 2;      # pair operation address : list operation : pair operation address : pair operation address : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            CAR;        # operation : list operation : pair operation address : pair operation address : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            CONS;       # list operation : pair operation address : pair operation address : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            # sp.transfer(sp.record(amm = params.amm, gauge = create_contract_core_factory_100.value.address, bribe = create_contract_core_factory_103.value.address), sp.tez(0), sp.contract(sp.TRecord(amm = sp.TAddress, bribe = sp.TAddress, gauge = sp.TAddress).layout(("amm", ("gauge", "bribe"))), self.data.voter, entry_point='add_amm').open_some()) # list operation : pair operation address : pair operation address : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            DUP 5;      # pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter))) : list operation : pair operation address : pair operation address : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            GET 6;      # address : list operation : pair operation address : pair operation address : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            CONTRACT %add_amm (pair (address %amm) (pair (address %gauge) (address %bribe))); # option (contract (pair (address %amm) (pair (address %gauge) (address %bribe)))) : list operation : pair operation address : pair operation address : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            IF_NONE
              {
                PUSH int 106; # int : list operation : pair operation address : pair operation address : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
                FAILWITH;   # FAILED
              }
              {}; # @some : list operation : pair operation address : pair operation address : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            PUSH mutez 0; # mutez : @some : list operation : pair operation address : pair operation address : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            DIG 3;      # pair operation address : mutez : @some : list operation : pair operation address : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            CDR;        # address : mutez : @some : list operation : pair operation address : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            DIG 4;      # pair operation address : address : mutez : @some : list operation : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            CDR;        # address : address : mutez : @some : list operation : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            DUP 6;      # @parameter%add_amm : address : address : mutez : @some : list operation : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            CAR;        # address : address : address : mutez : @some : list operation : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            PAIR 3;     # pair address (pair address address) : mutez : @some : list operation : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            TRANSFER_TOKENS; # operation : list operation : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            CONS;       # list operation : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            # sp.transfer(sp.record(amm = params.amm, tokens = params.tokens), sp.tez(0), sp.contract(sp.TRecord(amm = sp.TAddress, tokens = sp.TSet(sp.TRecord(token_address = sp.TAddress, type = sp.TPair(sp.TNat, sp.TNat)).layout(("token_address", "type")))).layout(("amm", "tokens")), self.data.fee_distributor, entry_point='add_amm').open_some()) # list operation : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            DUP 3;      # pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter))) : list operation : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            CAR;        # pair address (pair (big_map address unit) address) : list operation : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            GET 4;      # address : list operation : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            CONTRACT %add_amm (pair (address %amm) (set %tokens (pair (address %token_address) (pair %type nat nat)))); # option (contract (pair (address %amm) (set %tokens (pair (address %token_address) (pair %type nat nat))))) : list operation : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            IF_NONE
              {
                PUSH int 118; # int : list operation : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
                FAILWITH;   # FAILED
              }
              {}; # @some : list operation : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            PUSH mutez 0; # mutez : @some : list operation : @parameter%add_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            DIG 3;      # @parameter%add_amm : mutez : @some : list operation : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            DUP;        # @parameter%add_amm : @parameter%add_amm : mutez : @some : list operation : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            GET 4;      # set (pair (address %token_address) (pair %type nat nat)) : @parameter%add_amm : mutez : @some : list operation : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            SWAP;       # @parameter%add_amm : set (pair (address %token_address) (pair %type nat nat)) : mutez : @some : list operation : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            CAR;        # address : set (pair (address %token_address) (pair %type nat nat)) : mutez : @some : list operation : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            PAIR;       # pair address (set (pair (address %token_address) (pair %type nat nat))) : mutez : @some : list operation : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            TRANSFER_TOKENS; # operation : list operation : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            CONS;       # list operation : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
          }
          {
            SWAP;       # @storage : @parameter%remove_amm
            # == remove_amm ==
            # sp.verify(sp.sender == self.data.admin, 'NOT_AUTHORISED') # @storage : @parameter%remove_amm
            DUP;        # @storage : @storage : @parameter%remove_amm
            DUG 2;      # @storage : @parameter%remove_amm : @storage
            CAR;        # pair (address %admin) (pair (big_map %amm_registered address unit) (address %fee_distributor)) : @parameter%remove_amm : @storage
            CAR;        # address : @parameter%remove_amm : @storage
            SENDER;     # @sender : address : @parameter%remove_amm : @storage
            COMPARE;    # int : @parameter%remove_amm : @storage
            EQ;         # bool : @parameter%remove_amm : @storage
            IF
              {}
              {
                PUSH string "NOT_AUTHORISED"; # string : @parameter%remove_amm : @storage
                FAILWITH;   # FAILED
              }; # @parameter%remove_amm : @storage
            SWAP;       # @storage : @parameter%remove_amm
            # sp.verify(self.data.amm_registered.contains(params), 'AMM_INVALID') # @storage : @parameter%remove_amm
            DUP;        # @storage : @storage : @parameter%remove_amm
            DUG 2;      # @storage : @parameter%remove_amm : @storage
            CAR;        # pair (address %admin) (pair (big_map %amm_registered address unit) (address %fee_distributor)) : @parameter%remove_amm : @storage
            GET 3;      # big_map address unit : @parameter%remove_amm : @storage
            SWAP;       # @parameter%remove_amm : big_map address unit : @storage
            DUP;        # @parameter%remove_amm : @parameter%remove_amm : big_map address unit : @storage
            DUG 2;      # @parameter%remove_amm : big_map address unit : @parameter%remove_amm : @storage
            MEM;        # bool : @parameter%remove_amm : @storage
            IF
              {}
              {
                PUSH string "AMM_INVALID"; # string : @parameter%remove_amm : @storage
                FAILWITH;   # FAILED
              }; # @parameter%remove_amm : @storage
            SWAP;       # @storage : @parameter%remove_amm
            # del self.data.amm_registered[params] # @storage : @parameter%remove_amm
            UNPAIR;     # pair (address %admin) (pair (big_map %amm_registered address unit) (address %fee_distributor)) : pair (address %ply_address) (pair (address %ve_address) (address %voter)) : @parameter%remove_amm
            UNPAIR;     # address : pair (big_map %amm_registered address unit) (address %fee_distributor) : pair (address %ply_address) (pair (address %ve_address) (address %voter)) : @parameter%remove_amm
            SWAP;       # pair (big_map %amm_registered address unit) (address %fee_distributor) : address : pair (address %ply_address) (pair (address %ve_address) (address %voter)) : @parameter%remove_amm
            UNPAIR;     # big_map address unit : address : address : pair (address %ply_address) (pair (address %ve_address) (address %voter)) : @parameter%remove_amm
            NONE unit;  # option unit : big_map address unit : address : address : pair (address %ply_address) (pair (address %ve_address) (address %voter)) : @parameter%remove_amm
            DUP 6;      # @parameter%remove_amm : option unit : big_map address unit : address : address : pair (address %ply_address) (pair (address %ve_address) (address %voter)) : @parameter%remove_amm
            UPDATE;     # big_map address unit : address : address : pair (address %ply_address) (pair (address %ve_address) (address %voter)) : @parameter%remove_amm
            PAIR;       # pair (big_map address unit) address : address : pair (address %ply_address) (pair (address %ve_address) (address %voter)) : @parameter%remove_amm
            SWAP;       # address : pair (big_map address unit) address : pair (address %ply_address) (pair (address %ve_address) (address %voter)) : @parameter%remove_amm
            PAIR;       # pair address (pair (big_map address unit) address) : pair (address %ply_address) (pair (address %ve_address) (address %voter)) : @parameter%remove_amm
            PAIR;       # pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter))) : @parameter%remove_amm
            SWAP;       # @parameter%remove_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            # sp.transfer(params, sp.tez(0), sp.contract(sp.TAddress, self.data.voter, entry_point='remove_amm').open_some()) # @parameter%remove_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            NIL operation; # list operation : @parameter%remove_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            DUP 3;      # pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter))) : list operation : @parameter%remove_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            GET 6;      # address : list operation : @parameter%remove_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            CONTRACT %remove_amm address; # option (contract address) : list operation : @parameter%remove_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            IF_NONE
              {
                PUSH int 145; # int : list operation : @parameter%remove_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
                FAILWITH;   # FAILED
              }
              {}; # @some : list operation : @parameter%remove_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            PUSH mutez 0; # mutez : @some : list operation : @parameter%remove_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            DUP 4;      # @parameter%remove_amm : mutez : @some : list operation : @parameter%remove_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            TRANSFER_TOKENS; # operation : list operation : @parameter%remove_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            CONS;       # list operation : @parameter%remove_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            # sp.transfer(params, sp.tez(0), sp.contract(sp.TAddress, self.data.fee_distributor, entry_point='remove_amm').open_some()) # list operation : @parameter%remove_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            DUP 3;      # pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter))) : list operation : @parameter%remove_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            CAR;        # pair address (pair (big_map address unit) address) : list operation : @parameter%remove_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            GET 4;      # address : list operation : @parameter%remove_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            CONTRACT %remove_amm address; # option (contract address) : list operation : @parameter%remove_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            IF_NONE
              {
                PUSH int 153; # int : list operation : @parameter%remove_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
                FAILWITH;   # FAILED
              }
              {}; # @some : list operation : @parameter%remove_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            PUSH mutez 0; # mutez : @some : list operation : @parameter%remove_amm : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            DIG 3;      # @parameter%remove_amm : mutez : @some : list operation : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            TRANSFER_TOKENS; # operation : list operation : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
            CONS;       # list operation : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
          }; # list operation : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
      }
      {
        IF_LEFT
          {
            SWAP;       # @storage : @parameter%set_fee_distributor
            # == set_fee_distributor ==
            # sp.verify(sp.sender == self.data.admin, 'NOT_AUTHORISED') # @storage : @parameter%set_fee_distributor
            DUP;        # @storage : @storage : @parameter%set_fee_distributor
            DUG 2;      # @storage : @parameter%set_fee_distributor : @storage
            CAR;        # pair (address %admin) (pair (big_map %amm_registered address unit) (address %fee_distributor)) : @parameter%set_fee_distributor : @storage
            CAR;        # address : @parameter%set_fee_distributor : @storage
            SENDER;     # @sender : address : @parameter%set_fee_distributor : @storage
            COMPARE;    # int : @parameter%set_fee_distributor : @storage
            EQ;         # bool : @parameter%set_fee_distributor : @storage
            IF
              {}
              {
                PUSH string "NOT_AUTHORISED"; # string : @parameter%set_fee_distributor : @storage
                FAILWITH;   # FAILED
              }; # @parameter%set_fee_distributor : @storage
            SWAP;       # @storage : @parameter%set_fee_distributor
            # self.data.fee_distributor = params # @storage : @parameter%set_fee_distributor
            UNPAIR;     # pair (address %admin) (pair (big_map %amm_registered address unit) (address %fee_distributor)) : pair (address %ply_address) (pair (address %ve_address) (address %voter)) : @parameter%set_fee_distributor
            UNPAIR;     # address : pair (big_map %amm_registered address unit) (address %fee_distributor) : pair (address %ply_address) (pair (address %ve_address) (address %voter)) : @parameter%set_fee_distributor
            SWAP;       # pair (big_map %amm_registered address unit) (address %fee_distributor) : address : pair (address %ply_address) (pair (address %ve_address) (address %voter)) : @parameter%set_fee_distributor
            CAR;        # big_map address unit : address : pair (address %ply_address) (pair (address %ve_address) (address %voter)) : @parameter%set_fee_distributor
            DIG 3;      # @parameter%set_fee_distributor : big_map address unit : address : pair (address %ply_address) (pair (address %ve_address) (address %voter))
            SWAP;       # big_map address unit : @parameter%set_fee_distributor : address : pair (address %ply_address) (pair (address %ve_address) (address %voter))
            PAIR;       # pair (big_map address unit) @parameter%set_fee_distributor : address : pair (address %ply_address) (pair (address %ve_address) (address %voter))
            SWAP;       # address : pair (big_map address unit) @parameter%set_fee_distributor : pair (address %ply_address) (pair (address %ve_address) (address %voter))
            PAIR;       # pair address (pair (big_map address unit) @parameter%set_fee_distributor) : pair (address %ply_address) (pair (address %ve_address) (address %voter))
            PAIR;       # pair (pair address (pair (big_map address unit) @parameter%set_fee_distributor)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
          }
          {
            SWAP;       # @storage : @parameter%set_voter
            # == set_voter ==
            # sp.verify(sp.sender == self.data.admin, 'NOT_AUTHORISED') # @storage : @parameter%set_voter
            DUP;        # @storage : @storage : @parameter%set_voter
            DUG 2;      # @storage : @parameter%set_voter : @storage
            CAR;        # pair (address %admin) (pair (big_map %amm_registered address unit) (address %fee_distributor)) : @parameter%set_voter : @storage
            CAR;        # address : @parameter%set_voter : @storage
            SENDER;     # @sender : address : @parameter%set_voter : @storage
            COMPARE;    # int : @parameter%set_voter : @storage
            EQ;         # bool : @parameter%set_voter : @storage
            IF
              {}
              {
                PUSH string "NOT_AUTHORISED"; # string : @parameter%set_voter : @storage
                FAILWITH;   # FAILED
              }; # @parameter%set_voter : @storage
            # self.data.voter = params # @parameter%set_voter : @storage
            UPDATE 6;   # @storage
          }; # pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
        NIL operation; # list operation : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
      }; # list operation : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
    NIL operation; # list operation : list operation : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
    SWAP;       # list operation : list operation : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
    ITER
      {
        CONS;       # list operation : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
      }; # list operation : pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter)))
    PAIR;       # pair (list operation) (pair (pair address (pair (big_map address unit) address)) (pair (address %ply_address) (pair (address %ve_address) (address %voter))))
  };