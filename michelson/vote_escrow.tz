parameter (or (or (pair %balance_of (list %requests (pair (address %owner) (nat %token_id))) (contract %callback (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))))) (pair %create_lock (address %user_address) (pair (nat %base_value) (nat %end)))) (or (list %transfer (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))) (or (list %update_operators (or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id))) (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id))))) (nat %withdraw))));
storage   (pair (pair (address %base_token) (pair (big_map %ledger (pair address nat) nat) (big_map %locks nat (pair (nat %base_value) (nat %end))))) (pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))));
code
  {
    UNPAIR;     # @parameter : @storage
    IF_LEFT
      {
        IF_LEFT
          {
            # == balance_of ==
            # response = sp.local("response", sp.list([])) # @parameter%balance_of : @storage
            NIL (pair (pair address nat) nat); # list (pair (pair address nat) nat) : @parameter%balance_of : @storage
            SWAP;       # @parameter%balance_of : list (pair (pair address nat) nat) : @storage
            # for request in params.requests: ... # @parameter%balance_of : list (pair (pair address nat) nat) : @storage
            DUP;        # @parameter%balance_of : @parameter%balance_of : list (pair (pair address nat) nat) : @storage
            DUG 2;      # @parameter%balance_of : list (pair (pair address nat) nat) : @parameter%balance_of : @storage
            CAR;        # list (pair (address %owner) (nat %token_id)) : list (pair (pair address nat) nat) : @parameter%balance_of : @storage
            ITER
              {
                # sp.verify(self.data.locks.contains(request.token_id), 'FA2_TOKEN_UNDEFINED') # pair (address %owner) (nat %token_id) : list (pair (pair address nat) nat) : @parameter%balance_of : @storage
                DUP 4;      # @storage : pair (address %owner) (nat %token_id) : list (pair (pair address nat) nat) : @parameter%balance_of : @storage
                CAR;        # pair (address %base_token) (pair (big_map %ledger (pair address nat) nat) (big_map %locks nat (pair (nat %base_value) (nat %end)))) : pair (address %owner) (nat %token_id) : list (pair (pair address nat) nat) : @parameter%balance_of : @storage
                GET 4;      # big_map nat (pair (nat %base_value) (nat %end)) : pair (address %owner) (nat %token_id) : list (pair (pair address nat) nat) : @parameter%balance_of : @storage
                SWAP;       # pair (address %owner) (nat %token_id) : big_map nat (pair (nat %base_value) (nat %end)) : list (pair (pair address nat) nat) : @parameter%balance_of : @storage
                DUP;        # pair (address %owner) (nat %token_id) : pair (address %owner) (nat %token_id) : big_map nat (pair (nat %base_value) (nat %end)) : list (pair (pair address nat) nat) : @parameter%balance_of : @storage
                DUG 2;      # pair (address %owner) (nat %token_id) : big_map nat (pair (nat %base_value) (nat %end)) : pair (address %owner) (nat %token_id) : list (pair (pair address nat) nat) : @parameter%balance_of : @storage
                CDR;        # nat : big_map nat (pair (nat %base_value) (nat %end)) : pair (address %owner) (nat %token_id) : list (pair (pair address nat) nat) : @parameter%balance_of : @storage
                MEM;        # bool : pair (address %owner) (nat %token_id) : list (pair (pair address nat) nat) : @parameter%balance_of : @storage
                IF
                  {}
                  {
                    PUSH string "FA2_TOKEN_UNDEFINED"; # string : pair (address %owner) (nat %token_id) : list (pair (pair address nat) nat) : @parameter%balance_of : @storage
                    FAILWITH;   # FAILED
                  }; # pair (address %owner) (nat %token_id) : list (pair (pair address nat) nat) : @parameter%balance_of : @storage
                # if self.data.ledger.contains((request.owner, request.token_id)): # pair (address %owner) (nat %token_id) : list (pair (pair address nat) nat) : @parameter%balance_of : @storage
                DUP 4;      # @storage : pair (address %owner) (nat %token_id) : list (pair (pair address nat) nat) : @parameter%balance_of : @storage
                CAR;        # pair (address %base_token) (pair (big_map %ledger (pair address nat) nat) (big_map %locks nat (pair (nat %base_value) (nat %end)))) : pair (address %owner) (nat %token_id) : list (pair (pair address nat) nat) : @parameter%balance_of : @storage
                GET 3;      # big_map (pair address nat) nat : pair (address %owner) (nat %token_id) : list (pair (pair address nat) nat) : @parameter%balance_of : @storage
                SWAP;       # pair (address %owner) (nat %token_id) : big_map (pair address nat) nat : list (pair (pair address nat) nat) : @parameter%balance_of : @storage
                DUP;        # pair (address %owner) (nat %token_id) : pair (address %owner) (nat %token_id) : big_map (pair address nat) nat : list (pair (pair address nat) nat) : @parameter%balance_of : @storage
                CDR;        # nat : pair (address %owner) (nat %token_id) : big_map (pair address nat) nat : list (pair (pair address nat) nat) : @parameter%balance_of : @storage
                SWAP;       # pair (address %owner) (nat %token_id) : nat : big_map (pair address nat) nat : list (pair (pair address nat) nat) : @parameter%balance_of : @storage
                DUP;        # pair (address %owner) (nat %token_id) : pair (address %owner) (nat %token_id) : nat : big_map (pair address nat) nat : list (pair (pair address nat) nat) : @parameter%balance_of : @storage
                DUG 3;      # pair (address %owner) (nat %token_id) : nat : big_map (pair address nat) nat : pair (address %owner) (nat %token_id) : list (pair (pair address nat) nat) : @parameter%balance_of : @storage
                CAR;        # address : nat : big_map (pair address nat) nat : pair (address %owner) (nat %token_id) : list (pair (pair address nat) nat) : @parameter%balance_of : @storage
                PAIR;       # pair address nat : big_map (pair address nat) nat : pair (address %owner) (nat %token_id) : list (pair (pair address nat) nat) : @parameter%balance_of : @storage
                MEM;        # bool : pair (address %owner) (nat %token_id) : list (pair (pair address nat) nat) : @parameter%balance_of : @storage
                IF
                  {
                    SWAP;       # list (pair (pair address nat) nat) : pair (address %owner) (nat %token_id) : @parameter%balance_of : @storage
                    # response.value.push(sp.record(request = request, balance = self.data.ledger[(request.owner, request.token_id)])) # list (pair (pair address nat) nat) : pair (address %owner) (nat %token_id) : @parameter%balance_of : @storage
                    DUP 4;      # @storage : list (pair (pair address nat) nat) : pair (address %owner) (nat %token_id) : @parameter%balance_of : @storage
                    CAR;        # pair (address %base_token) (pair (big_map %ledger (pair address nat) nat) (big_map %locks nat (pair (nat %base_value) (nat %end)))) : list (pair (pair address nat) nat) : pair (address %owner) (nat %token_id) : @parameter%balance_of : @storage
                    GET 3;      # big_map (pair address nat) nat : list (pair (pair address nat) nat) : pair (address %owner) (nat %token_id) : @parameter%balance_of : @storage
                    DIG 2;      # pair (address %owner) (nat %token_id) : big_map (pair address nat) nat : list (pair (pair address nat) nat) : @parameter%balance_of : @storage
                    DUP;        # pair (address %owner) (nat %token_id) : pair (address %owner) (nat %token_id) : big_map (pair address nat) nat : list (pair (pair address nat) nat) : @parameter%balance_of : @storage
                    CDR;        # nat : pair (address %owner) (nat %token_id) : big_map (pair address nat) nat : list (pair (pair address nat) nat) : @parameter%balance_of : @storage
                    SWAP;       # pair (address %owner) (nat %token_id) : nat : big_map (pair address nat) nat : list (pair (pair address nat) nat) : @parameter%balance_of : @storage
                    DUP;        # pair (address %owner) (nat %token_id) : pair (address %owner) (nat %token_id) : nat : big_map (pair address nat) nat : list (pair (pair address nat) nat) : @parameter%balance_of : @storage
                    DUG 4;      # pair (address %owner) (nat %token_id) : nat : big_map (pair address nat) nat : list (pair (pair address nat) nat) : pair (address %owner) (nat %token_id) : @parameter%balance_of : @storage
                    CAR;        # address : nat : big_map (pair address nat) nat : list (pair (pair address nat) nat) : pair (address %owner) (nat %token_id) : @parameter%balance_of : @storage
                    PAIR;       # pair address nat : big_map (pair address nat) nat : list (pair (pair address nat) nat) : pair (address %owner) (nat %token_id) : @parameter%balance_of : @storage
                    GET;        # option nat : list (pair (pair address nat) nat) : pair (address %owner) (nat %token_id) : @parameter%balance_of : @storage
                    IF_NONE
                      {
                        PUSH int 194; # int : list (pair (pair address nat) nat) : pair (address %owner) (nat %token_id) : @parameter%balance_of : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : list (pair (pair address nat) nat) : pair (address %owner) (nat %token_id) : @parameter%balance_of : @storage
                    DIG 2;      # pair (address %owner) (nat %token_id) : @some : list (pair (pair address nat) nat) : @parameter%balance_of : @storage
                    PAIR;       # pair (pair (address %owner) (nat %token_id)) @some : list (pair (pair address nat) nat) : @parameter%balance_of : @storage
                    CONS;       # list (pair (pair address nat) nat) : @parameter%balance_of : @storage
                  }
                  {
                    SWAP;       # list (pair (pair address nat) nat) : pair (address %owner) (nat %token_id) : @parameter%balance_of : @storage
                    # response.value.push(sp.record(request = request, balance = 0)) # list (pair (pair address nat) nat) : pair (address %owner) (nat %token_id) : @parameter%balance_of : @storage
                    PUSH nat 0; # nat : list (pair (pair address nat) nat) : pair (address %owner) (nat %token_id) : @parameter%balance_of : @storage
                    DIG 2;      # pair (address %owner) (nat %token_id) : nat : list (pair (pair address nat) nat) : @parameter%balance_of : @storage
                    PAIR;       # pair (pair (address %owner) (nat %token_id)) nat : list (pair (pair address nat) nat) : @parameter%balance_of : @storage
                    CONS;       # list (pair (pair address nat) nat) : @parameter%balance_of : @storage
                  }; # list (pair (pair address nat) nat) : @parameter%balance_of : @storage
              }; # list (pair (pair address nat) nat) : @parameter%balance_of : @storage
            # sp.transfer(response.value, sp.tez(0), params.callback) # list (pair (pair address nat) nat) : @parameter%balance_of : @storage
            NIL operation; # list operation : list (pair (pair address nat) nat) : @parameter%balance_of : @storage
            DIG 2;      # @parameter%balance_of : list operation : list (pair (pair address nat) nat) : @storage
            CDR;        # contract (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))) : list operation : list (pair (pair address nat) nat) : @storage
            PUSH mutez 0; # mutez : contract (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))) : list operation : list (pair (pair address nat) nat) : @storage
            DIG 3;      # list (pair (pair address nat) nat) : mutez : contract (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))) : list operation : @storage
            TRANSFER_TOKENS; # operation : list operation : @storage
            CONS;       # list operation : @storage
          }
          {
            # == create_lock ==
            # sp.verify((sp.as_nat(((params.end // 604800) * 604800) - sp.as_nat(sp.now - sp.timestamp(0)), message = 'INVALID_LOCK_TIME') >= 604800) & (sp.as_nat(((params.end // 604800) * 604800) - sp.as_nat(sp.now - sp.timestamp(0)), message = 'INVALID_LOCK_TIME') <= 125798400), 'INVALID_LOCK_TIME') # @parameter%create_lock : @storage
            PUSH nat 604800; # nat : @parameter%create_lock : @storage
            PUSH timestamp "1970-01-01T00:00:00Z"; # timestamp : nat : @parameter%create_lock : @storage
            NOW;        # @now : timestamp : nat : @parameter%create_lock : @storage
            SUB;        # int : nat : @parameter%create_lock : @storage
            ISNAT;      # option nat : nat : @parameter%create_lock : @storage
            IF_NONE
              {
                PUSH int 234; # int : nat : @parameter%create_lock : @storage
                FAILWITH;   # FAILED
              }
              {}; # @some : nat : @parameter%create_lock : @storage
            PUSH nat 604800; # nat : @some : nat : @parameter%create_lock : @storage
            DUP;        # nat : nat : @some : nat : @parameter%create_lock : @storage
            DUP 5;      # @parameter%create_lock : nat : nat : @some : nat : @parameter%create_lock : @storage
            GET 4;      # nat : nat : nat : @some : nat : @parameter%create_lock : @storage
            EDIV;       # option (pair nat nat) : nat : @some : nat : @parameter%create_lock : @storage
            IF_NONE
              {
                PUSH int 237; # int : nat : @some : nat : @parameter%create_lock : @storage
                FAILWITH;   # FAILED
              }
              {
                CAR;        # nat : nat : @some : nat : @parameter%create_lock : @storage
              }; # nat : nat : @some : nat : @parameter%create_lock : @storage
            MUL;        # nat : @some : nat : @parameter%create_lock : @storage
            SUB;        # int : nat : @parameter%create_lock : @storage
            ISNAT;      # option nat : nat : @parameter%create_lock : @storage
            IF_NONE
              {
                PUSH string "INVALID_LOCK_TIME"; # string : nat : @parameter%create_lock : @storage
                FAILWITH;   # FAILED
              }
              {}; # @some : nat : @parameter%create_lock : @storage
            COMPARE;    # int : @parameter%create_lock : @storage
            GE;         # bool : @parameter%create_lock : @storage
            IF
              {
                PUSH nat 125798400; # nat : @parameter%create_lock : @storage
                PUSH timestamp "1970-01-01T00:00:00Z"; # timestamp : nat : @parameter%create_lock : @storage
                NOW;        # @now : timestamp : nat : @parameter%create_lock : @storage
                SUB;        # int : nat : @parameter%create_lock : @storage
                ISNAT;      # option nat : nat : @parameter%create_lock : @storage
                IF_NONE
                  {
                    PUSH int 234; # int : nat : @parameter%create_lock : @storage
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : nat : @parameter%create_lock : @storage
                PUSH nat 604800; # nat : @some : nat : @parameter%create_lock : @storage
                DUP;        # nat : nat : @some : nat : @parameter%create_lock : @storage
                DUP 5;      # @parameter%create_lock : nat : nat : @some : nat : @parameter%create_lock : @storage
                GET 4;      # nat : nat : nat : @some : nat : @parameter%create_lock : @storage
                EDIV;       # option (pair nat nat) : nat : @some : nat : @parameter%create_lock : @storage
                IF_NONE
                  {
                    PUSH int 237; # int : nat : @some : nat : @parameter%create_lock : @storage
                    FAILWITH;   # FAILED
                  }
                  {
                    CAR;        # nat : nat : @some : nat : @parameter%create_lock : @storage
                  }; # nat : nat : @some : nat : @parameter%create_lock : @storage
                MUL;        # nat : @some : nat : @parameter%create_lock : @storage
                SUB;        # int : nat : @parameter%create_lock : @storage
                ISNAT;      # option nat : nat : @parameter%create_lock : @storage
                IF_NONE
                  {
                    PUSH string "INVALID_LOCK_TIME"; # string : nat : @parameter%create_lock : @storage
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : nat : @parameter%create_lock : @storage
                COMPARE;    # int : @parameter%create_lock : @storage
                LE;         # bool : @parameter%create_lock : @storage
              }
              {
                PUSH bool False; # bool : @parameter%create_lock : @storage
              }; # bool : @parameter%create_lock : @storage
            IF
              {}
              {
                PUSH string "INVALID_LOCK_TIME"; # string : @parameter%create_lock : @storage
                FAILWITH;   # FAILED
              }; # @parameter%create_lock : @storage
            SWAP;       # @storage : @parameter%create_lock
            # self.data.uid += 1 # @storage : @parameter%create_lock
            DUP;        # @storage : @storage : @parameter%create_lock
            GET 6;      # nat : @storage : @parameter%create_lock
            PUSH nat 1; # nat : nat : @storage : @parameter%create_lock
            ADD;        # nat : @storage : @parameter%create_lock
            UPDATE 6;   # @storage : @parameter%create_lock
            # self.data.ledger[(params.user_address, self.data.uid)] = 1 # @storage : @parameter%create_lock
            DUP;        # @storage : @storage : @parameter%create_lock
            DUG 2;      # @storage : @parameter%create_lock : @storage
            UNPAIR;     # pair (address %base_token) (pair (big_map %ledger (pair address nat) nat) (big_map %locks nat (pair (nat %base_value) (nat %end)))) : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : @parameter%create_lock : @storage
            UNPAIR;     # address : pair (big_map %ledger (pair address nat) nat) (big_map %locks nat (pair (nat %base_value) (nat %end))) : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : @parameter%create_lock : @storage
            SWAP;       # pair (big_map %ledger (pair address nat) nat) (big_map %locks nat (pair (nat %base_value) (nat %end))) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : @parameter%create_lock : @storage
            UNPAIR;     # big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : @parameter%create_lock : @storage
            PUSH (option nat) (Some 1); # option nat : big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : @parameter%create_lock : @storage
            DIG 6;      # @storage : option nat : big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : @parameter%create_lock
            GET 6;      # nat : option nat : big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : @parameter%create_lock
            DUP 7;      # @parameter%create_lock : nat : option nat : big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : @parameter%create_lock
            CAR;        # address : nat : option nat : big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : @parameter%create_lock
            PAIR;       # pair address nat : option nat : big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : @parameter%create_lock
            UPDATE;     # big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : @parameter%create_lock
            PAIR;       # pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end))) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : @parameter%create_lock
            SWAP;       # address : pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end))) : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : @parameter%create_lock
            PAIR;       # pair address (pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end)))) : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : @parameter%create_lock
            PAIR;       # pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end))))) (pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock
            # self.data.locks[self.data.uid] = sp.record(base_value = params.base_value, end = (params.end // 604800) * 604800) # pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end))))) (pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock
            DUP;        # pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end))))) (pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end))))) (pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock
            DUG 2;      # pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end))))) (pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end))))) (pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            UNPAIR;     # pair address (pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end)))) : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end))))) (pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            UNPAIR;     # address : pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end))) : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end))))) (pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            SWAP;       # pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end))) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end))))) (pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            UNPAIR;     # big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end))))) (pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            SWAP;       # big_map nat (pair (nat %base_value) (nat %end)) : big_map (pair address nat) nat : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end))))) (pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            PUSH nat 604800; # nat : big_map nat (pair (nat %base_value) (nat %end)) : big_map (pair address nat) nat : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end))))) (pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            DUP;        # nat : nat : big_map nat (pair (nat %base_value) (nat %end)) : big_map (pair address nat) nat : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end))))) (pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            DUP 7;      # @parameter%create_lock : nat : nat : big_map nat (pair (nat %base_value) (nat %end)) : big_map (pair address nat) nat : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end))))) (pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            GET 4;      # nat : nat : nat : big_map nat (pair (nat %base_value) (nat %end)) : big_map (pair address nat) nat : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end))))) (pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            EDIV;       # option (pair nat nat) : nat : big_map nat (pair (nat %base_value) (nat %end)) : big_map (pair address nat) nat : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end))))) (pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            IF_NONE
              {
                PUSH int 237; # int : nat : big_map nat (pair (nat %base_value) (nat %end)) : big_map (pair address nat) nat : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end))))) (pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
                FAILWITH;   # FAILED
              }
              {
                CAR;        # nat : nat : big_map nat (pair (nat %base_value) (nat %end)) : big_map (pair address nat) nat : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end))))) (pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
              }; # nat : nat : big_map nat (pair (nat %base_value) (nat %end)) : big_map (pair address nat) nat : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end))))) (pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            MUL;        # nat : big_map nat (pair (nat %base_value) (nat %end)) : big_map (pair address nat) nat : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end))))) (pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            DUP 6;      # @parameter%create_lock : nat : big_map nat (pair (nat %base_value) (nat %end)) : big_map (pair address nat) nat : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end))))) (pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            GET 3;      # nat : nat : big_map nat (pair (nat %base_value) (nat %end)) : big_map (pair address nat) nat : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end))))) (pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            PAIR;       # pair nat nat : big_map nat (pair (nat %base_value) (nat %end)) : big_map (pair address nat) nat : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end))))) (pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            SOME;       # option (pair nat nat) : big_map nat (pair (nat %base_value) (nat %end)) : big_map (pair address nat) nat : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end))))) (pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            DIG 6;      # pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end))))) (pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : option (pair nat nat) : big_map nat (pair (nat %base_value) (nat %end)) : big_map (pair address nat) nat : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : @parameter%create_lock
            GET 6;      # nat : option (pair nat nat) : big_map nat (pair (nat %base_value) (nat %end)) : big_map (pair address nat) nat : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : @parameter%create_lock
            UPDATE;     # big_map nat (pair nat nat) : big_map (pair address nat) nat : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : @parameter%create_lock
            SWAP;       # big_map (pair address nat) nat : big_map nat (pair nat nat) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : @parameter%create_lock
            PAIR;       # pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : @parameter%create_lock
            SWAP;       # address : pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)) : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : @parameter%create_lock
            PAIR;       # pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat))) : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : @parameter%create_lock
            PAIR;       # pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock
            # self.data.num_token_checkpoints[self.data.uid] = 1 # pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock
            DUP;        # pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock
            DUG 2;      # pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            UNPAIR;     # pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat))) : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            SWAP;       # pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            UNPAIR;     # pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit) : pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid) : pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            UNPAIR;     # big_map nat nat : big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid) : pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            PUSH (option nat) (Some 1); # option nat : big_map nat nat : big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid) : pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            DIG 6;      # pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : option nat : big_map nat nat : big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid) : pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat))) : @parameter%create_lock
            GET 6;      # nat : option nat : big_map nat nat : big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid) : pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat))) : @parameter%create_lock
            UPDATE;     # big_map nat nat : big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid) : pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat))) : @parameter%create_lock
            PAIR;       # pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit) : pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid) : pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat))) : @parameter%create_lock
            PAIR;       # pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat))) : @parameter%create_lock
            SWAP;       # pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat))) : pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : @parameter%create_lock
            PAIR;       # pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock
            # self.data.token_checkpoints[(self.data.uid, self.data.num_token_checkpoints[self.data.uid])] = sp.record(slope = params.base_value // sp.as_nat(((params.end // 604800) * 604800) - sp.as_nat(sp.now - sp.timestamp(0)), message = 'INVALID_LOCK_TIME'), bias = (params.base_value * sp.as_nat(((params.end // 604800) * 604800) - sp.as_nat(sp.now - sp.timestamp(0)), message = 'INVALID_LOCK_TIME')) // 125798400, ts = sp.as_nat(sp.now - sp.timestamp(0))) # pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock
            DUP;        # pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock
            DUG 2;      # pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            DUP;        # pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            GET 5;      # big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            PUSH timestamp "1970-01-01T00:00:00Z"; # timestamp : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            NOW;        # @now : timestamp : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            SUB;        # int : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            ISNAT;      # option nat : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            IF_NONE
              {
                PUSH int 234; # int : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
                FAILWITH;   # FAILED
              }
              {}; # @some : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            PUSH nat 125798400; # nat : @some : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            PUSH timestamp "1970-01-01T00:00:00Z"; # timestamp : nat : @some : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            NOW;        # @now : timestamp : nat : @some : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            SUB;        # int : nat : @some : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            ISNAT;      # option nat : nat : @some : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            IF_NONE
              {
                PUSH int 234; # int : nat : @some : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
                FAILWITH;   # FAILED
              }
              {}; # @some : nat : @some : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            PUSH nat 604800; # nat : @some : nat : @some : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            DUP;        # nat : nat : @some : nat : @some : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            DUP 8;      # @parameter%create_lock : nat : nat : @some : nat : @some : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            GET 4;      # nat : nat : nat : @some : nat : @some : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            EDIV;       # option (pair nat nat) : nat : @some : nat : @some : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            IF_NONE
              {
                PUSH int 237; # int : nat : @some : nat : @some : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
                FAILWITH;   # FAILED
              }
              {
                CAR;        # nat : nat : @some : nat : @some : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
              }; # nat : nat : @some : nat : @some : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            MUL;        # nat : @some : nat : @some : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            SUB;        # int : nat : @some : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            ISNAT;      # option nat : nat : @some : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            IF_NONE
              {
                PUSH string "INVALID_LOCK_TIME"; # string : nat : @some : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
                FAILWITH;   # FAILED
              }
              {}; # @some : nat : @some : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            DUP 6;      # @parameter%create_lock : @some : nat : @some : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            GET 3;      # nat : @some : nat : @some : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            MUL;        # nat : nat : @some : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            EDIV;       # option (pair nat nat) : @some : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            IF_NONE
              {
                PUSH int 247; # int : @some : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
                FAILWITH;   # FAILED
              }
              {
                CAR;        # nat : @some : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
              }; # nat : @some : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            PUSH timestamp "1970-01-01T00:00:00Z"; # timestamp : nat : @some : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            NOW;        # @now : timestamp : nat : @some : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            SUB;        # int : nat : @some : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            ISNAT;      # option nat : nat : @some : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            IF_NONE
              {
                PUSH int 234; # int : nat : @some : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
                FAILWITH;   # FAILED
              }
              {}; # @some : nat : @some : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            PUSH nat 604800; # nat : @some : nat : @some : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            DUP;        # nat : nat : @some : nat : @some : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            DUP 8;      # @parameter%create_lock : nat : nat : @some : nat : @some : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            GET 4;      # nat : nat : nat : @some : nat : @some : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            EDIV;       # option (pair nat nat) : nat : @some : nat : @some : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            IF_NONE
              {
                PUSH int 237; # int : nat : @some : nat : @some : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
                FAILWITH;   # FAILED
              }
              {
                CAR;        # nat : nat : @some : nat : @some : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
              }; # nat : nat : @some : nat : @some : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            MUL;        # nat : @some : nat : @some : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            SUB;        # int : nat : @some : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            ISNAT;      # option nat : nat : @some : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            IF_NONE
              {
                PUSH string "INVALID_LOCK_TIME"; # string : nat : @some : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
                FAILWITH;   # FAILED
              }
              {}; # @some : nat : @some : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            DUP 6;      # @parameter%create_lock : @some : nat : @some : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            GET 3;      # nat : @some : nat : @some : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            EDIV;       # option (pair nat nat) : nat : @some : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            IF_NONE
              {
                PUSH int 246; # int : nat : @some : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
                FAILWITH;   # FAILED
              }
              {
                CAR;        # nat : nat : @some : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
              }; # nat : nat : @some : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            PAIR 3;     # pair nat (pair nat @some) : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            SOME;       # option (pair nat (pair nat @some)) : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            DIG 4;      # pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : option (pair nat (pair nat @some)) : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock
            DUP;        # pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : option (pair nat (pair nat @some)) : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock
            GET 3;      # pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : option (pair nat (pair nat @some)) : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock
            CAR;        # big_map nat nat : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : option (pair nat (pair nat @some)) : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock
            SWAP;       # pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : big_map nat nat : option (pair nat (pair nat @some)) : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock
            DUP;        # pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : big_map nat nat : option (pair nat (pair nat @some)) : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock
            DUG 6;      # pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : big_map nat nat : option (pair nat (pair nat @some)) : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            GET 6;      # nat : big_map nat nat : option (pair nat (pair nat @some)) : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            GET;        # option nat : option (pair nat (pair nat @some)) : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            IF_NONE
              {
                PUSH int 261; # int : option (pair nat (pair nat @some)) : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
                FAILWITH;   # FAILED
              }
              {}; # @some : option (pair nat (pair nat @some)) : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            DIG 5;      # pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @some : option (pair nat (pair nat @some)) : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock
            GET 6;      # nat : @some : option (pair nat (pair nat @some)) : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock
            PAIR;       # pair nat @some : option (pair nat (pair nat @some)) : big_map (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock
            UPDATE;     # big_map (pair nat nat) (pair nat (pair nat nat)) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock
            UPDATE 5;   # pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%create_lock
            SWAP;       # @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            # sp.transfer(sp.record(from_ = sp.sender, to_ = sp.self_address, value = params.base_value), sp.tez(0), sp.contract(sp.TRecord(from_ = sp.TAddress, to_ = sp.TAddress, value = sp.TNat).layout(("from_ as from", ("to_ as to", "value"))), self.data.base_token, entry_point='transfer').open_some()) # @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            NIL operation; # list operation : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            DUP 3;      # pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : list operation : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            CAR;        # pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat))) : list operation : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            CAR;        # address : list operation : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            CONTRACT %transfer (pair (address %from) (pair (address %to) (nat %value))); # option (contract (pair (address %from) (pair (address %to) (nat %value)))) : list operation : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            IF_NONE
              {
                PUSH int 15; # int : list operation : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
                FAILWITH;   # FAILED
              }
              {}; # @some : list operation : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            PUSH mutez 0; # mutez : @some : list operation : @parameter%create_lock : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            DIG 3;      # @parameter%create_lock : mutez : @some : list operation : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            GET 3;      # nat : mutez : @some : list operation : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            SELF_ADDRESS; # @self : nat : mutez : @some : list operation : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            SENDER;     # @sender : @self : nat : mutez : @some : list operation : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            PAIR 3;     # pair @sender (pair @self nat) : mutez : @some : list operation : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            TRANSFER_TOKENS; # operation : list operation : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
            CONS;       # list operation : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
          }; # list operation : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
      }
      {
        IF_LEFT
          {
            # == transfer ==
            # for transfer in params: ... # @parameter%transfer : @storage
            DUP;        # @parameter%transfer : @parameter%transfer : @storage
            ITER
              {
                # for tx in transfer.txs: ... # pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                DUP;        # pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                CDR;        # list (pair (address %to_) (pair (nat %token_id) (nat %amount))) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                ITER
                  {
                    SWAP;       # pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : @parameter%transfer : @storage
                    # sp.verify((sp.sender == transfer.from_) | (self.data.operators.contains(sp.record(owner = transfer.from_, operator = sp.sender, token_id = tx.token_id))), 'FA2_NOT_OPERATOR') # pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : @parameter%transfer : @storage
                    DUP;        # pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : @parameter%transfer : @storage
                    DUG 2;      # pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                    CAR;        # address : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                    SENDER;     # @sender : address : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                    COMPARE;    # int : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                    EQ;         # bool : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                    IF
                      {
                        PUSH bool True; # bool : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                      }
                      {
                        DUP 4;      # @storage : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                        GET 3;      # pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                        CDR;        # big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                        SWAP;       # pair (address %to_) (pair (nat %token_id) (nat %amount)) : big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                        DUP;        # pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                        DUG 2;      # pair (address %to_) (pair (nat %token_id) (nat %amount)) : big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                        GET 3;      # nat : big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                        SENDER;     # @sender : nat : big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                        DUP 5;      # pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @sender : nat : big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                        CAR;        # address : @sender : nat : big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                        PAIR 3;     # pair address (pair @sender nat) : big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                        MEM;        # bool : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                      }; # bool : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))) : @storage
                    IF
                      {}
                      {
                        PUSH string "FA2_NOT_OPERATOR"; # string : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))) : @storage
                        FAILWITH;   # FAILED
                      }; # pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))) : @storage
                    # sp.verify(self.data.locks.contains(tx.token_id), 'FA2_TOKEN_UNDEFINED') # pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))) : @storage
                    DUP 4;      # @storage : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))) : @storage
                    CAR;        # pair (address %base_token) (pair (big_map %ledger (pair address nat) nat) (big_map %locks nat (pair (nat %base_value) (nat %end)))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))) : @storage
                    GET 4;      # big_map nat (pair (nat %base_value) (nat %end)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))) : @storage
                    SWAP;       # pair (address %to_) (pair (nat %token_id) (nat %amount)) : big_map nat (pair (nat %base_value) (nat %end)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))) : @storage
                    DUP;        # pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : big_map nat (pair (nat %base_value) (nat %end)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))) : @storage
                    DUG 2;      # pair (address %to_) (pair (nat %token_id) (nat %amount)) : big_map nat (pair (nat %base_value) (nat %end)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))) : @storage
                    GET 3;      # nat : big_map nat (pair (nat %base_value) (nat %end)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))) : @storage
                    MEM;        # bool : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))) : @storage
                    IF
                      {}
                      {
                        PUSH string "FA2_TOKEN_UNDEFINED"; # string : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))) : @storage
                        FAILWITH;   # FAILED
                      }; # pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))) : @storage
                    # if tx.amount == 1: # pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))) : @storage
                    DUP;        # pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))) : @storage
                    GET 4;      # nat : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))) : @storage
                    PUSH nat 1; # nat : nat : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))) : @storage
                    COMPARE;    # int : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))) : @storage
                    EQ;         # bool : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))) : @storage
                    IF
                      {
                        # sp.verify(self.data.ledger[(transfer.from_, tx.token_id)] >= tx.amount, 'FA2_INSUFFICIENT_BALANCE') # pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))) : @storage
                        DUP;        # pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))) : @storage
                        GET 4;      # nat : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))) : @storage
                        DUP 5;      # @storage : nat : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))) : @storage
                        CAR;        # pair (address %base_token) (pair (big_map %ledger (pair address nat) nat) (big_map %locks nat (pair (nat %base_value) (nat %end)))) : nat : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))) : @storage
                        GET 3;      # big_map (pair address nat) nat : nat : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))) : @storage
                        DUP 3;      # pair (address %to_) (pair (nat %token_id) (nat %amount)) : big_map (pair address nat) nat : nat : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))) : @storage
                        GET 3;      # nat : big_map (pair address nat) nat : nat : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))) : @storage
                        DUP 5;      # pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : nat : big_map (pair address nat) nat : nat : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))) : @storage
                        CAR;        # address : nat : big_map (pair address nat) nat : nat : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))) : @storage
                        PAIR;       # pair address nat : big_map (pair address nat) nat : nat : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))) : @storage
                        GET;        # option nat : nat : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))) : @storage
                        IF_NONE
                          {
                            PUSH int 166; # int : nat : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))) : @storage
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : nat : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))) : @storage
                        COMPARE;    # int : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))) : @storage
                        GE;         # bool : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))) : @storage
                        IF
                          {}
                          {
                            PUSH string "FA2_INSUFFICIENT_BALANCE"; # string : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))) : @storage
                            FAILWITH;   # FAILED
                          }; # pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))) : @storage
                        # self.data.ledger[(transfer.from_, tx.token_id)] = sp.as_nat(self.data.ledger[(transfer.from_, tx.token_id)] - tx.amount) # pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))) : @storage
                        DUP 4;      # @storage : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))) : @storage
                        UNPAIR;     # pair (address %base_token) (pair (big_map %ledger (pair address nat) nat) (big_map %locks nat (pair (nat %base_value) (nat %end)))) : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))) : @storage
                        UNPAIR;     # address : pair (big_map %ledger (pair address nat) nat) (big_map %locks nat (pair (nat %base_value) (nat %end))) : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))) : @storage
                        SWAP;       # pair (big_map %ledger (pair address nat) nat) (big_map %locks nat (pair (nat %base_value) (nat %end))) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))) : @storage
                        UNPAIR;     # big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))) : @storage
                        DUP 5;      # pair (address %to_) (pair (nat %token_id) (nat %amount)) : big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))) : @storage
                        GET 4;      # nat : big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))) : @storage
                        DIG 8;      # @storage : nat : big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                        CAR;        # pair (address %base_token) (pair (big_map %ledger (pair address nat) nat) (big_map %locks nat (pair (nat %base_value) (nat %end)))) : nat : big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                        GET 3;      # big_map (pair address nat) nat : nat : big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                        DUP 7;      # pair (address %to_) (pair (nat %token_id) (nat %amount)) : big_map (pair address nat) nat : nat : big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                        GET 3;      # nat : big_map (pair address nat) nat : nat : big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                        DUP 9;      # pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : nat : big_map (pair address nat) nat : nat : big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                        CAR;        # address : nat : big_map (pair address nat) nat : nat : big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                        PAIR;       # pair address nat : big_map (pair address nat) nat : nat : big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                        GET;        # option nat : nat : big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                        IF_NONE
                          {
                            PUSH int 172; # int : nat : big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : nat : big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                        SUB;        # int : big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                        ISNAT;      # option nat : big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                        IF_NONE
                          {
                            PUSH int 171; # int : big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                        SOME;       # option nat : big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                        DUP 6;      # pair (address %to_) (pair (nat %token_id) (nat %amount)) : option nat : big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                        GET 3;      # nat : option nat : big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                        DUP 8;      # pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : nat : option nat : big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                        CAR;        # address : nat : option nat : big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                        PAIR;       # pair address nat : option nat : big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                        UPDATE;     # big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                        PAIR;       # pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end))) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                        SWAP;       # address : pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end))) : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                        PAIR;       # pair address (pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end)))) : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                        PAIR;       # pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end))))) (pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                        # if ~ (self.data.ledger.contains((tx.to_, tx.token_id))): # pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end))))) (pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                        DUP;        # pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end))))) (pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end))))) (pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                        DUG 4;      # pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end))))) (pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end))))) (pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
                        CAR;        # pair address (pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end)))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end))))) (pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
                        GET 3;      # big_map (pair address nat) nat : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end))))) (pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
                        SWAP;       # pair (address %to_) (pair (nat %token_id) (nat %amount)) : big_map (pair address nat) nat : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end))))) (pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
                        DUP;        # pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : big_map (pair address nat) nat : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end))))) (pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
                        GET 3;      # nat : pair (address %to_) (pair (nat %token_id) (nat %amount)) : big_map (pair address nat) nat : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end))))) (pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
                        SWAP;       # pair (address %to_) (pair (nat %token_id) (nat %amount)) : nat : big_map (pair address nat) nat : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end))))) (pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
                        DUP;        # pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : nat : big_map (pair address nat) nat : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end))))) (pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
                        DUG 3;      # pair (address %to_) (pair (nat %token_id) (nat %amount)) : nat : big_map (pair address nat) nat : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end))))) (pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
                        CAR;        # address : nat : big_map (pair address nat) nat : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end))))) (pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
                        PAIR;       # pair address nat : big_map (pair address nat) nat : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end))))) (pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
                        MEM;        # bool : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end))))) (pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
                        IF
                          {}
                          {
                            # self.data.ledger[(tx.to_, tx.token_id)] = 0 # pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end))))) (pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
                            DIG 3;      # pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end))))) (pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                            UNPAIR;     # pair address (pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end)))) : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                            UNPAIR;     # address : pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end))) : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                            SWAP;       # pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end))) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                            UNPAIR;     # big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                            PUSH (option nat) (Some 0); # option nat : big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                            DIG 5;      # pair (address %to_) (pair (nat %token_id) (nat %amount)) : option nat : big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                            DUP;        # pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : option nat : big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                            GET 3;      # nat : pair (address %to_) (pair (nat %token_id) (nat %amount)) : option nat : big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                            SWAP;       # pair (address %to_) (pair (nat %token_id) (nat %amount)) : nat : option nat : big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                            DUP;        # pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : nat : option nat : big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                            DUG 7;      # pair (address %to_) (pair (nat %token_id) (nat %amount)) : nat : option nat : big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                            CAR;        # address : nat : option nat : big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                            PAIR;       # pair address nat : option nat : big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                            UPDATE;     # big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                            PAIR;       # pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end))) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                            SWAP;       # address : pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end))) : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                            PAIR;       # pair address (pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end)))) : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                            PAIR;       # pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end))))) (pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                            DUG 3;      # pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end))))) (pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
                          }; # pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end))))) (pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
                        # self.data.ledger[(tx.to_, tx.token_id)] += tx.amount # pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end))))) (pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
                        DIG 3;      # pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end))))) (pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                        UNPAIR;     # pair address (pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end)))) : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                        UNPAIR;     # address : pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end))) : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                        SWAP;       # pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end))) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                        UNPAIR;     # big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                        DUP;        # big_map (pair address nat) nat : big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                        DIG 5;      # pair (address %to_) (pair (nat %token_id) (nat %amount)) : big_map (pair address nat) nat : big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                        DUP;        # pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : big_map (pair address nat) nat : big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                        GET 3;      # nat : pair (address %to_) (pair (nat %token_id) (nat %amount)) : big_map (pair address nat) nat : big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                        SWAP;       # pair (address %to_) (pair (nat %token_id) (nat %amount)) : nat : big_map (pair address nat) nat : big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                        DUP;        # pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : nat : big_map (pair address nat) nat : big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                        DUG 7;      # pair (address %to_) (pair (nat %token_id) (nat %amount)) : nat : big_map (pair address nat) nat : big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                        CAR;        # address : nat : big_map (pair address nat) nat : big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                        PAIR;       # pair address nat : big_map (pair address nat) nat : big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                        DUP;        # pair address nat : pair address nat : big_map (pair address nat) nat : big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                        DUG 2;      # pair address nat : big_map (pair address nat) nat : pair address nat : big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                        GET;        # option nat : pair address nat : big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                        IF_NONE
                          {
                            PUSH int 176; # int : pair address nat : big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : pair address nat : big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                        DIG 6;      # pair (address %to_) (pair (nat %token_id) (nat %amount)) : @some : pair address nat : big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                        GET 4;      # nat : @some : pair address nat : big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                        ADD;        # nat : pair address nat : big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                        SOME;       # option nat : pair address nat : big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                        SWAP;       # pair address nat : option nat : big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                        UPDATE;     # big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                        PAIR;       # pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end))) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                        SWAP;       # address : pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end))) : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                        PAIR;       # pair address (pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end)))) : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                        PAIR;       # pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end))))) (pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                        DUG 2;      # pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end))))) (pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
                      }
                      {
                        PUSH string "FA2_INVALID_AMOUNT"; # string : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))) : @storage
                        FAILWITH;   # FAILED
                      }; # pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair (nat %base_value) (nat %end))))) (pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
                  }; # pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                DROP;       # @parameter%transfer : @storage
              }; # @parameter%transfer : @storage
            DROP;       # @storage
            NIL operation; # list operation : @storage
          }
          {
            IF_LEFT
              {
                # == update_operators ==
                # for update in params: ... # @parameter%update_operators : @storage
                DUP;        # @parameter%update_operators : @parameter%update_operators : @storage
                ITER
                  {
                    # with update.match_cases(...): # or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id))) (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id))) : @parameter%update_operators : @storage
                    IF_LEFT
                      {
                        # sp.verify(add_operator.owner == sp.sender, 'FA2_NOT_OWNER') # pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators : @storage
                        DUP;        # pair (address %owner) (pair (address %operator) (nat %token_id)) : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators : @storage
                        CAR;        # address : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators : @storage
                        SENDER;     # @sender : address : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators : @storage
                        COMPARE;    # int : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators : @storage
                        EQ;         # bool : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators : @storage
                        IF
                          {}
                          {
                            PUSH string "FA2_NOT_OWNER"; # string : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators : @storage
                            FAILWITH;   # FAILED
                          }; # pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators : @storage
                        # self.data.operators[add_operator] = sp.unit # pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators : @storage
                        DIG 2;      # @storage : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators
                        UNPAIR;     # pair (address %base_token) (pair (big_map %ledger (pair address nat) nat) (big_map %locks nat (pair (nat %base_value) (nat %end)))) : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators
                        SWAP;       # pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %base_token) (pair (big_map %ledger (pair address nat) nat) (big_map %locks nat (pair (nat %base_value) (nat %end)))) : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators
                        UNPAIR;     # pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit) : pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid) : pair (address %base_token) (pair (big_map %ledger (pair address nat) nat) (big_map %locks nat (pair (nat %base_value) (nat %end)))) : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators
                        UNPAIR;     # big_map nat nat : big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid) : pair (address %base_token) (pair (big_map %ledger (pair address nat) nat) (big_map %locks nat (pair (nat %base_value) (nat %end)))) : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators
                        SWAP;       # big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : big_map nat nat : pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid) : pair (address %base_token) (pair (big_map %ledger (pair address nat) nat) (big_map %locks nat (pair (nat %base_value) (nat %end)))) : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators
                        PUSH (option unit) (Some Unit); # option unit : big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : big_map nat nat : pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid) : pair (address %base_token) (pair (big_map %ledger (pair address nat) nat) (big_map %locks nat (pair (nat %base_value) (nat %end)))) : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators
                        DIG 5;      # pair (address %owner) (pair (address %operator) (nat %token_id)) : option unit : big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : big_map nat nat : pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid) : pair (address %base_token) (pair (big_map %ledger (pair address nat) nat) (big_map %locks nat (pair (nat %base_value) (nat %end)))) : @parameter%update_operators
                        UPDATE;     # big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : big_map nat nat : pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid) : pair (address %base_token) (pair (big_map %ledger (pair address nat) nat) (big_map %locks nat (pair (nat %base_value) (nat %end)))) : @parameter%update_operators
                        SWAP;       # big_map nat nat : big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid) : pair (address %base_token) (pair (big_map %ledger (pair address nat) nat) (big_map %locks nat (pair (nat %base_value) (nat %end)))) : @parameter%update_operators
                        PAIR;       # pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit) : pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid) : pair (address %base_token) (pair (big_map %ledger (pair address nat) nat) (big_map %locks nat (pair (nat %base_value) (nat %end)))) : @parameter%update_operators
                        PAIR;       # pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %base_token) (pair (big_map %ledger (pair address nat) nat) (big_map %locks nat (pair (nat %base_value) (nat %end)))) : @parameter%update_operators
                        SWAP;       # pair (address %base_token) (pair (big_map %ledger (pair address nat) nat) (big_map %locks nat (pair (nat %base_value) (nat %end)))) : pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : @parameter%update_operators
                        PAIR;       # pair (pair (address %base_token) (pair (big_map %ledger (pair address nat) nat) (big_map %locks nat (pair (nat %base_value) (nat %end))))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%update_operators
                        SWAP;       # @parameter%update_operators : pair (pair (address %base_token) (pair (big_map %ledger (pair address nat) nat) (big_map %locks nat (pair (nat %base_value) (nat %end))))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
                      }
                      {
                        # sp.verify(remove_operator.owner == sp.sender, 'FA2_NOT_OWNER') # pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators : @storage
                        DUP;        # pair (address %owner) (pair (address %operator) (nat %token_id)) : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators : @storage
                        CAR;        # address : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators : @storage
                        SENDER;     # @sender : address : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators : @storage
                        COMPARE;    # int : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators : @storage
                        EQ;         # bool : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators : @storage
                        IF
                          {}
                          {
                            PUSH string "FA2_NOT_OWNER"; # string : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators : @storage
                            FAILWITH;   # FAILED
                          }; # pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators : @storage
                        # del self.data.operators[remove_operator] # pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators : @storage
                        DIG 2;      # @storage : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators
                        UNPAIR;     # pair (address %base_token) (pair (big_map %ledger (pair address nat) nat) (big_map %locks nat (pair (nat %base_value) (nat %end)))) : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators
                        SWAP;       # pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %base_token) (pair (big_map %ledger (pair address nat) nat) (big_map %locks nat (pair (nat %base_value) (nat %end)))) : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators
                        UNPAIR;     # pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit) : pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid) : pair (address %base_token) (pair (big_map %ledger (pair address nat) nat) (big_map %locks nat (pair (nat %base_value) (nat %end)))) : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators
                        UNPAIR;     # big_map nat nat : big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid) : pair (address %base_token) (pair (big_map %ledger (pair address nat) nat) (big_map %locks nat (pair (nat %base_value) (nat %end)))) : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators
                        SWAP;       # big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : big_map nat nat : pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid) : pair (address %base_token) (pair (big_map %ledger (pair address nat) nat) (big_map %locks nat (pair (nat %base_value) (nat %end)))) : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators
                        NONE unit;  # option unit : big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : big_map nat nat : pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid) : pair (address %base_token) (pair (big_map %ledger (pair address nat) nat) (big_map %locks nat (pair (nat %base_value) (nat %end)))) : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators
                        DIG 5;      # pair (address %owner) (pair (address %operator) (nat %token_id)) : option unit : big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : big_map nat nat : pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid) : pair (address %base_token) (pair (big_map %ledger (pair address nat) nat) (big_map %locks nat (pair (nat %base_value) (nat %end)))) : @parameter%update_operators
                        UPDATE;     # big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : big_map nat nat : pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid) : pair (address %base_token) (pair (big_map %ledger (pair address nat) nat) (big_map %locks nat (pair (nat %base_value) (nat %end)))) : @parameter%update_operators
                        SWAP;       # big_map nat nat : big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid) : pair (address %base_token) (pair (big_map %ledger (pair address nat) nat) (big_map %locks nat (pair (nat %base_value) (nat %end)))) : @parameter%update_operators
                        PAIR;       # pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit) : pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid) : pair (address %base_token) (pair (big_map %ledger (pair address nat) nat) (big_map %locks nat (pair (nat %base_value) (nat %end)))) : @parameter%update_operators
                        PAIR;       # pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : pair (address %base_token) (pair (big_map %ledger (pair address nat) nat) (big_map %locks nat (pair (nat %base_value) (nat %end)))) : @parameter%update_operators
                        SWAP;       # pair (address %base_token) (pair (big_map %ledger (pair address nat) nat) (big_map %locks nat (pair (nat %base_value) (nat %end)))) : pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : @parameter%update_operators
                        PAIR;       # pair (pair (address %base_token) (pair (big_map %ledger (pair address nat) nat) (big_map %locks nat (pair (nat %base_value) (nat %end))))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : @parameter%update_operators
                        SWAP;       # @parameter%update_operators : pair (pair (address %base_token) (pair (big_map %ledger (pair address nat) nat) (big_map %locks nat (pair (nat %base_value) (nat %end))))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
                      }; # list (or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id))) (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id)))) : pair (pair (address %base_token) (pair (big_map %ledger (pair address nat) nat) (big_map %locks nat (pair (nat %base_value) (nat %end))))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
                  }; # @parameter%update_operators : @storage
                DROP;       # @storage
                NIL operation; # list operation : @storage
              }
              {
                SWAP;       # @storage : @parameter%withdraw
                # == withdraw ==
                # sp.verify(self.data.locks.contains(params), 'LOCK_DOES_NOT_EXIST') # @storage : @parameter%withdraw
                DUP;        # @storage : @storage : @parameter%withdraw
                DUG 2;      # @storage : @parameter%withdraw : @storage
                CAR;        # pair (address %base_token) (pair (big_map %ledger (pair address nat) nat) (big_map %locks nat (pair (nat %base_value) (nat %end)))) : @parameter%withdraw : @storage
                GET 4;      # big_map nat (pair (nat %base_value) (nat %end)) : @parameter%withdraw : @storage
                SWAP;       # @parameter%withdraw : big_map nat (pair (nat %base_value) (nat %end)) : @storage
                DUP;        # @parameter%withdraw : @parameter%withdraw : big_map nat (pair (nat %base_value) (nat %end)) : @storage
                DUG 2;      # @parameter%withdraw : big_map nat (pair (nat %base_value) (nat %end)) : @parameter%withdraw : @storage
                MEM;        # bool : @parameter%withdraw : @storage
                IF
                  {}
                  {
                    PUSH string "LOCK_DOES_NOT_EXIST"; # string : @parameter%withdraw : @storage
                    FAILWITH;   # FAILED
                  }; # @parameter%withdraw : @storage
                # sp.verify(self.data.ledger.get((sp.sender, params), default_value = 0) == 1, 'NOT_AUTHORISED') # @parameter%withdraw : @storage
                PUSH nat 1; # nat : @parameter%withdraw : @storage
                DUP 3;      # @storage : nat : @parameter%withdraw : @storage
                CAR;        # pair (address %base_token) (pair (big_map %ledger (pair address nat) nat) (big_map %locks nat (pair (nat %base_value) (nat %end)))) : nat : @parameter%withdraw : @storage
                GET 3;      # big_map (pair address nat) nat : nat : @parameter%withdraw : @storage
                DUP 3;      # @parameter%withdraw : big_map (pair address nat) nat : nat : @parameter%withdraw : @storage
                SENDER;     # @sender : @parameter%withdraw : big_map (pair address nat) nat : nat : @parameter%withdraw : @storage
                PAIR;       # pair @sender @parameter%withdraw : big_map (pair address nat) nat : nat : @parameter%withdraw : @storage
                GET;        # option nat : nat : @parameter%withdraw : @storage
                IF_NONE
                  {
                    PUSH nat 0; # nat : nat : @parameter%withdraw : @storage
                  }
                  {}; # nat : nat : @parameter%withdraw : @storage
                COMPARE;    # int : @parameter%withdraw : @storage
                EQ;         # bool : @parameter%withdraw : @storage
                IF
                  {}
                  {
                    PUSH string "NOT_AUTHORISED"; # string : @parameter%withdraw : @storage
                    FAILWITH;   # FAILED
                  }; # @parameter%withdraw : @storage
                SWAP;       # @storage : @parameter%withdraw
                # sp.verify(sp.as_nat(sp.now - sp.timestamp(0)) > self.data.locks[params].end, 'LOCK_YET_TO_EXPIRE') # @storage : @parameter%withdraw
                DUP;        # @storage : @storage : @parameter%withdraw
                DUG 2;      # @storage : @parameter%withdraw : @storage
                CAR;        # pair (address %base_token) (pair (big_map %ledger (pair address nat) nat) (big_map %locks nat (pair (nat %base_value) (nat %end)))) : @parameter%withdraw : @storage
                GET 4;      # big_map nat (pair (nat %base_value) (nat %end)) : @parameter%withdraw : @storage
                SWAP;       # @parameter%withdraw : big_map nat (pair (nat %base_value) (nat %end)) : @storage
                DUP;        # @parameter%withdraw : @parameter%withdraw : big_map nat (pair (nat %base_value) (nat %end)) : @storage
                DUG 2;      # @parameter%withdraw : big_map nat (pair (nat %base_value) (nat %end)) : @parameter%withdraw : @storage
                GET;        # option (pair (nat %base_value) (nat %end)) : @parameter%withdraw : @storage
                IF_NONE
                  {
                    PUSH int 287; # int : @parameter%withdraw : @storage
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : @parameter%withdraw : @storage
                CDR;        # nat : @parameter%withdraw : @storage
                PUSH timestamp "1970-01-01T00:00:00Z"; # timestamp : nat : @parameter%withdraw : @storage
                NOW;        # @now : timestamp : nat : @parameter%withdraw : @storage
                SUB;        # int : nat : @parameter%withdraw : @storage
                ISNAT;      # option nat : nat : @parameter%withdraw : @storage
                IF_NONE
                  {
                    PUSH int 282; # int : nat : @parameter%withdraw : @storage
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : nat : @parameter%withdraw : @storage
                COMPARE;    # int : @parameter%withdraw : @storage
                GT;         # bool : @parameter%withdraw : @storage
                IF
                  {}
                  {
                    PUSH string "LOCK_YET_TO_EXPIRE"; # string : @parameter%withdraw : @storage
                    FAILWITH;   # FAILED
                  }; # @parameter%withdraw : @storage
                # sp.transfer(sp.record(from_ = sp.self_address, to_ = sp.sender, value = self.data.locks[params].base_value), sp.tez(0), sp.contract(sp.TRecord(from_ = sp.TAddress, to_ = sp.TAddress, value = sp.TNat).layout(("from_ as from", ("to_ as to", "value"))), self.data.base_token, entry_point='transfer').open_some()) # @parameter%withdraw : @storage
                NIL operation; # list operation : @parameter%withdraw : @storage
                DUP 3;      # @storage : list operation : @parameter%withdraw : @storage
                CAR;        # pair (address %base_token) (pair (big_map %ledger (pair address nat) nat) (big_map %locks nat (pair (nat %base_value) (nat %end)))) : list operation : @parameter%withdraw : @storage
                CAR;        # address : list operation : @parameter%withdraw : @storage
                CONTRACT %transfer (pair (address %from) (pair (address %to) (nat %value))); # option (contract (pair (address %from) (pair (address %to) (nat %value)))) : list operation : @parameter%withdraw : @storage
                IF_NONE
                  {
                    PUSH int 15; # int : list operation : @parameter%withdraw : @storage
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : list operation : @parameter%withdraw : @storage
                PUSH mutez 0; # mutez : @some : list operation : @parameter%withdraw : @storage
                DUP 5;      # @storage : mutez : @some : list operation : @parameter%withdraw : @storage
                CAR;        # pair (address %base_token) (pair (big_map %ledger (pair address nat) nat) (big_map %locks nat (pair (nat %base_value) (nat %end)))) : mutez : @some : list operation : @parameter%withdraw : @storage
                GET 4;      # big_map nat (pair (nat %base_value) (nat %end)) : mutez : @some : list operation : @parameter%withdraw : @storage
                DUP 5;      # @parameter%withdraw : big_map nat (pair (nat %base_value) (nat %end)) : mutez : @some : list operation : @parameter%withdraw : @storage
                GET;        # option (pair (nat %base_value) (nat %end)) : mutez : @some : list operation : @parameter%withdraw : @storage
                IF_NONE
                  {
                    PUSH int 294; # int : mutez : @some : list operation : @parameter%withdraw : @storage
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : mutez : @some : list operation : @parameter%withdraw : @storage
                CAR;        # nat : mutez : @some : list operation : @parameter%withdraw : @storage
                SENDER;     # @sender : nat : mutez : @some : list operation : @parameter%withdraw : @storage
                SELF_ADDRESS; # @self : @sender : nat : mutez : @some : list operation : @parameter%withdraw : @storage
                PAIR 3;     # pair @self (pair @sender nat) : mutez : @some : list operation : @parameter%withdraw : @storage
                TRANSFER_TOKENS; # operation : list operation : @parameter%withdraw : @storage
                CONS;       # list operation : @parameter%withdraw : @storage
                # self.data.ledger[(sp.sender, params)] = 0 # list operation : @parameter%withdraw : @storage
                DIG 2;      # @storage : list operation : @parameter%withdraw
                UNPAIR;     # pair (address %base_token) (pair (big_map %ledger (pair address nat) nat) (big_map %locks nat (pair (nat %base_value) (nat %end)))) : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : list operation : @parameter%withdraw
                UNPAIR;     # address : pair (big_map %ledger (pair address nat) nat) (big_map %locks nat (pair (nat %base_value) (nat %end))) : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : list operation : @parameter%withdraw
                SWAP;       # pair (big_map %ledger (pair address nat) nat) (big_map %locks nat (pair (nat %base_value) (nat %end))) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : list operation : @parameter%withdraw
                UNPAIR;     # big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : list operation : @parameter%withdraw
                PUSH (option nat) (Some 0); # option nat : big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : list operation : @parameter%withdraw
                DUP 7;      # @parameter%withdraw : option nat : big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : list operation : @parameter%withdraw
                SENDER;     # @sender : @parameter%withdraw : option nat : big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : list operation : @parameter%withdraw
                PAIR;       # pair @sender @parameter%withdraw : option nat : big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : list operation : @parameter%withdraw
                UPDATE;     # big_map (pair address nat) nat : big_map nat (pair (nat %base_value) (nat %end)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : list operation : @parameter%withdraw
                SWAP;       # big_map nat (pair (nat %base_value) (nat %end)) : big_map (pair address nat) nat : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : list operation : @parameter%withdraw
                # del self.data.locks[params] # big_map nat (pair (nat %base_value) (nat %end)) : big_map (pair address nat) nat : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : list operation : @parameter%withdraw
                NONE (pair nat nat); # option (pair nat nat) : big_map nat (pair (nat %base_value) (nat %end)) : big_map (pair address nat) nat : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : list operation : @parameter%withdraw
                DIG 6;      # @parameter%withdraw : option (pair nat nat) : big_map nat (pair (nat %base_value) (nat %end)) : big_map (pair address nat) nat : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : list operation
                UPDATE;     # big_map nat (pair nat nat) : big_map (pair address nat) nat : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : list operation
                SWAP;       # big_map (pair address nat) nat : big_map nat (pair nat nat) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : list operation
                PAIR;       # pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)) : address : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : list operation
                SWAP;       # address : pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)) : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : list operation
                PAIR;       # pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat))) : pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)) : list operation
                PAIR;       # pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))) : list operation
                SWAP;       # list operation : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
              }; # list operation : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
          }; # list operation : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map %num_token_checkpoints nat nat) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
      }; # list operation : pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid)))
    PAIR;       # pair (list operation) (pair (pair address (pair (big_map (pair address nat) nat) (big_map nat (pair nat nat)))) (pair (pair (big_map nat nat) (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %token_checkpoints (pair nat nat) (pair (nat %slope) (pair (nat %bias) (nat %ts)))) (nat %uid))))
  };